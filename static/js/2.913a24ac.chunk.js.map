{"version":3,"sources":["../node_modules/dagre/lib/lodash.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js","../node_modules/lodash/isArray.js","../node_modules/fabric/dist/fabric.js","../node_modules/dagre/lib/util.js","../node_modules/graphlib/lib/lodash.js","../node_modules/lodash/isObject.js","../node_modules/lodash.defaults/index.js","../node_modules/dagre/lib/graphlib.js","../node_modules/lodash/_root.js","../node_modules/lodash/isObjectLike.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js","../node_modules/lodash/isArrayLike.js","../node_modules/lodash/_baseIteratee.js","../node_modules/lodash/keys.js","../node_modules/lodash/_getNative.js","../node_modules/lodash/_baseGetTag.js","../node_modules/lodash/identity.js","../node_modules/lodash/eq.js","../node_modules/lodash/_Symbol.js","../node_modules/lodash/isBuffer.js","../node_modules/lodash/keysIn.js","../node_modules/lodash/_getTag.js","../node_modules/lodash/isSymbol.js","../node_modules/lodash/isFunction.js","../node_modules/lodash/_copyObject.js","../node_modules/lodash/isArguments.js","../node_modules/lodash/isTypedArray.js","../node_modules/lodash/_toKey.js","../node_modules/graphlib/index.js","../node_modules/lodash/_Stack.js","../node_modules/lodash/_ListCache.js","../node_modules/lodash/_assocIndexOf.js","../node_modules/lodash/_nativeCreate.js","../node_modules/lodash/_getMapData.js","../node_modules/lodash/_assignValue.js","../node_modules/lodash/_baseAssignValue.js","../node_modules/lodash/_isIndex.js","../node_modules/lodash/_baseUnary.js","../node_modules/lodash/_isPrototype.js","../node_modules/lodash/_getPrototype.js","../node_modules/lodash/_baseEach.js","../node_modules/lodash/_castPath.js","../node_modules/lodash/_arrayMap.js","../node_modules/lodash/_baseRest.js","../node_modules/lodash/_isIterateeCall.js","../node_modules/dagre/lib/rank/util.js","../node_modules/util/util.js","../node_modules/graphlib/lib/graph.js","../node_modules/lodash/_Map.js","../node_modules/lodash/_MapCache.js","../node_modules/lodash/_arrayEach.js","../node_modules/webpack/buildin/module.js","../node_modules/lodash/isLength.js","../node_modules/lodash/_nodeUtil.js","../node_modules/lodash/_baseKeys.js","../node_modules/lodash/_getSymbols.js","../node_modules/lodash/_arrayPush.js","../node_modules/lodash/_cloneArrayBuffer.js","../node_modules/lodash/constant.js","../node_modules/lodash/_baseForOwn.js","../node_modules/lodash/_baseFor.js","../node_modules/lodash/_setToArray.js","../node_modules/lodash/_baseGet.js","../node_modules/lodash/_isKey.js","../node_modules/lodash/_baseFlatten.js","../node_modules/lodash/_baseExtremum.js","../node_modules/dagre/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread.js","../node_modules/webpack/buildin/global.js","../node_modules/lodash/_baseClone.js","../node_modules/lodash/_freeGlobal.js","../node_modules/lodash/_toSource.js","../node_modules/lodash/_defineProperty.js","../node_modules/lodash/_arrayLikeKeys.js","../node_modules/lodash/_overArg.js","../node_modules/lodash/_cloneBuffer.js","../node_modules/lodash/_copyArray.js","../node_modules/lodash/_arrayFilter.js","../node_modules/lodash/stubArray.js","../node_modules/lodash/_getSymbolsIn.js","../node_modules/lodash/_getAllKeys.js","../node_modules/lodash/_baseGetAllKeys.js","../node_modules/lodash/_Set.js","../node_modules/lodash/_Uint8Array.js","../node_modules/lodash/_cloneTypedArray.js","../node_modules/lodash/_initCloneObject.js","../node_modules/lodash/_baseCreate.js","../node_modules/lodash/each.js","../node_modules/lodash/forEach.js","../node_modules/lodash/_castFunction.js","../node_modules/lodash/filter.js","../node_modules/lodash/_baseIsEqual.js","../node_modules/lodash/_equalArrays.js","../node_modules/lodash/_SetCache.js","../node_modules/lodash/_cacheHas.js","../node_modules/lodash/_isStrictComparable.js","../node_modules/lodash/_matchesStrictComparable.js","../node_modules/lodash/toString.js","../node_modules/lodash/hasIn.js","../node_modules/lodash/_hasPath.js","../node_modules/lodash/_baseProperty.js","../node_modules/lodash/has.js","../node_modules/lodash/isUndefined.js","../node_modules/lodash/map.js","../node_modules/lodash/_baseMap.js","../node_modules/lodash/reduce.js","../node_modules/lodash/_overRest.js","../node_modules/lodash/_setToString.js","../node_modules/lodash/_baseFindIndex.js","../node_modules/lodash/isArrayLikeObject.js","../node_modules/lodash/values.js","../node_modules/graphlib/lib/alg/dijkstra.js","../node_modules/graphlib/lib/data/priority-queue.js","../node_modules/graphlib/lib/alg/tarjan.js","../node_modules/graphlib/lib/alg/topsort.js","../node_modules/graphlib/lib/alg/dfs.js","../node_modules/lodash/toFinite.js","../node_modules/lodash/flatten.js","../node_modules/lodash/_assignMergeValue.js","../node_modules/lodash/_safeGet.js","../node_modules/lodash/_baseLt.js","../node_modules/dagre/lib/rank/feasible-tree.js","../node_modules/buffer/index.js","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/isarray/index.js","../node_modules/process/browser.js","../node_modules/util/support/isBufferBrowser.js","../node_modules/inherits/inherits_browser.js","../node_modules/graphlib/lib/index.js","../node_modules/lodash/clone.js","../node_modules/lodash/_listCacheClear.js","../node_modules/lodash/_listCacheDelete.js","../node_modules/lodash/_listCacheGet.js","../node_modules/lodash/_listCacheHas.js","../node_modules/lodash/_listCacheSet.js","../node_modules/lodash/_stackClear.js","../node_modules/lodash/_stackDelete.js","../node_modules/lodash/_stackGet.js","../node_modules/lodash/_stackHas.js","../node_modules/lodash/_stackSet.js","../node_modules/lodash/_baseIsNative.js","../node_modules/lodash/_getRawTag.js","../node_modules/lodash/_objectToString.js","../node_modules/lodash/_isMasked.js","../node_modules/lodash/_coreJsData.js","../node_modules/lodash/_getValue.js","../node_modules/lodash/_mapCacheClear.js","../node_modules/lodash/_Hash.js","../node_modules/lodash/_hashClear.js","../node_modules/lodash/_hashDelete.js","../node_modules/lodash/_hashGet.js","../node_modules/lodash/_hashHas.js","../node_modules/lodash/_hashSet.js","../node_modules/lodash/_mapCacheDelete.js","../node_modules/lodash/_isKeyable.js","../node_modules/lodash/_mapCacheGet.js","../node_modules/lodash/_mapCacheHas.js","../node_modules/lodash/_mapCacheSet.js","../node_modules/lodash/_baseAssign.js","../node_modules/lodash/_baseTimes.js","../node_modules/lodash/_baseIsArguments.js","../node_modules/lodash/stubFalse.js","../node_modules/lodash/_baseIsTypedArray.js","../node_modules/lodash/_nativeKeys.js","../node_modules/lodash/_baseAssignIn.js","../node_modules/lodash/_baseKeysIn.js","../node_modules/lodash/_nativeKeysIn.js","../node_modules/lodash/_copySymbols.js","../node_modules/lodash/_copySymbolsIn.js","../node_modules/lodash/_getAllKeysIn.js","../node_modules/lodash/_DataView.js","../node_modules/lodash/_Promise.js","../node_modules/lodash/_WeakMap.js","../node_modules/lodash/_initCloneArray.js","../node_modules/lodash/_initCloneByTag.js","../node_modules/lodash/_cloneDataView.js","../node_modules/lodash/_cloneRegExp.js","../node_modules/lodash/_cloneSymbol.js","../node_modules/lodash/isMap.js","../node_modules/lodash/_baseIsMap.js","../node_modules/lodash/isSet.js","../node_modules/lodash/_baseIsSet.js","../node_modules/lodash/_createBaseFor.js","../node_modules/lodash/_createBaseEach.js","../node_modules/lodash/_baseFilter.js","../node_modules/lodash/_baseMatches.js","../node_modules/lodash/_baseIsMatch.js","../node_modules/lodash/_baseIsEqualDeep.js","../node_modules/lodash/_setCacheAdd.js","../node_modules/lodash/_setCacheHas.js","../node_modules/lodash/_arraySome.js","../node_modules/lodash/_equalByTag.js","../node_modules/lodash/_mapToArray.js","../node_modules/lodash/_equalObjects.js","../node_modules/lodash/_getMatchData.js","../node_modules/lodash/_baseMatchesProperty.js","../node_modules/lodash/get.js","../node_modules/lodash/_stringToPath.js","../node_modules/lodash/_memoizeCapped.js","../node_modules/lodash/memoize.js","../node_modules/lodash/_baseToString.js","../node_modules/lodash/_baseHasIn.js","../node_modules/lodash/property.js","../node_modules/lodash/_basePropertyDeep.js","../node_modules/lodash/_baseHas.js","../node_modules/lodash/isEmpty.js","../node_modules/lodash/_arrayReduce.js","../node_modules/lodash/_baseReduce.js","../node_modules/lodash/size.js","../node_modules/lodash/isString.js","../node_modules/lodash/_stringSize.js","../node_modules/lodash/_asciiSize.js","../node_modules/lodash/_hasUnicode.js","../node_modules/lodash/_unicodeSize.js","../node_modules/lodash/transform.js","../node_modules/lodash/union.js","../node_modules/lodash/_isFlattenable.js","../node_modules/lodash/_apply.js","../node_modules/lodash/_baseSetToString.js","../node_modules/lodash/_shortOut.js","../node_modules/lodash/_baseUniq.js","../node_modules/lodash/_arrayIncludes.js","../node_modules/lodash/_baseIndexOf.js","../node_modules/lodash/_baseIsNaN.js","../node_modules/lodash/_strictIndexOf.js","../node_modules/lodash/_arrayIncludesWith.js","../node_modules/lodash/_createSet.js","../node_modules/lodash/noop.js","../node_modules/lodash/_baseValues.js","../node_modules/graphlib/lib/version.js","../node_modules/graphlib/lib/json.js","../node_modules/graphlib/lib/alg/index.js","../node_modules/graphlib/lib/alg/components.js","../node_modules/graphlib/lib/alg/dijkstra-all.js","../node_modules/graphlib/lib/alg/find-cycles.js","../node_modules/graphlib/lib/alg/floyd-warshall.js","../node_modules/graphlib/lib/alg/is-acyclic.js","../node_modules/graphlib/lib/alg/postorder.js","../node_modules/graphlib/lib/alg/preorder.js","../node_modules/graphlib/lib/alg/prim.js","../node_modules/dagre/lib/layout.js","../node_modules/lodash/cloneDeep.js","../node_modules/lodash/defaults.js","../node_modules/lodash/find.js","../node_modules/lodash/_createFind.js","../node_modules/lodash/findIndex.js","../node_modules/lodash/toInteger.js","../node_modules/lodash/toNumber.js","../node_modules/lodash/forIn.js","../node_modules/lodash/last.js","../node_modules/lodash/mapValues.js","../node_modules/lodash/max.js","../node_modules/lodash/_baseGt.js","../node_modules/lodash/merge.js","../node_modules/lodash/_baseMerge.js","../node_modules/lodash/_baseMergeDeep.js","../node_modules/lodash/isPlainObject.js","../node_modules/lodash/toPlainObject.js","../node_modules/lodash/_createAssigner.js","../node_modules/lodash/min.js","../node_modules/lodash/minBy.js","../node_modules/lodash/now.js","../node_modules/lodash/pick.js","../node_modules/lodash/_basePick.js","../node_modules/lodash/_basePickBy.js","../node_modules/lodash/_baseSet.js","../node_modules/lodash/_flatRest.js","../node_modules/lodash/range.js","../node_modules/lodash/_createRange.js","../node_modules/lodash/_baseRange.js","../node_modules/lodash/sortBy.js","../node_modules/lodash/_baseOrderBy.js","../node_modules/lodash/_baseSortBy.js","../node_modules/lodash/_compareMultiple.js","../node_modules/lodash/_compareAscending.js","../node_modules/lodash/uniqueId.js","../node_modules/lodash/zipObject.js","../node_modules/lodash/_baseZipObject.js","../node_modules/dagre/lib/acyclic.js","../node_modules/dagre/lib/greedy-fas.js","../node_modules/dagre/lib/data/list.js","../node_modules/dagre/lib/normalize.js","../node_modules/dagre/lib/rank/index.js","../node_modules/dagre/lib/rank/network-simplex.js","../node_modules/dagre/lib/parent-dummy-chains.js","../node_modules/dagre/lib/nesting-graph.js","../node_modules/dagre/lib/add-border-segments.js","../node_modules/dagre/lib/coordinate-system.js","../node_modules/dagre/lib/order/index.js","../node_modules/dagre/lib/order/init-order.js","../node_modules/dagre/lib/order/cross-count.js","../node_modules/dagre/lib/order/sort-subgraph.js","../node_modules/dagre/lib/order/barycenter.js","../node_modules/dagre/lib/order/resolve-conflicts.js","../node_modules/dagre/lib/order/sort.js","../node_modules/dagre/lib/order/build-layer-graph.js","../node_modules/dagre/lib/order/add-subgraph-constraints.js","../node_modules/dagre/lib/position/index.js","../node_modules/dagre/lib/position/bk.js","../node_modules/dagre/lib/debug.js","../node_modules/dagre/lib/version.js"],"names":["lodash","cloneDeep","__webpack_require__","constant","defaults","each","filter","find","flatten","forEach","forIn","has","isUndefined","last","map","mapValues","max","merge","min","minBy","now","pick","range","reduce","sortBy","uniqueId","values","zipObject","e","window","_","module","exports","_classCallCheck","instance","Constructor","TypeError","d","__webpack_exports__","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","prototype","isArray","Array","Buffer","proto","fabric","version","document","HTMLDocument","Document","implementation","createHTMLDocument","virtualWindow","JSDOM","decodeURIComponent","features","FetchExternalResources","resources","jsdomImplForWrapper","implForWrapper","nodeCanvas","Canvas","DOMParser","copyGLTo2DDrawImage","gl","pipelineState","glCanvas","canvas","targetCanvas","ctx","getContext","translate","height","scale","sourceY","drawImage","width","copyGLTo2DPutImageData","dWidth","destinationWidth","dHeight","destinationHeight","numBytes","u8","Uint8Array","this","imageBuffer","u8Clamped","Uint8ClampedArray","readPixels","RGBA","UNSIGNED_BYTE","imgData","ImageData","putImageData","isTouchSupported","navigator","maxTouchPoints","isLikelyNode","SHARED_ATTRIBUTES","DPI","reNum","fontPaths","iMatrix","perfLimitSizeTotal","maxCacheSideLimit","minCacheSideLimit","charWidthsCache","textureSize","disableStyleCopyPaste","enableGLFiltering","devicePixelRatio","webkitDevicePixelRatio","mozDevicePixelRatio","browserShadowBlurConstant","arcToSegmentsCache","boundsOfCurveCache","cachesBoundsOfCurve","forceGLPutImageData","initFilterBackend","isWebglSupported","console","log","maxTextureSize","WebglFilterBackend","tileSize","Canvas2dFilterBackend","_removeEventListener","eventName","handler","__eventListeners","eventListener","indexOf","util","array","fill","observe","arguments","prop","on","push","stopObserving","call","fire","options","listenersForEvent","len","value","Observable","off","trigger","Collection","_objects","add","apply","_onObjectAdded","renderOnAddRemove","requestRenderAll","insertAt","object","index","nonSplicing","objects","splice","remove","somethingRemoved","_onObjectRemoved","forEachObject","callback","context","getObjects","type","concat","o","item","isEmpty","size","contains","complexity","memo","current","CommonMethods","_setOptions","set","_initGradient","filler","property","colorStops","Gradient","_initPattern","source","Pattern","_initClipping","clipTo","functionBody","getFunctionBody","Function","_setObject","obj","_set","get","toggle","global","sqrt","Math","atan2","pow","abs","PiBy180","PI","PiBy2","cos","angle","sin","sign","removeFromArray","idx","getRandomInt","floor","random","degreesToRadians","degrees","radiansToDegrees","radians","rotatePoint","point","origin","subtractEquals","v","rotateVector","Point","x","y","addEquals","vector","transformPoint","p","t","ignoreOffset","makeBoundingBoxFromPoints","points","xPoints","minX","yPoints","minY","left","top","invertTransform","a","r","toFixed","number","fractionDigits","parseFloat","Number","parseUnit","fontSize","unit","exec","Text","DEFAULT_SVG_FONT_SIZE","falseFunction","getKlass","namespace","string","camelize","charAt","toUpperCase","slice","resolveNamespace","getSvgAttributes","attributes","parts","split","loadImage","url","crossOrigin","img","createImage","onLoadCallback","onload","onerror","src","substring","loadImageInDom","div","createElement","style","position","appendChild","querySelector","parentNode","removeChild","enlivenObjects","reviver","enlivenedObjects","numLoadedObjects","numTotalObjects","onLoaded","fromObject","error","enlivenPatterns","patterns","numLoadedPatterns","numPatterns","enlivenedPatterns","pattern","groupSVGElements","elements","path","centerPoint","Group","sourcePath","populateWithProperties","destination","properties","toString","drawDashedLine","x2","y2","da","dx","dy","rot","dc","di","draw","save","moveTo","rotate","restore","createCanvasElement","copyCanvasElement","newCanvas","toDataURL","canvasEl","format","quality","clipContext","receiver","beginPath","clip","multiplyTransformMatrices","b","is2x2","qrDecompose","denom","scaleX","scaleY","skewX","skewY","translateX","translateY","customTransformMatrix","skewMatrixX","tan","scaleMatrix","resetObjectTransform","flipX","flipY","saveObjectTransform","fn","String","match","isTransparent","tolerance","_isTransparent","imageData","getImageData","l","data","parsePreserveAspectRatioAttribute","attribute","align","meetOrSlice","aspectRatioAttrs","pop","alignX","alignY","clearFabricFontCache","fontFamily","toLowerCase","limitDimsByArea","ar","maximumArea","roughWidth","perfLimitSizeY","capValue","findScaleToFit","findScaleToCover","matrixToSVG","transform","NUM_FRACTION_DIGITS","join","_join","arcToSegments","toX","toY","rx","ry","large","sweep","rotateX","argsString","th","sinTh","cosTh","fromX","fromY","px","py","rx2","ry2","py2","px2","pl","root","s","cx","cy","cx1","cy1","mTheta","calcVectorAngle","dtheta","segments","ceil","result","mDelta","mT","th3","segmentToBezier","th2","costh2","sinth2","costh3","sinth3","ux","uy","vx","vy","ta","tb","getBoundsOfCurve","x0","y0","x1","y1","x3","y3","c","t1","t2","b2ac","sqrtb2ac","tvalues","bounds","mt","j","jlen","drawArc","fx","fy","coords","segs","segsNorm","bezierCurveTo","getBoundsOfArc","tx","ty","bound","byProperty","condition","k","invoke","method","args","value1","value2","extend","deep","Element","hasOwnProperty","clone","getWholeChar","str","code","charCodeAt","isNaN","next","prev","replace","character","capitalize","firstLetterOnly","escapeXml","graphemeSplit","textstring","chr","graphemes","emptyFunction","IS_DONTENUM_BUGGY","addMethods","klass","parent","superclass","constructor","returnValue","valueOf","Subclass","callSuper","methodName","parentMethod","_this","superClassMethod","createClass","initialize","shift","subclasses","unknown","areHostMethods","methodNames","test","getElement","setElement","getUniqueId","uid","element","__uniqueID","createWrappedHandler","event","addListener","removeListener","shouldUseAddListenerRemoveListener","documentElement","shouldUseAttachEventDetachEvent","listeners","handlers","addEventListener","removeEventListener","listener","wrappedHandler","createListener","attachEvent","detachEvent","existingHandler","handlersForEvent","createDispatcher","pointerX","clientX","pointerY","clientY","_getPointer","pageProp","clientProp","pointer","eventTouchProp","getPointer","srcElement","scroll","getScrollLeftTop","parseEl","supportsOpacity","opacity","supportsFilters","reOpacity","setOpacity","es","currentStyle","hasLayout","zoom","setStyle","styles","elementStyle","cssText","styleFloat","_slice","sliceCanConvertNodelists","getElementStyle","toArray","arrayLike","childNodes","err","makeElement","tagName","el","className","htmlFor","setAttribute","docElement","body","scrollLeft","scrollTop","host","nodeType","arr","defaultView","getComputedStyle","attr","undefined","selectProp","makeElementUnselectable","onselectstart","unselectable","makeElementSelectable","getScript","headEl","getElementsByTagName","scriptEl","loading","onreadystatechange","readyState","getById","id","getElementById","addClass","wrapElement","wrapper","replaceChild","getElementOffset","docElem","scrollLeftTop","doc","ownerDocument","box","offset","offsetAttributes","borderLeftWidth","borderTopWidth","paddingLeft","paddingTop","parseInt","getBoundingClientRect","clientLeft","clientTop","getNodeCanvas","impl","_canvas","_image","cleanUpJsdomNode","_currentSrc","_attributes","_classList","emptyFn","request","onComplete","xhr","XMLHttpRequest","parameters","param","addParamToUrl","open","setRequestHeader","send","warn","noop","_requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","setTimeout","_cancelAnimFrame","cancelAnimationFrame","clearTimeout","requestAnimFrame","animate","timestamp","time","start","Date","duration","finish","onChange","abort","easing","startValue","endValue","byValue","onStart","tick","ticktime","currentTime","timePerc","valuePerc","cancelAnimFrame","animateColor","fromColor","toColor","startColor","Color","getSource","endColor","begin","end","pos","color","calculateColor","colorEasing","normalize","asin","elastic","opts","easeInBounce","easeOutBounce","ease","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInOutBounce","attributesMap","display","visibility","fill-opacity","fill-rule","font-family","font-size","font-style","font-weight","letter-spacing","paint-order","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-decoration","text-anchor","clip-path","clip-rule","vector-effect","colorAttributes","stroke","normalizeAttr","normalizeValue","parentAttributes","parsed","transformMatrix","parseTransformAttribute","visible","fillIndex","strokeIndex","getSvgRegex","RegExp","_getMultipleNodes","nodeNames","nodeName","nodeList","nodeArray","elementMatchesRule","selectors","firstMatching","parentMatching","selectorMatches","selector","doesSomeParentMatch","matcher","classNames","getAttribute","elementById","node","nodelist","svgValidTagNamesRegEx","svgViewBoxElementsRegEx","svgInvalidAncestorsRegEx","svgValidParentsRegEx","cssRules","gradientDefs","clipPaths","skewMatrix","matrix","commaWsp","reTransformList","reTransform","attributeValue","matrices","m","operation","translateMatrix","rotateMatrix","multiplierX","multiplierY","combinedMatrix","reViewBoxAttrValue","applyViewboxTransform","viewBoxWidth","viewBoxHeight","viewBoxAttr","widthAttr","heightAttr","preserveAspectRatio","missingViewBox","missingDimAttr","toBeParsed","parsedDim","widthDiff","heightDiff","viewboxTransform","firstChild","recursivelyParseGradientsXlink","gradient","referencedGradient","substr","hasAttribute","children","referenceClone","cloneNode","removeAttribute","parseSVGDocument","parsingOptions","attrs","xlink","el2","currentTrans","oldLength","el3","nodeValue","parseUseDirectives","svgUid","__uid","descendants","selectNodes","hasAncestorWithNodeName","getGradientDefs","getCSSRules","parseElements","instances","reFontDeclaration","parseFontDeclaration","oStyle","fontStyle","fontWeight","lineHeight","elList","parseAttributes","parentFontSize","ownAttributes","rule","getGlobalStylesForElement","parseStyleAttribute","normalizedAttr","normalizedValue","normalizedStyle","font","mergedAttrs","setAlpha","getAlpha","toRgba","_setStrokeFillOpacity","ElementsParser","parse","chunk","pair","trim","parseStyleString","parseStyleObject","parsePointsAttribute","parsedPoints","allRules","styleContents","textContent","text","ruleObj","propertyValuePairs","_rule","loadSVGFromURL","xml","responseXML","ActiveXObject","responseText","async","loadXML","results","_options","allElements","loadSVGFromString","parser","parseFromString","regexUrl","numElements","createObjects","createObject","findTag","fromElement","createCallback","checkIfDone","resolveGradient","Image","_originalElement","_removeTransformMatrix","resolveClipPath","extractPropertyDefinition","storage","lastIndex","gradientDef","createClipPathCallback","container","_newObj","fillRule","clipRule","objTransformInv","gTransform","clipPath","calcTransformMatrix","setPositionByOrigin","that","scalarAdd","scalar","scalarAddEquals","subtract","scalarSubtract","scalarSubtractEquals","multiply","multiplyEquals","divide","divideEquals","eq","lt","lte","gt","gte","lerp","distanceFrom","midPointFrom","setXY","setX","setY","setFromPoint","swap","Intersection","status","appendPoint","appendPoints","intersectLineLine","a1","a2","b1","b2","uaT","ubT","uB","ua","ub","intersectLinePolygon","inter","intersectPolygonPolygon","points1","points2","intersectPolygonRectangle","r1","r2","topRight","bottomLeft","inter1","inter2","inter3","inter4","_tryParsingColor","setSource","hue2rgb","q","colorNameMap","sourceFromHex","sourceFromRgb","sourceFromHsl","_rgbToHsl","g","h","round","_source","toRgb","toHsl","hsl","toHsla","toHex","toHexa","alpha","toGrayscale","average","currentAlpha","toBlackWhite","threshold","overlayWith","otherColor","otherSource","reRGBa","reHSLa","reHex","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgrey","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","grey","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","fromRgb","fromSource","fromRgba","fromHsl","fromHsla","fromHex","isShortNotation","isRGBa","oColor","getColorStop","colorAlpha","keyValuePairs","_convertPercentUnitsToValues","gradientUnits","propValue","addFactor","multFactor","ellipseMatrix","scaleFactor","offsetX","offsetY","gradientTransform","addColorStop","toObject","propertiesToInclude","toSVG","markup","commonAttributes","needsSwap","withViewport","additionalTransform","sort","pathOffset","reverse","minRadius","percentageShift","colorStop","toLive","createLinearGradient","createRadialGradient","colorStopEls","getLinearCoords","getRadialCoords","forObject","repeat","patternTransform","setOptions","patternSource","patternWidth","patternHeight","patternOffsetX","patternOffsetY","patternImgSrc","complete","naturalWidth","naturalHeight","createPattern","Shadow","blur","affectStroke","includeDefaultValues","nonScaling","_parseShadow","shadow","shadowStr","offsetsAndBlur","reOffsetsAndBlur","fBoxX","fBoxY","StaticCanvas","CANVAS_INIT_ERROR","Error","renderAndResetBound","renderAndReset","bind","requestRenderAllBound","_initStatic","backgroundColor","backgroundImage","overlayColor","overlayImage","stateful","controlsAboveOverlay","allowTouchScrolling","imageSmoothingEnabled","viewportTransform","backgroundVpt","overlayVpt","onBeforeScaleRotate","enableRetinaScaling","vptCoords","skipOffscreen","cb","_createLowerCanvas","_initOptions","_setImageSmoothing","interactive","_initRetinaScaling","setOverlayImage","setBackgroundImage","setBackgroundColor","setOverlayColor","calcOffset","_isRetinaScaling","getRetinaScaling","lowerCanvasEl","contextContainer","_offset","image","__setBgOverlayImage","__setBgOverlayColor","webkitImageSmoothingEnabled","mozImageSmoothingEnabled","msImageSmoothingEnabled","oImageSmoothingEnabled","_createCanvasElement","_applyCanvasStyle","getWidth","getHeight","setWidth","setDimensions","setHeight","dimensions","cssValue","cssOnly","_setBackstoreDimension","hasLostContext","backstoreOnly","_setCssDimension","_isCurrentlyDrawing","freeDrawingBrush","_setBrushStyles","upperCanvasEl","cacheCanvasEl","wrapperEl","getZoom","setViewportTransform","vpt","activeObject","_activeObject","group","setCoords","calcViewportBoundaries","zoomToPoint","before","after","setZoom","absolutePan","relativePan","setupState","clearContext","clearRect","clear","_hasITextHandlers","_mouseUpITextHandler","_iTextInstances","renderAll","canvasToDrawOn","renderCanvas","isRendering","iVpt","tl","br","tr","bl","cancelRequestedRender","_renderBackground","_renderObjects","drawControls","shouldCache","_transformDone","renderCache","forClipping","drawClipPathOnCanvas","_renderOverlay","globalCompositeOperation","zoomX","zoomY","_cacheCanvas","cacheTranslationX","cacheTranslationY","render","_renderBackgroundOrOverlay","needsVpt","lineTo","closePath","fillStyle","getCenter","centerObjectH","_centerObject","getCenterPoint","centerObjectV","centerObject","center","viewportCenterObject","vpCenter","getVpCenter","viewportCenterObjectH","viewportCenterObjectV","toDatalessJSON","toDatalessObject","_toObjectMethod","_toObjects","_toObject","__serializeBgOverlay","excludeFromExport","originalValue","bgImage","overlay","background","svgViewportTransformation","_setSVGPreamble","_setSVGHeader","clipPathId","_setSVGBgOverlayColor","_setSVGBgOverlayImage","_setSVGObjects","suppressPreamble","encoding","viewBox","createSVGFontFacesMarkup","createSVGRefElementsMarkup","createSVGClipPathMarkup","toClipPathSVG","shouldTransform","row","rowIndex","charIndex","fontList","_setSVGObject","finalWidth","finalHeight","sendToBack","objs","activeSelection","unshift","bringToFront","sendBackwards","intersecting","newIdx","objsMoved","_findNewLowerIndex","intersectsWithObject","isContainedWithinObject","bringForward","_findNewUpperIndex","dispose","DataURLExporter","EMPTY_JSON","supports","setLineDash","toJSON","createPNGStream","createJPEGStream","BaseBrush","strokeLineCap","strokeLineJoin","strokeMiterLimit","strokeDashArray","setShadow","contextTop","strokeStyle","lineWidth","lineCap","miterLimit","lineJoin","_saveAndTransform","_setShadow","shadowColor","shadowBlur","shadowOffsetX","shadowOffsetY","needsFullRender","_resetShadow","PencilBrush","decimate","_points","_drawSegment","p1","p2","midPoint","quadraticCurveTo","onMouseDown","_prepareForDrawing","_captureDrawingPath","_render","onMouseMove","oldEnd","onMouseUp","_finalizeAndAddPath","_reset","_addPoint","pointerPoint","convertPointsToSVGPath","multSignX","multSignY","manyPoints","createPath","pathData","Path","strokeWidth","decimatePoints","distance","adjustedDistance","lastPoint","newPoints","CircleBrush","drawDot","addPoint","dot","arc","radius","originalRenderOnAddRemove","circles","circle","Circle","originX","originY","circleRadius","circleColor","SprayBrush","density","dotWidth","dotWidthVariance","randomOpacity","optimizeOverlapping","sprayChunks","addSprayChunk","sprayChunkPoints","rects","ilen","sprayChunk","rect","Rect","_getOptimizedRects","uniqueRects","uniqueRectsArray","globalAlpha","fillRect","PatternBrush","getPatternSrc","patternCanvas","patternCtx","getPatternSrcFunction","getPattern","topLeft","_getLeftTopCoords","_getPointer2","supportLineDash","_initInteractive","_createCacheCanvas","uniScaleTransform","uniScaleKey","centeredScaling","centeredRotation","centeredKey","altActionKey","selection","selectionKey","altSelectionKey","selectionColor","selectionDashArray","selectionBorderColor","selectionLineWidth","selectionFullyContained","hoverCursor","moveCursor","defaultCursor","freeDrawingCursor","rotationCursor","notAllowedCursor","containerClass","perPixelTargetFind","targetFindTolerance","skipTargetFind","isDrawingMode","preserveObjectStacking","snapAngle","snapThreshold","stopContextMenu","fireRightClick","fireMiddleClick","_currentTransform","_groupSelector","_initWrapperElement","_createUpperCanvas","_initEventListeners","_chooseObjectsToRender","objsToRender","activeGroupObjects","activeObjects","getActiveObjects","contextTopDirty","renderTopLayer","_drawSelection","renderTop","_resetCurrentTransform","original","_shouldCenterTransform","mouseXSign","mouseYSign","containsPoint","xy","_normalizePointer","_findTargetCorner","invertedM","vptPointer","restorePointerVpt","isTargetTransparent","normalizedPointer","targetRelativeX","targetRelativeY","_cacheContext","contextCache","originalColor","selectionBackgroundColor","_renderControls","hasBorders","transparentCorners","_isSelectionKeyPressed","_shouldClearSelection","evented","selectable","centerTransform","action","altKey","_getOriginFromCorner","corner","_getActionFromCorner","alreadySelected","_setupCurrentTransform","ex","ey","lastX","lastY","theta","shiftKey","_beforeTransform","_translateObject","newLeft","newTop","moveX","moveY","_changeSkewTransformOrigin","mouseMove","by","origins","0","skew","originA","originB","flipSign","skewSign","_skewObject","skewed","lockSkewingX","lockSkewingY","actualMouseByOrigin","constraintPosition","actualMouseByCenter","toLocalPoint","lastMouseByCenter","dim","_getTransformedDimensions","translateToOriginPoint","_setObjectSkew","localMouse","_dim","newValue","newDim","dimNoSkew","otherBy","_otherBy","_by","newDimMouse","atan","_scaleObject","lockScalingX","lockScalingY","lockScalingFlip","scaled","_setLocalMouse","_setObjectScale","forbidScalingX","forbidScalingY","changeX","changeY","newScaleX","newScaleY","Textbox","w","getMinWidth","_scaleObjectEqually","_flipObject","dist","lastDist","signX","signY","padding","_rotateObject","lockRotation","lastAngle","curAngle","hasRotated","rightAngleLocked","leftAngleLocked","setCursor","cursor","groupSelector","aleft","atop","_setLineDash","strokeRect","findTarget","skipGroup","activeTarget","activeTargetSubs","aObjects","targets","_searchPossibleTargets","_checkTarget","globalPointer","isEditing","subTarget","objToCheck","pointerToUse","subTargetCheck","ignoreZoom","_absolutePointer","_pointer","cssScale","boundsWidth","boundsHeight","bottom","right","lowerCanvasClass","_copyCanvasStyle","class","touch-action","fromEl","toEl","getSelectionContext","getSelectionElement","getActiveObject","active","_discardActiveObject","_hoveredTarget","_fireSelectionEvents","oldObjects","somethingChanged","added","removed","opt","oldObject","selected","deselected","updated","setActiveObject","currentActives","_setActiveObject","onSelect","onDeselect","discardActiveObject","removeListeners","originalProperties","_realizeGroupTransformOnObject","_unwindGroupTransformOnObject","originalValues","realizeTransform","clearContextTop","_setCursorFromEvent","cursorOffset","mr","mb","ml","addEventOptions","passive","checkClick","which","button","cursorMap","_bindEvents","addOrRemove","functor","eventjsFunctor","canvasElement","eventTypePrefix","enablePointerEvents","_onResize","_onMouseDown","_onMouseMove","_onMouseOut","_onMouseEnter","_onMouseWheel","_onContextMenu","_onDoubleClick","_onDragOver","_onDragEnter","_onDragLeave","_onDrop","eventjs","_onGesture","_onDrag","_onOrientationChange","_onShake","_onLongPress","_onMouseUp","eventsBound","_simpleEventHandler","self","__onTransformGesture","__onDrag","__onMouseWheel","hiddenTextarea","focus","currentTransform","__onOrientationChange","__onShake","__onLongPress","preventDefault","_fireEnterLeaveEvents","stopPropagation","_cacheTransformEventData","_handleEvent","_resetTransformEventData","__onMouseDown","__onMouseUp","__onMouseMove","_shouldRender","shouldRender","isClick","_target","_onMouseUpInDrawingMode","_finalizeCurrentTransform","actionPerformed","_maybeGroupObjects","isMoving","__corner","eventType","subTargets","absolutePointer","_scaling","hasStateChanged","_addEventOptions","_fire","_onMouseDownInDrawingMode","_onMouseMoveInDrawingMode","_previousPointer","shouldGroup","_shouldGroup","_handleGrouping","saveState","touches","_transformObject","_fireOverOutEvents","fireSyntheticInOutEvents","targetName","canvasEvtOut","evtOut","canvasEvtIn","evtIn","config","inOpt","outOpt","inFires","oldTarget","targetChanged","previousTarget","nextTarget","reset","_beforeScaleTransform","_performTransformAction","_onScale","_isUniscalePossible","currentAction","getCornerCursor","actionIsDisabled","_getRotatedCornerCursor","hasRotatingPoint","n","_updateActiveSelection","_createActiveSelection","currentActiveObjects","removeWithUpdate","addWithUpdate","_createGroup","groupObjects","exitEditing","ActiveSelection","_groupSelectedObjects","aGroup","_collectObjects","currentObject","selectionX1Y1","selectionX2Y2","allowIntersect","intersectsWithRect","isContainedWithinRect","multiplier","toCanvasElement","cropping","scaledWidth","scaledHeight","originalWidth","originalHeight","newZoom","vp","originalInteractive","originalContext","newVp","originalRetina","loadFromDatalessJSON","json","loadFromJSON","serialized","JSON","_enlivenObjects","_setBgOverlay","enlivenedCanvasClip","__setupCanvas","loaded","cbIfLoaded","__setBgOverlay","enlivedObject","_toDataURL","_toDataURLWithMultiplier","toDataURLWithMultiplier","stringify","cloneWithoutData","backgroundImageOpacity","backgroundImageStretch","supportsLineDash","objectCaching","cornerSize","borderColor","borderDashArray","cornerColor","cornerStrokeColor","cornerStyle","cornerDashArray","strokeDashOffset","borderOpacityWhenMoving","borderScaleFactor","minScaleLimit","hasControls","rotatingPointOffset","lockMovementX","lockMovementY","lockUniScaling","statefullCache","noScaleCache","strokeUniform","dirty","paintFirst","stateProperties","cacheProperties","inverted","absolutePositioned","_cacheProperties","_updateCacheCanvas","_limitCacheSize","dims","limitedDims","capped","_getCacheCanvasDimensions","objectScale","getTotalObjectScaling","neededX","neededY","drawingWidth","drawingHeight","minCacheSize","dimensionsChanged","cacheWidth","cacheHeight","zoomChanged","shouldRedraw","additionalWidth","additionalHeight","shouldResizeCanvas","canvasWidth","canvasHeight","sizeGrowing","setTransform","calcOwnMatrix","_removeDefaultValues","getObjectScaling","scaling","retina","getObjectOpacity","shouldConstrainValue","isChanged","groupNeedsUpdate","_constrainScale","isOnACache","setOnGroup","getViewportTransform","isNotVisible","isOnScreen","_setupCompositeOperation","drawSelectionBackground","_setOpacity","drawCacheOnCanvas","_removeCacheCanvas","drawObject","propertySet","isCacheDirty","hasStroke","hasFill","needsItsOwnCache","ownCaching","willDrawShadow","drawClipPathOnCache","originalFill","originalStroke","_setClippingProperties","_setStrokeStyles","_setFillStyles","_drawClipPath","skipCanvas","_getNonTransformedDimensions","_removeShadow","decl","lineDashOffset","dashArray","alternative","getLineDash","styleOverride","drawBorders","forActiveSelection","drawBordersInGroup","multX","multY","_applyPatternGradientTransform","_renderPaintInOrder","_renderStroke","_renderFill","_renderDashedStroke","_findCenterFromElement","_assignTransformMatrixProps","preserveAspectRatioOptions","cropX","cropY","offsetLeft","offsetTop","objectForm","_fromObject","cloneAsImage","utils","origParams","originalShadow","withoutTransform","withoutShadow","boundingRect","getBoundingRect","shadowOffset","originalCanvas","isType","setGradient","setPatternFill","setColor","shouldCenterOrigin","_setOriginToCenter","_resetOrigin","centerH","viewportCenterH","centerV","viewportCenterV","viewportCenter","getLocalPointer","pClicked","objectLeftTop","createAccessors","extraParam","enlivedProps","originXOffset","originYOffset","translateToGivenOrigin","fromOriginX","fromOriginY","toOriginX","toOriginY","translateToCenterPoint","leftTop","getPointByOrigin","adjustPosition","to","offsetFrom","offsetTo","hypotFull","getScaledWidth","xFull","yFull","_originalOriginX","_originalOriginY","originPoint","multiplyMatrices","oCoords","aCoords","ownMatrixCache","matrixCache","getCoords","absolute","calculate","_getCoords","calcCoords","pointTL","pointBR","other","lines","_getImageLines","_findCrossPoints","_containsCenterOfCanvas","isPartiallyOnScreen","topline","rightline","bottomline","leftline","xi","iLine","xcount","lineKey","getScaledHeight","scaleToWidth","boundingRectFactor","scaleToHeight","_calcRotateMatrix","_calcTranslateMatrix","startMatrix","finalMatrix","cosP","sinP","cosPSinP","cosPMinusSinP","mtr","skipAbsolute","_setCornerCoords","transformMatrixKey","prefix","cache","dimensionMatrix","_calcDimensionsTransformMatrix","flipping","dimX","dimY","noSkew","_finalizeDimensions","bbox","_calculateCurrentDimensions","getSvgColorString","getSvgStyles","skipShadow","getSvgFilter","getSvgSpanStyles","useWhiteSpace","textDecoration","getSvgTextDecoration","deltaY","overline","underline","linethrough","getSvgCommons","getSvgTransform","full","getSvgTransformMatrix","_setSVGBg","textBgRects","_getFillAttributes","_createBaseSVGMarkup","_toSVG","_createBaseClipPathSVGMarkup","objectMarkup","commonPieces","clipPathMarkup","noStyle","withShadow","styleInfo","shadowInfo","vectorEffect","absoluteClipPath","addPaintOrder","saveProps","tmpObj","dashedPropertySet","keys","_isEqual","origValue","currentValue","firstPass","_controlsVisibility","isControlVisible","newTheta","cornerHypotenuse","cosHalfOffset","sinHalfOffset","wh","drawRotatingPoint","rotateHeight","scaleOffset","_drawControl","control","controlName","_getControlsVisibility","setControlVisible","setControlsVisibility","FX_DURATION","fxCenterObjectH","callbacks","empty","_onComplete","_onChange","fxCenterObjectV","_onComplete2","_onChange2","fxRemove","_onComplete3","_onChange3","skipCallbacks","propsToAnimate","_animate","propPair","from","valueProgress","timeProgress","coordProps","makeEdgeToOriginGetter","propertyNames","originValues","axis1","axis2","dimension","nearest","farthest","Line","_setWidthHeight","_getLeftToOriginX","_getTopToOriginY","calcLinePoints","origStrokeStyle","xMult","yMult","ATTRIBUTE_NAMES","parsedAttributes","pi","startAngle","endAngle","setRadius","svgString","startX","startY","endX","endY","largeFlag","getRadiusX","getRadiusY","Triangle","widthBy2","heightBy2","piBy2","Ellipse","getRx","getRy","_initRxRy","isRounded","Polyline","_setPositionDimensions","correctLeftTop","calcDim","_calcDimensions","fromSVG","diffX","diffY","commonRender","fromElementGenerator","_class","Polygon","_toString","commandLengths","repeatedCommands","M","fromArray","_parsePath","_renderPathCommands","tempX","tempY","previous","subpathStartX","subpathStartY","controlX","controlY","_getOffsetTransform","digits","currentPath","coordsStr","coordsParsed","re","command","commandLength","repeatedCommand","klen","aX","aY","pathUrl","useSetOnGroup","isAlreadyGrouped","_updateObjectsACoords","_calcBounds","_updateObjectsCoords","_updateObjectCoords","objectLeft","objectTop","_restoreObjectsState","_includeDefaultValues","objsToObject","originalDefaults","_obj","ownCache","_restoreObjectState","destroy","toActiveSelection","ungroupOnCanvas","setObjectsCoords","onlyWidthHeight","iLen","jLen","_getBounds","minXY","maxXY","enlivedClipPath","toGroup","newGroup","childrenOverride","srcFromAttribute","_lastScaleX","_lastScaleY","_filterScalingX","_filterScalingY","minimumScaleTrigger","cacheKey","filters","_initElement","_element","removeTexture","_initConfig","applyFilters","resizeFilter","applyResizeFilters","backend","filterBackend","evictCachesForKey","setCrossOrigin","getOriginalSize","_stroke","filterObj","getSrc","hasCrop","strokeSvg","imageMarkup","getSvgSrc","origFill","filtered","setSrc","minimumScale","elementToFilter","_filteredEl","sourceWidth","sourceHeight","isNeutralState","imgElement","_needsResize","elementToDraw","sW","sH","sX","sY","_resetWidthHeight","CSS_CANVAS","_initFilters","pAR","rWidth","rHeight","pWidth","pHeight","_object","resizeFilters","fromURL","imgOptions","_getAngleValueForStraighten","straighten","fxStraighten","_onComplete4","_onChange4","straightenObject","fxStraightenObject","testPrecision","precision","fragmentSource","fragmentShader","createShader","FRAGMENT_SHADER","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","setupGLContext","captureGPUInfo","isSupported","getParameter","MAX_TEXTURE_SIZE","precisions","webGlPrecision","createWebGLCanvas","aPosition","Float32Array","chooseFastestCopyGLTo2DMethod","canUseImageData","canMeasurePerf","performance","canUseArrayBuffer","ArrayBuffer","canUseUint8Clamped","copyGLTo2D","startTime","drawImageTime","testContext","glOptions","premultipliedAlpha","depth","stencil","antialias","clearColor","cachedTexture","getCachedTexture","sourceTexture","createTexture","targetTexture","originalTexture","passes","webgl","programCache","pass","tempFbo","createFramebuffer","bindFramebuffer","FRAMEBUFFER","applyTo","resizeCanvasIfNeeded","bindTexture","TEXTURE_2D","deleteTexture","deleteFramebuffer","clearWebGLCaches","textureCache","textureImageSource","texture","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","gpuInfo","renderer","vendor","ext","getExtension","UNMASKED_RENDERER_WEBGL","UNMASKED_VENDOR_WEBGL","sourceElement","originalEl","originalImageData","BaseFilter","vertexSource","createProgram","vertexShader","VERTEX_SHADER","getShaderInfoLog","program","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","attributeLocations","getAttributeLocations","uniformLocations","getUniformLocations","uStepW","getUniformLocation","uStepH","getAttribLocation","sendAttributeData","aPositionData","attributeLocation","buffer","createBuffer","bindBuffer","ARRAY_BUFFER","enableVertexAttribArray","vertexAttribPointer","FLOAT","bufferData","STATIC_DRAW","_setupFrameBuffer","framebufferTexture2D","COLOR_ATTACHMENT0","_swapTextures","temp","main","mainParameter","applyToWebGL","applyTo2d","retrieveShader","shader","useProgram","uniform1f","sendUniformData","viewport","drawArrays","TRIANGLE_STRIP","bindAdditionalTexture","textureUnit","activeTexture","TEXTURE0","unbindAdditionalTexture","getMainParameter","setMainParameter","createHelpLayer","helpLayer","mainP","ColorMatrix","colorsOnly","uColorMatrix","uConstants","constants","uniformMatrix4fv","uniform4fv","Brightness","brightness","uBrightness","Convolute","opaque","Convolute_3_1","Convolute_3_0","Convolute_5_1","Convolute_5_0","Convolute_7_1","Convolute_7_0","Convolute_9_1","Convolute_9_0","dstOff","scx","scy","srcOff","wt","weights","side","halfSide","sw","sh","output","createImageData","dst","alphaFac","uMatrix","uOpaque","uHalfSize","uSize","uniform1fv","Grayscale","lightness","luminosity","mode","uMode","uniform1i","Invert","invert","uInvert","Noise","noise","rand","uNoise","uSeed","Pixelate","blocksize","_i","_j","_iLen","_jLen","uBlocksize","RemoveColor","useAlpha","lowC","highC","uLow","uHigh","Brownie","Vintage","Kodachrome","Technicolor","Polaroid","Sepia","BlackWhite","BlendColor","screen","diff","lighten","darken","exclusion","tint","buildSource","tg","alpha1","uColor","BlendImage","mask","TEXTURE1","calculateMatrix","canvas1","blendData","blendImage","uTransformMatrix","uImage","uniformMatrix3fv","Resize","resizeType","lanczosLobes","uDelta","uTaps","uniform2fv","horizontal","taps","filterWindow","getFilterWindow","generateShader","tempScale","getTaps","lobeFunction","lanczosCreate","offsets","fragmentSourceTOP","dW","dH","lobes","xx","rcpScaleX","rcpScaleY","newData","oW","oH","sliceByTwo","hermiteFastResize","bilinearFiltering","lanczosResize","tmpCanvas","doneW","doneH","stepW","stepH","dX","dY","srcData","destImg","destData","lanczos","ratioX","ratioY","rcpRatioX","rcpRatioY","range2X","range2Y","cacheLanc","icenter","process","u","weight","fX","fY","xDiff","yDiff","chnl","origPix","w4","pixels","destImage","destPixels","ratioW","ratioH","ratioWHalf","ratioHHalf","img2","data2","weightsAlpha","gxR","gxG","gxB","gxA","centerY","yy","centerX","w0","Contrast","contrast","contrastF","uContrast","Saturation","saturation","adjust","uSaturation","Blur","aspectRatio","simpleBlur","canvas2","blurLayer1","blurLayer2","percent","ctx1","ctx2","newImageData","delta","chooseRightDelta","blurScale","Gamma","gamma","rInv","gInv","bInv","rVals","gVals","bVals","uGamma","uniform3fv","Composed","subFilters","some","HueRotation","rotation","rad","aThirdSqtSin","OneMinusCos","_dimensionAffectingProps","_reNewline","_reSpacesAndTabs","_reSpaceAndTab","_reWords","textAlign","superscript","baseline","subscript","textBackgroundColor","_fontSizeFraction","_fontSizeMult","charSpacing","_measuringContext","_styleProperties","__charBounds","CACHE_FONT_SIZE","MIN_TEXT_WIDTH","__skipDimension","initDimensions","getMeasuringContext","_splitText","newLines","_splitTextIntoLines","textLines","_textLines","graphemeLines","_unwrappedTextLines","_unwrappedLines","_text","graphemeText","_clearCache","calcTextWidth","cursorWidth","enlargeSpaces","calcTextHeight","diffSpace","currentLineWidth","numberOfSpaces","accumulatedSpace","line","charBound","spaces","isEndOfWrapping","getLineWidth","kernedWidth","lineIndex","missingNewlineOffset","_setTextStyles","_renderTextLinesBackground","_renderTextDecoration","_renderText","_renderTextStroke","_renderTextFill","charStyle","forMeasuring","textBaseline","_getFontDeclaration","maxWidth","_renderTextLine","_renderChars","styleHas","heightOfLine","lineLeftOffset","lastColor","charBox","currentColor","lineTopOffset","leftOffset","_getLeftOffset","topOffset","_getTopOffset","boxStart","boxWidth","getHeightOfLine","_getLineLeftOffset","getValueOfPropertyAt","getFontCache","cacheProp","_applyCharStyles","styleDeclaration","_measureChar","_char","previousChar","prevCharStyle","coupleWidth","previousWidth","fontCache","couple","stylesAreEqual","fontMultiplier","measureText","getHeightOfChar","_char2","measureLine","lineInfo","_measureLine","_getWidthOfCharSpacing","grapheme","prevGrapheme","graphemeInfo","lineBounds","_getGraphemeBox","numOfSpaces","skipLeft","getCompleteStyleDeclaration","prevStyle","info","previousBox","__lineHeights","maxHeight","_renderTextCommon","lineHeights","isEmptyStyles","actualStyle","nextStyle","timeToRender","isJustify","charsToRender","shortCut","_renderChar","_hasStyleChanged","_getStyleDeclaration","fullDecl","shouldFill","shouldStroke","fillText","strokeText","setSuperscript","_setScript","setSubscript","schema","loc","get2DCursorLocation","setSelectionStyles","thisStyle","_hasStyleChangedForSvg","__lineWidths","_shouldClearDimensionCache","shouldClear","_forceClearCache","_size","_dy","lastDecoration","currentDecoration","currentFill","lastFill","styleObject","family","fontIsGeneric","genericFonts","newLine","newText","additionalProperties","needsDims","_key","parsedAnchor","textAnchor","originalStrokeWidth","textHeightScaleFactor","scaledDiff","textHeight","offX","p3","cleanStyle","letterCount","stylePropertyValue","stylesCount","allStyleObjectPropertiesMatch","graphemeCount","removeStyle","lineNum","charNum","_extendStyles","_getLineStyle","_setLineStyle","_setStyleDeclaration","selectionStart","skipWrapping","getSelectionStyles","startIndex","endIndex","selectionEnd","getStyleAtPosition","lineStyle","_deleteStyleDeclaration","_deleteLineStyle","parseDecoration","IText","editable","editingBorderColor","cursorColor","cursorDelay","cursorDuration","caching","_reSpace","_currentCursorOpacity","_selectionDirection","_abortCursorAnimation","__widthOfSpace","inCompositionMode","initBehavior","setSelectionStart","_updateAndFire","setSelectionEnd","_fireSelectionChanged","_updateTextarea","initDelayedCursor","cursorOffsetCache","renderCursorOrSelection","skipRestore","_clearTextArea","boundaries","_getCursorBoundaries","renderCursor","renderSelection","_getCursorBoundariesOffsets","cursorPosition","cursorLocation","charHeight","__isMousedown","startLine","endLine","startChar","endChar","realLineHeight","lineOffset","boxEnd","compositionColor","getCurrentCharFontSize","cp","_getCurrentCharIndex","getCurrentCharColor","initAddedHandler","initRemovedHandler","initCursorSelectionHandlers","initDoubleClickSimulation","mouseMoveHandler","_initCanvasHandlers","_removeCanvasHandlers","_tick","_currentTickState","_animateCursor","targetOpacity","completeMethod","tickState","isAborted","_onTickComplete","_cursorTimeout1","_currentTickCompleteState","restart","delay","abortCursorAnimation","_cursorTimeout2","selectAll","getSelectedText","findWordBoundaryLeft","startFrom","findWordBoundaryRight","findLineBoundaryLeft","findLineBoundaryRight","searchWordBoundary","direction","reNonWord","selectWord","newSelectionStart","newSelectionEnd","selectLine","enterEditing","exitEditingOnOthers","initHiddenTextarea","_saveEditingProps","_setEditingProps","_textBeforeEdit","initMouseMoveHandler","getSelectionStartFromPointer","currentStart","currentEnd","__selectionStartOnMouseDown","restartCursorIfNeeded","fromStringToGraphemeSelection","smallerTextStart","graphemeStart","smallerTextEnd","fromGraphemeToStringSelection","newSelection","updateTextareaPosition","updateFromTextArea","_calcTextareaPosition","desiredPosition","compositionStart","upperCanvas","upperCanvasWidth","upperCanvasHeight","clientWidth","clientHeight","_savedProps","_restoreEditingProps","isTextChanged","_removeExtraneousStyles","removeStyleFromTo","styleObj","cursorStart","cursorEnd","lineStart","charStart","lineEnd","charEnd","shiftLineStyles","numericChar","clonedStyles","numericLine","insertNewlineStyleObject","qty","copiedStyle","currentCharStyle","newLineStyles","somethingAdded","numIndex","insertCharStyleObject","quantity","currentLineStyles","currentLineStylesCloned","numericIndex","newStyle","insertNewStyleBlock","insertedText","cursorLoc","addedLines","linesLength","setSelectionStartEndWithShift","setSelectionInBoundaries","__lastClickTime","__lastLastClickTime","__lastPointer","__newClickTime","newPointer","isTripleClick","_stopEvent","__lastIsEditing","__lastSelected","initMousedownHandler","initMouseupHandler","initClicks","_mouseDownHandler","setCursorByClick","_mouseDownHandlerBefore","mouseUpHandler","currentActive","mouseOffset","prevWidth","_getNewSelectionStartFromOffset","distanceBtwLastCharAndCursor","distanceBtwNextCharAndCursor","onKeyDown","onKeyUp","onInput","copy","paste","onCompositionStart","onCompositionUpdate","onCompositionEnd","_clickHandlerInitialized","onClick","keysMap","9","27","33","34","35","36","37","38","39","40","ctrlKeysMapUp","67","88","ctrlKeysMapDown","65","keyCode","ctrlKey","metaKey","stopImmediatePropagation","_copyDone","fromPaste","removedText","nextText","charCount","nextCharCount","charDiff","textareaSelection","backDelete","copiedText","copiedTextStyle","compositionEnd","_getClipboardData","clipboardData","_getWidthBeforeCursor","widthBeforeCursor","getDownCursorOffset","isRight","selectionProp","_getSelectionForOffset","indexOnOtherLine","_getIndexOnLine","getUpCursorOffset","textBeforeCursor","charWidth","foundMatch","widthOfCharsOnLine","indexOnLine","leftEdge","rightEdge","offsetFromLeftEdge","moveCursorDown","_moveCursorUpOrDown","moveCursorUp","moveCursorWithShift","moveCursorWithoutShift","moveCursorLeft","_moveCursorLeftOrRight","_move","_moveLeft","_moveRight","moveCursorLeftWithoutShift","change","moveCursorLeftWithShift","moveCursorRight","actionName","moveCursorRightWithShift","moveCursorRightWithoutShift","changed","removeChars","insertChars","multipleSpacesRegex","_getSVGLeftTopOffsets","textAndBg","_getSVGTextAndBg","textTop","textLeft","_wrapSVGTextAndBg","lineTop","textSpans","textTopOffset","textLeftOffset","_setSVGTextLineBg","_setSVGTextLineText","_createTextCharSpan","styleDecl","shouldUseWhitespace","styleProps","fillStyles","dySpan","_pushTextBgRect","fillColor","_getSVGLineTopOffset","lastHeight","minWidth","dynamicMinWidth","__cachedLines","_wordJoiners","splitByGrapheme","_styleMap","_generateStyleMap","textInfo","realLineCount","realLineCharCount","isWrapping","nextOffset","shouldLimit","mapNextLine","_wrapText","desiredWidth","wrapped","_wrapLine","_measureWord","word","charOffset","_line","reservedSpace","words","infix","wordWidth","infixWidth","largestWordWidth","lineJustStarted","additionalSpace","linesToKeep","Graph","addDummyNode","name","hasNode","dummy","setNode","maxRank","nodes","rank","simplify","simplified","setGraph","graph","edges","simpleLabel","edge","minlen","label","setEdge","asNonCompoundGraph","multigraph","isMultigraph","successorWeights","weightMap","sucs","outEdges","predecessorWeights","preds","inEdges","intersectRect","sx","sy","buildLayerMatrix","layering","order","normalizeRanks","removeEmptyRanks","layers","nodeRankFactor","vs","addBorderNode","partition","collection","lhs","rhs","notime","isFunction","union","MAX_SAFE_INTEGER","argsTag","funcTag","genTag","reIsUint","func","thisArg","objectProto","objectToString","propertyIsEnumerable","nativeMax","arrayLikeKeys","inherited","isObjectLike","isArrayLike","isArrayLikeObject","isArguments","iteratee","baseTimes","skipIndexes","isIndex","assignInDefaults","objValue","srcValue","assignValue","baseKeysIn","isObject","nativeKeysIn","isProto","Ctor","isPrototype","baseRest","otherArgs","isLength","tag","assigner","assignInWith","srcIndex","customizer","copyObject","keysIn","sources","guard","isIterateeCall","graphlib","freeGlobal","freeSelf","_getPrototypeOf","setPrototypeOf","getPrototypeOf","__proto__","_typeof2","Symbol","iterator","_typeof","_possibleConstructorReturn","ReferenceError","_assertThisInitialized","_setPrototypeOf","_inherits","subClass","superClass","create","baseMatches","baseMatchesProperty","identity","baseKeys","baseIsNative","getValue","getRawTag","nullTag","undefinedTag","symToStringTag","toStringTag","stubFalse","freeExports","freeModule","isBuffer","DataView","Map","Promise","Set","WeakMap","baseGetTag","toSource","dataViewCtorString","mapCtorString","promiseCtorString","setCtorString","weakMapCtorString","getTag","resolve","ctorString","symbolTag","asyncTag","proxyTag","baseAssignValue","isNew","baseIsArguments","baseIsTypedArray","baseUnary","nodeUtil","nodeIsTypedArray","isTypedArray","isSymbol","INFINITY","lib","alg","ListCache","stackClear","stackDelete","stackGet","stackHas","stackSet","Stack","entries","__data__","listCacheClear","listCacheDelete","listCacheGet","listCacheHas","listCacheSet","entry","nativeCreate","getNative","isKeyable","getPrototype","overArg","baseForOwn","baseEach","createBaseEach","isKey","stringToPath","overRest","setToString","longestPath","visited","dfs","POSITIVE_INFINITY","slack","getOwnPropertyDescriptors","descriptors","getOwnPropertyDescriptor","formatRegExp","f","isString","inspect","isNull","deprecate","msg","noDeprecation","warned","throwDeprecation","traceDeprecation","trace","debugEnviron","debugs","seen","stylize","stylizeNoColor","colors","isBoolean","showHidden","_extend","customInspect","stylizeWithColor","formatValue","styleType","recurseTimes","ret","primitive","simple","isNumber","formatPrimitive","visibleKeys","hash","val","arrayToHash","getOwnPropertyNames","isError","formatError","isRegExp","isDate","base","braces","toUTCString","formatProperty","formatArray","cur","numLinesEst","reduceToSingleString","desc","arg","pad","debuglog","NODE_ENV","PUBLIC_URL","NODE_DEBUG","pid","bold","italic","inverse","special","boolean","null","date","regexp","isNullOrUndefined","isPrimitive","months","getHours","getMinutes","getSeconds","getDate","getMonth","inherits","kCustomPromisifiedSymbol","callbackifyOnRejected","reason","newReason","promisify","promiseResolve","promiseReject","promise","reject","defineProperties","custom","callbackify","callbackified","maybeCb","then","nextTick","rej","DEFAULT_EDGE_NAME","GRAPH_NODE","EDGE_KEY_DELIM","_isDirected","directed","_isMultigraph","_isCompound","compound","_label","_defaultNodeLabelFn","_defaultEdgeLabelFn","_nodes","_parent","_children","_in","_preds","_out","_sucs","_edgeObjs","_edgeLabels","incrementOrInitEntry","decrementOrRemoveEntry","edgeArgsToId","isDirected","v_","w_","tmp","edgeObjToId","edgeObj","_nodeCount","_edgeCount","isCompound","setDefaultNodeLabel","newDefault","nodeCount","sinks","setNodes","removeNode","removeEdge","_removeFromParentsChildList","child","setParent","ancestor","predecessors","predsV","successors","sucsV","neighbors","isLeaf","filterNodes","parents","findParent","setDefaultEdgeLabel","edgeCount","setPath","valueSpecified","arg0","edgeArgsToObj","freeze","hasEdge","inV","outV","nodeEdges","mapCacheClear","mapCacheDelete","mapCacheGet","mapCacheHas","mapCacheSet","MapCache","webpackPolyfill","paths","freeProcess","types","require","binding","nativeKeys","arrayFilter","stubArray","nativeGetSymbols","getOwnPropertySymbols","getSymbols","symbol","arrayBuffer","byteLength","baseFor","createBaseFor","castPath","toKey","reIsDeepProp","reIsPlainProp","arrayPush","isFlattenable","baseFlatten","predicate","isStrict","comparator","computed","layout","debug","_defineProperty","_objectSpread","ownKeys","sym","arrayEach","baseAssign","baseAssignIn","cloneBuffer","copyArray","copySymbols","copySymbolsIn","getAllKeys","getAllKeysIn","initCloneArray","initCloneByTag","initCloneObject","isMap","isSet","CLONE_DEEP_FLAG","CLONE_FLAT_FLAG","CLONE_SYMBOLS_FLAG","objectTag","cloneableTags","baseClone","bitmask","stack","isDeep","isFlat","isFull","isArr","isFunc","stacked","subValue","keysFunc","funcToString","isArg","isBuff","allocUnsafe","resIndex","getSymbolsIn","baseGetAllKeys","symbolsFunc","cloneArrayBuffer","typedArray","byteOffset","baseCreate","objectCreate","castFunction","baseFilter","baseIteratee","baseIsEqualDeep","baseIsEqual","SetCache","arraySome","cacheHas","COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","equalFunc","isPartial","arrLength","othLength","arrValue","othValue","compared","othIndex","setCacheAdd","setCacheHas","baseToString","baseHasIn","hasPath","hasFunc","baseHas","arrayMap","baseMap","arrayReduce","baseReduce","accumulator","initAccum","baseSetToString","shortOut","fromIndex","fromRight","baseValues","PriorityQueue","weightFn","edgeFn","vEntry","pq","updateNeighbors","wEntry","predecessor","decrease","removeMin","runDijkstra","DEFAULT_WEIGHT_FUNC","_arr","_keyIndices","priority","keyIndices","_decrease","_swap","_heapify","largest","origArrI","origArrJ","onStack","lowlink","cmpt","topsort","visit","CycleException","navigation","acc","doDfs","postorder","toNumber","MAX_INTEGER","tightTree","edgeV","findMinSlackEdge","shiftRanks","base64","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","RangeError","encodingOrOffset","fromArrayLike","fromArrayBuffer","isEncoding","actual","write","fromString","checked","assertSize","isView","loweredCase","utf8ToBytes","base64ToBytes","bidirectionalIndexOf","dir","arrayIndexOf","lastIndexOf","indexSize","valLength","read","buf","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","hi","lo","utf16leToBytes","base64Slice","fromByteArray","utf8Slice","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","subarray","typedArraySupport","poolSize","_augment","species","allocUnsafeSlow","_isBuffer","compare","list","swap16","swap32","swap64","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","out","bytes","checkOffset","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","Infinity","leadSurrogate","toByteArray","stringtrim","base64clean","b64","lens","getLens","validLen","placeHoldersLen","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","len2","encodeChunk","lookup","num","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","timeout","run","marker","runClearTimeout","Item","title","browser","env","argv","versions","once","removeAllListeners","emit","prependListener","prependOnceListener","cwd","chdir","umask","ctor","superCtor","super_","TempCtor","assocIndexOf","LARGE_ARRAY_SIZE","pairs","isMasked","reIsHostCtor","funcProto","reIsNative","nativeObjectToString","isOwn","unmasked","coreJsData","maskSrcKey","IE_PROTO","Hash","hashClear","hashDelete","hashGet","hashHas","hashSet","HASH_UNDEFINED","getMapData","typedArrayTags","input","cloneDataView","cloneRegExp","cloneSymbol","cloneTypedArray","boolTag","dateTag","mapTag","numberTag","regexpTag","setTag","stringTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","dataView","reFlags","symbolProto","symbolValueOf","baseIsMap","nodeIsMap","baseIsSet","nodeIsSet","iterable","eachFunc","baseIsMatch","getMatchData","matchesStrictComparable","matchData","noCustomizer","equalArrays","equalByTag","equalObjects","arrayTag","objIsArr","othIsArr","objTag","othTag","objIsObj","othIsObj","isSameTag","objIsWrapped","othIsWrapped","objUnwrapped","othUnwrapped","mapToArray","setToArray","errorTag","message","convert","objProps","objLength","skipCtor","objCtor","othCtor","isStrictComparable","hasIn","baseGet","defaultValue","memoizeCapped","rePropName","reEscapeChar","quote","subString","memoize","MAX_MEMOIZE_SIZE","FUNC_ERROR_TEXT","resolver","memoized","Cache","symbolToString","baseProperty","basePropertyDeep","stringSize","asciiSize","hasUnicode","unicodeSize","reHasUnicode","rsAstral","rsCombo","rsFitz","rsNonAstral","rsRegional","rsSurrPair","reOptMod","rsSeq","rsSymbol","reUnicode","isArrLike","baseUniq","arrays","spreadableSymbol","isConcatSpreadable","HOT_COUNT","HOT_SPAN","nativeNow","count","lastCalled","stamp","arrayIncludes","arrayIncludesWith","createSet","isCommon","outer","seenIndex","baseIndexOf","baseFindIndex","baseIsNaN","strictIndexOf","writeNodes","writeEdges","edgeValue","components","dijkstra","dijkstraAll","findCycles","floydWarshall","isAcyclic","preorder","prim","tarjan","cmpts","weightFunc","edgeFunc","rowK","rowI","ik","kj","ij","altDistance","runFloydWarshall","pri","edgeWeight","init","acyclic","parentDummyChains","nestingGraph","addBorderSegments","coordinateSystem","debugTiming","layoutGraph","inputGraph","canonicalize","graphDefaults","selectNumberAttrs","graphNumAttrs","graphAttrs","nodeNumAttrs","nodeDefaults","edgeDefaults","edgeNumAttrs","edgeAttrs","buildLayoutGraph","ranksep","labelpos","rankdir","labeloffset","makeSpaceForEdgeLabels","selfEdges","removeSelfEdges","injectEdgeLabelProxies","cleanup","borderTop","minRank","borderBottom","assignRankMinMax","labelRank","removeEdgeLabelProxies","layer","orderShift","selfEdge","insertSelfEdges","selfNode","positionSelfEdges","borderLeft","borderRight","removeBorderNodes","undo","fixupEdgeLabelCoords","maxX","maxY","graphLabel","marginX","marginx","marginY","marginy","getExtremes","translateGraph","nodeV","nodeW","assignNodeIntersects","reversed","reversePointsForReversedEdges","runLayout","inputLabel","layoutLabel","updateInputGraph","edgesep","nodesep","newAttrs","propsIndex","propsLength","createFind","findIndexFunc","toInteger","toFinite","remainder","NAN","reTrim","reIsBadHex","reIsBinary","reIsOctal","freeParseInt","isBinary","baseExtremum","baseGt","baseMerge","createAssigner","assignMergeValue","baseMergeDeep","safeGet","isPlainObject","toPlainObject","mergeFunc","isTyped","objectCtorString","baseLt","basePick","flatRest","basePickBy","baseSet","nested","createRange","baseRange","step","nativeCeil","baseOrderBy","iteratees","baseSortBy","compareMultiple","orders","criteria","comparer","compareAscending","objCriteria","othCriteria","ordersLength","valIsDefined","valIsNull","valIsReflexive","valIsSymbol","othIsDefined","othIsNull","othIsReflexive","othIsSymbol","idCounter","baseZipObject","assignFunc","valsLength","greedyFAS","fas","acyclicer","dfsFAS","forwardName","List","state","fasGraph","maxIn","maxOut","in","prevWeight","buckets","zeroIdx","assignBucket","buildState","DEFAULT_WEIGHT_FN","dequeue","doGreedyFAS","collectPredecessors","uEntry","enqueue","sentinel","_next","_prev","_sentinel","unlink","filterOutLinks","strs","curr","dummyChains","vRank","wRank","edgeLabel","normalizeEdge","origLabel","feasibleTree","networkSimplex","ranker","networkSimplexRanker","tightTreeRanker","longestPathRanker","initRank","initLowLimValues","initCutValues","leaveEdge","exchangeEdges","enterEdge","cutvalue","calcCutValue","assignCutValue","childIsTail","graphEdge","cutValue","isOutEdge","pointsToHead","otherWeight","otherCutValue","tree","dfsAssignLowLim","nextLim","low","lim","vLabel","wLabel","tailLabel","flip","candidates","isDescendant","flipped","updateRanks","rootLabel","postorderNums","lca","vPath","wPath","findPath","pathIdx","pathV","ascending","depths","treeDepths","nodeSep","nestingRoot","sumWeights","childNode","childTop","childBottom","thisWeight","nestingEdge","sg","sgNode","borderType","swapWidthHeight","swapWidthHeightOne","reverseYOne","swapXYOne","rankDir","reverseY","swapXY","initOrder","crossCount","sortSubgraph","buildLayerGraph","addSubgraphConstraints","buildLayerGraphs","ranks","relationship","sweepLayerGraphs","layerGraphs","biasRight","cg","lg","sorted","assignOrder","downLayerGraphs","upLayerGraphs","best","bestCC","lastBest","cc","simpleNodes","orderedVs","twoLayerCrossCount","northLayer","southLayer","southPos","southEntries","firstIndex","treeSize","weightSum","barycenter","resolveConflicts","movable","subgraphs","barycenters","subgraphResult","expandSubgraphs","blPred","brPred","nodeU","sum","mappedEntries","indegree","entryV","entryW","sourceSet","handleIn","merged","mergeEntries","handleOut","doResolveConflicts","consumeUnsortable","unsortable","sortable","vsIndex","bias","createRootNode","rootPrev","prevChild","positionX","rankSep","prevY","positionY","findType1Conflicts","conflicts","prevLayer","k0","scanPos","prevLayerLength","lastNode","findOtherInnerSegmentNode","k1","scanNode","uLabel","uPos","addConflict","findType2Conflicts","scan","south","southEnd","prevNorthBorder","nextNorthBorder","uNode","north","nextNorthPos","prevNorthPos","southLookahead","conflictsV","hasConflict","verticalAlignment","neighborFn","prevIdx","ws","mp","il","horizontalCompaction","reverseSep","xs","blockG","blockGraph","sepFn","edgeSep","sep","vRoot","uRoot","prevMax","buildBlockGraph","iterate","setXsFunc","nextNodesFunc","elem","findSmallestWidthAlignment","xss","NEGATIVE_INFINITY","halfWidth","alignCoordinates","alignTo","alignToVals","alignToMin","alignToMax","vert","horiz","alignment","xsVals","balance","ul","ignore","adjustedLayering","inner","smallestWidth","debugOrdering","layerMatrix","layerV"],"mappings":"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","file":"static/js/2.913a24ac.chunk.js","sourcesContent":["/* global window */\nvar lodash;\n\nif (typeof require === \"function\") {\n  try {\n    lodash = {\n      cloneDeep: require(\"lodash/cloneDeep\"),\n      constant: require(\"lodash/constant\"),\n      defaults: require(\"lodash/defaults\"),\n      each: require(\"lodash/each\"),\n      filter: require(\"lodash/filter\"),\n      find: require(\"lodash/find\"),\n      flatten: require(\"lodash/flatten\"),\n      forEach: require(\"lodash/forEach\"),\n      forIn: require(\"lodash/forIn\"),\n      has: require(\"lodash/has\"),\n      isUndefined: require(\"lodash/isUndefined\"),\n      last: require(\"lodash/last\"),\n      map: require(\"lodash/map\"),\n      mapValues: require(\"lodash/mapValues\"),\n      max: require(\"lodash/max\"),\n      merge: require(\"lodash/merge\"),\n      min: require(\"lodash/min\"),\n      minBy: require(\"lodash/minBy\"),\n      now: require(\"lodash/now\"),\n      pick: require(\"lodash/pick\"),\n      range: require(\"lodash/range\"),\n      reduce: require(\"lodash/reduce\"),\n      sortBy: require(\"lodash/sortBy\"),\n      uniqueId: require(\"lodash/uniqueId\"),\n      values: require(\"lodash/values\"),\n      zipObject: require(\"lodash/zipObject\")\n    };\n  } catch (e) {}\n}\n\nif (!lodash) {\n  lodash = window._;\n}\n\nmodule.exports = lodash;","export default function _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}","function _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nexport default function _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\nmodule.exports = isArray;","/* build: `node build.js modules=ALL exclude=gestures,accessors requirejs minifier=uglifyjs` */\n\n/*! Fabric.js Copyright 2008-2015, Printio (Juriy Zaytsev, Maxim Chernyak) */\nvar fabric = fabric || {\n  version: '3.1.0'\n};\n\nif (typeof exports !== 'undefined') {\n  exports.fabric = fabric;\n}\n/* _AMD_START_ */\nelse if (typeof define === 'function' && define.amd) {\n    define([], function () {\n      return fabric;\n    });\n  }\n/* _AMD_END_ */\n\n\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  if (document instanceof (typeof HTMLDocument !== 'undefined' ? HTMLDocument : Document)) {\n    fabric.document = document;\n  } else {\n    fabric.document = document.implementation.createHTMLDocument('');\n  }\n\n  fabric.window = window;\n} else {\n  // assume we're running under node.js when document/window are not present\n  var jsdom = require('jsdom');\n\n  var virtualWindow = new jsdom.JSDOM(decodeURIComponent('%3C!DOCTYPE%20html%3E%3Chtml%3E%3Chead%3E%3C%2Fhead%3E%3Cbody%3E%3C%2Fbody%3E%3C%2Fhtml%3E'), {\n    features: {\n      FetchExternalResources: ['img']\n    },\n    resources: 'usable'\n  }).window;\n  fabric.document = virtualWindow.document;\n  fabric.jsdomImplForWrapper = require('jsdom/lib/jsdom/living/generated/utils').implForWrapper;\n  fabric.nodeCanvas = require('jsdom/lib/jsdom/utils').Canvas;\n  fabric.window = virtualWindow;\n  DOMParser = fabric.window.DOMParser;\n}\n/**\n * True when in environment that supports touch events\n * @type boolean\n */\n\n\nfabric.isTouchSupported = 'ontouchstart' in fabric.window || 'ontouchstart' in fabric.document || fabric.window && fabric.window.navigator && fabric.window.navigator.maxTouchPoints > 0;\n/**\n * True when in environment that's probably Node.js\n * @type boolean\n */\n\nfabric.isLikelyNode = typeof Buffer !== 'undefined' && typeof window === 'undefined';\n/* _FROM_SVG_START_ */\n\n/**\n * Attributes parsed from all SVG elements\n * @type array\n */\n\nfabric.SHARED_ATTRIBUTES = ['display', 'transform', 'fill', 'fill-opacity', 'fill-rule', 'opacity', 'stroke', 'stroke-dasharray', 'stroke-linecap', 'stroke-dashoffset', 'stroke-linejoin', 'stroke-miterlimit', 'stroke-opacity', 'stroke-width', 'id', 'paint-order', 'vector-effect', 'instantiated_by_use', 'clip-path'];\n/* _FROM_SVG_END_ */\n\n/**\n * Pixel per Inch as a default value set to 96. Can be changed for more realistic conversion.\n */\n\nfabric.DPI = 96;\nfabric.reNum = '(?:[-+]?(?:\\\\d+|\\\\d*\\\\.\\\\d+)(?:[eE][-+]?\\\\d+)?)';\nfabric.fontPaths = {};\nfabric.iMatrix = [1, 0, 0, 1, 0, 0];\n/**\n * Pixel limit for cache canvases. 1Mpx , 4Mpx should be fine.\n * @since 1.7.14\n * @type Number\n * @default\n */\n\nfabric.perfLimitSizeTotal = 2097152;\n/**\n * Pixel limit for cache canvases width or height. IE fixes the maximum at 5000\n * @since 1.7.14\n * @type Number\n * @default\n */\n\nfabric.maxCacheSideLimit = 4096;\n/**\n * Lowest pixel limit for cache canvases, set at 256PX\n * @since 1.7.14\n * @type Number\n * @default\n */\n\nfabric.minCacheSideLimit = 256;\n/**\n * Cache Object for widths of chars in text rendering.\n */\n\nfabric.charWidthsCache = {};\n/**\n * if webgl is enabled and available, textureSize will determine the size\n * of the canvas backend\n * @since 2.0.0\n * @type Number\n * @default\n */\n\nfabric.textureSize = 2048;\n/**\n * When 'true', style information is not retained when copy/pasting text, making\n * pasted text use destination style.\n * Defaults to 'false'.\n * @type Boolean\n * @default\n */\n\nfabric.disableStyleCopyPaste = false;\n/**\n * Enable webgl for filtering picture is available\n * A filtering backend will be initialized, this will both take memory and\n * time since a default 2048x2048 canvas will be created for the gl context\n * @since 2.0.0\n * @type Boolean\n * @default\n */\n\nfabric.enableGLFiltering = true;\n/**\n * Device Pixel Ratio\n * @see https://developer.apple.com/library/safari/documentation/AudioVideo/Conceptual/HTML-canvas-guide/SettingUptheCanvas/SettingUptheCanvas.html\n */\n\nfabric.devicePixelRatio = fabric.window.devicePixelRatio || fabric.window.webkitDevicePixelRatio || fabric.window.mozDevicePixelRatio || 1;\n/**\n * Browser-specific constant to adjust CanvasRenderingContext2D.shadowBlur value,\n * which is unitless and not rendered equally across browsers.\n *\n * Values that work quite well (as of October 2017) are:\n * - Chrome: 1.5\n * - Edge: 1.75\n * - Firefox: 0.9\n * - Safari: 0.95\n *\n * @since 2.0.0\n * @type Number\n * @default 1\n */\n\nfabric.browserShadowBlurConstant = 1;\n/**\n * This object contains the result of arc to beizer conversion for faster retrieving if the same arc needs to be converted again.\n * It was an internal variable, is accessible since version 2.3.4\n */\n\nfabric.arcToSegmentsCache = {};\n/**\n * This object keeps the results of the boundsOfCurve calculation mapped by the joined arguments necessary to calculate it.\n * It does speed up calculation, if you parse and add always the same paths, but in case of heavy usage of freedrawing\n * you do not get any speed benefit and you get a big object in memory.\n * The object was a private variable before, while now is appended to the lib so that you have access to it and you\n * can eventually clear it.\n * It was an internal variable, is accessible since version 2.3.4\n */\n\nfabric.boundsOfCurveCache = {};\n/**\n * If disabled boundsOfCurveCache is not used. For apps that make heavy usage of pencil drawing probably disabling it is better\n * @default true\n */\n\nfabric.cachesBoundsOfCurve = true;\n/**\n * Skip performance testing of setupGLContext and force the use of putImageData that seems to be the one that works best on\n * Chrome + old hardware. if your users are experiencing empty images after filtering you may try to force this to true\n * this has to be set before instantiating the filtering backend ( before filtering the first image )\n * @type Boolean\n * @default false\n */\n\nfabric.forceGLPutImageData = false;\n\nfabric.initFilterBackend = function () {\n  if (fabric.enableGLFiltering && fabric.isWebglSupported && fabric.isWebglSupported(fabric.textureSize)) {\n    console.log('max texture size: ' + fabric.maxTextureSize);\n    return new fabric.WebglFilterBackend({\n      tileSize: fabric.textureSize\n    });\n  } else if (fabric.Canvas2dFilterBackend) {\n    return new fabric.Canvas2dFilterBackend();\n  }\n};\n\nif (typeof document !== 'undefined' && typeof window !== 'undefined') {\n  // ensure globality even if entire library were function wrapped (as in Meteor.js packaging system)\n  window.fabric = fabric;\n}\n\n(function () {\n  /**\n   * @private\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n  function _removeEventListener(eventName, handler) {\n    if (!this.__eventListeners[eventName]) {\n      return;\n    }\n\n    var eventListener = this.__eventListeners[eventName];\n\n    if (handler) {\n      eventListener[eventListener.indexOf(handler)] = false;\n    } else {\n      fabric.util.array.fill(eventListener, false);\n    }\n  }\n  /**\n   * Observes specified event\n   * @deprecated `observe` deprecated since 0.8.34 (use `on` instead)\n   * @memberOf fabric.Observable\n   * @alias on\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function that receives a notification when an event of the specified type occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n\n\n  function observe(eventName, handler) {\n    if (!this.__eventListeners) {\n      this.__eventListeners = {};\n    } // one object with key/value pairs was passed\n\n\n    if (arguments.length === 1) {\n      for (var prop in eventName) {\n        this.on(prop, eventName[prop]);\n      }\n    } else {\n      if (!this.__eventListeners[eventName]) {\n        this.__eventListeners[eventName] = [];\n      }\n\n      this.__eventListeners[eventName].push(handler);\n    }\n\n    return this;\n  }\n  /**\n   * Stops event observing for a particular event handler. Calling this method\n   * without arguments removes all handlers for all events\n   * @deprecated `stopObserving` deprecated since 0.8.34 (use `off` instead)\n   * @memberOf fabric.Observable\n   * @alias off\n   * @param {String|Object} eventName Event name (eg. 'after:render') or object with key/value pairs (eg. {'after:render': handler, 'selection:cleared': handler})\n   * @param {Function} handler Function to be deleted from EventListeners\n   * @return {Self} thisArg\n   * @chainable\n   */\n\n\n  function stopObserving(eventName, handler) {\n    if (!this.__eventListeners) {\n      return this;\n    } // remove all key/value pairs (event name -> event handler)\n\n\n    if (arguments.length === 0) {\n      for (eventName in this.__eventListeners) {\n        _removeEventListener.call(this, eventName);\n      }\n    } // one object with key/value pairs was passed\n    else if (arguments.length === 1 && typeof arguments[0] === 'object') {\n        for (var prop in eventName) {\n          _removeEventListener.call(this, prop, eventName[prop]);\n        }\n      } else {\n        _removeEventListener.call(this, eventName, handler);\n      }\n\n    return this;\n  }\n  /**\n   * Fires event with an optional options object\n   * @deprecated `fire` deprecated since 1.0.7 (use `trigger` instead)\n   * @memberOf fabric.Observable\n   * @alias trigger\n   * @param {String} eventName Event name to fire\n   * @param {Object} [options] Options object\n   * @return {Self} thisArg\n   * @chainable\n   */\n\n\n  function fire(eventName, options) {\n    if (!this.__eventListeners) {\n      return this;\n    }\n\n    var listenersForEvent = this.__eventListeners[eventName];\n\n    if (!listenersForEvent) {\n      return this;\n    }\n\n    for (var i = 0, len = listenersForEvent.length; i < len; i++) {\n      listenersForEvent[i] && listenersForEvent[i].call(this, options || {});\n    }\n\n    this.__eventListeners[eventName] = listenersForEvent.filter(function (value) {\n      return value !== false;\n    });\n    return this;\n  }\n  /**\n   * @namespace fabric.Observable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#events}\n   * @see {@link http://fabricjs.com/events|Events demo}\n   */\n\n\n  fabric.Observable = {\n    observe: observe,\n    stopObserving: stopObserving,\n    fire: fire,\n    on: observe,\n    off: stopObserving,\n    trigger: fire\n  };\n})();\n/**\n * @namespace fabric.Collection\n */\n\n\nfabric.Collection = {\n  _objects: [],\n\n  /**\n   * Adds objects to collection, Canvas or Group, then renders canvas\n   * (if `renderOnAddRemove` is not `false`).\n   * in case of Group no changes to bounding box are made.\n   * Objects should be instances of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the add method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  add: function add() {\n    this._objects.push.apply(this._objects, arguments);\n\n    if (this._onObjectAdded) {\n      for (var i = 0, length = arguments.length; i < length; i++) {\n        this._onObjectAdded(arguments[i]);\n      }\n    }\n\n    this.renderOnAddRemove && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Inserts an object into collection at specified index, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * An object should be an instance of (or inherit from) fabric.Object\n   * Use of this function is highly discouraged for groups.\n   * you can add a bunch of objects with the insertAt method but then you NEED\n   * to run a addWithUpdate call for the Group class or position/bbox will be wrong.\n   * @param {Object} object Object to insert\n   * @param {Number} index Index to insert object at\n   * @param {Boolean} nonSplicing When `true`, no splicing (shifting) of objects occurs\n   * @return {Self} thisArg\n   * @chainable\n   */\n  insertAt: function insertAt(object, index, nonSplicing) {\n    var objects = this._objects;\n\n    if (nonSplicing) {\n      objects[index] = object;\n    } else {\n      objects.splice(index, 0, object);\n    }\n\n    this._onObjectAdded && this._onObjectAdded(object);\n    this.renderOnAddRemove && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Removes objects from a collection, then renders canvas (if `renderOnAddRemove` is not `false`)\n   * @param {...fabric.Object} object Zero or more fabric instances\n   * @return {Self} thisArg\n   * @chainable\n   */\n  remove: function remove() {\n    var objects = this._objects,\n        index,\n        somethingRemoved = false;\n\n    for (var i = 0, length = arguments.length; i < length; i++) {\n      index = objects.indexOf(arguments[i]); // only call onObjectRemoved if an object was actually removed\n\n      if (index !== -1) {\n        somethingRemoved = true;\n        objects.splice(index, 1);\n        this._onObjectRemoved && this._onObjectRemoved(arguments[i]);\n      }\n    }\n\n    this.renderOnAddRemove && somethingRemoved && this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Executes given function for each object in this group\n   * @param {Function} callback\n   *                   Callback invoked with current object as first argument,\n   *                   index - as second and an array of all objects - as third.\n   *                   Callback is invoked in a context of Global Object (e.g. `window`)\n   *                   when no `context` argument is given\n   *\n   * @param {Object} context Context (aka thisObject)\n   * @return {Self} thisArg\n   * @chainable\n   */\n  forEachObject: function forEachObject(callback, context) {\n    var objects = this.getObjects();\n\n    for (var i = 0, len = objects.length; i < len; i++) {\n      callback.call(context, objects[i], i, objects);\n    }\n\n    return this;\n  },\n\n  /**\n   * Returns an array of children objects of this instance\n   * Type parameter introduced in 1.3.10\n   * since 2.3.5 this method return always a COPY of the array;\n   * @param {String} [type] When specified, only objects of this type are returned\n   * @return {Array}\n   */\n  getObjects: function getObjects(type) {\n    if (typeof type === 'undefined') {\n      return this._objects.concat();\n    }\n\n    return this._objects.filter(function (o) {\n      return o.type === type;\n    });\n  },\n\n  /**\n   * Returns object at specified index\n   * @param {Number} index\n   * @return {Self} thisArg\n   */\n  item: function item(index) {\n    return this._objects[index];\n  },\n\n  /**\n   * Returns true if collection contains no objects\n   * @return {Boolean} true if collection is empty\n   */\n  isEmpty: function isEmpty() {\n    return this._objects.length === 0;\n  },\n\n  /**\n   * Returns a size of a collection (i.e: length of an array containing its objects)\n   * @return {Number} Collection size\n   */\n  size: function size() {\n    return this._objects.length;\n  },\n\n  /**\n   * Returns true if collection contains an object\n   * @param {Object} object Object to check against\n   * @return {Boolean} `true` if collection contains an object\n   */\n  contains: function contains(object) {\n    return this._objects.indexOf(object) > -1;\n  },\n\n  /**\n   * Returns number representation of a collection complexity\n   * @return {Number} complexity\n   */\n  complexity: function complexity() {\n    return this._objects.reduce(function (memo, current) {\n      memo += current.complexity ? current.complexity() : 0;\n      return memo;\n    }, 0);\n  }\n};\n/**\n * @namespace fabric.CommonMethods\n */\n\nfabric.CommonMethods = {\n  /**\n   * Sets object's properties from options\n   * @param {Object} [options] Options object\n   */\n  _setOptions: function _setOptions(options) {\n    for (var prop in options) {\n      this.set(prop, options[prop]);\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Gradient to\n   */\n  _initGradient: function _initGradient(filler, property) {\n    if (filler && filler.colorStops && !(filler instanceof fabric.Gradient)) {\n      this.set(property, new fabric.Gradient(filler));\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [filler] Options object\n   * @param {String} [property] property to set the Pattern to\n   * @param {Function} [callback] callback to invoke after pattern load\n   */\n  _initPattern: function _initPattern(filler, property, callback) {\n    if (filler && filler.source && !(filler instanceof fabric.Pattern)) {\n      this.set(property, new fabric.Pattern(filler, callback));\n    } else {\n      callback && callback();\n    }\n  },\n\n  /**\n   * @private\n   * @param {Object} [options] Options object\n   */\n  _initClipping: function _initClipping(options) {\n    if (!options.clipTo || typeof options.clipTo !== 'string') {\n      return;\n    }\n\n    var functionBody = fabric.util.getFunctionBody(options.clipTo);\n\n    if (typeof functionBody !== 'undefined') {\n      this.clipTo = new Function('ctx', functionBody);\n    }\n  },\n\n  /**\n   * @private\n   */\n  _setObject: function _setObject(obj) {\n    for (var prop in obj) {\n      this._set(prop, obj[prop]);\n    }\n  },\n\n  /**\n   * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n   * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n   * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  set: function set(key, value) {\n    if (typeof key === 'object') {\n      this._setObject(key);\n    } else {\n      if (typeof value === 'function' && key !== 'clipTo') {\n        this._set(key, value(this.get(key)));\n      } else {\n        this._set(key, value);\n      }\n    }\n\n    return this;\n  },\n  _set: function _set(key, value) {\n    this[key] = value;\n  },\n\n  /**\n   * Toggles specified property from `true` to `false` or from `false` to `true`\n   * @param {String} property Property to toggle\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  toggle: function toggle(property) {\n    var value = this.get(property);\n\n    if (typeof value === 'boolean') {\n      this.set(property, !value);\n    }\n\n    return this;\n  },\n\n  /**\n   * Basic getter\n   * @param {String} property Property name\n   * @return {*} value of a property\n   */\n  get: function get(property) {\n    return this[property];\n  }\n};\n\n(function (global) {\n  var sqrt = Math.sqrt,\n      atan2 = Math.atan2,\n      pow = Math.pow,\n      abs = Math.abs,\n      PiBy180 = Math.PI / 180,\n      PiBy2 = Math.PI / 2;\n  /**\n   * @namespace fabric.util\n   */\n\n  fabric.util = {\n    /**\n     * Calculate the cos of an angle, avoiding returning floats for known results\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} angle the angle in radians or in degree\n     * @return {Number}\n     */\n    cos: function cos(angle) {\n      if (angle === 0) {\n        return 1;\n      }\n\n      if (angle < 0) {\n        // cos(a) = cos(-a)\n        angle = -angle;\n      }\n\n      var angleSlice = angle / PiBy2;\n\n      switch (angleSlice) {\n        case 1:\n        case 3:\n          return 0;\n\n        case 2:\n          return -1;\n      }\n\n      return Math.cos(angle);\n    },\n\n    /**\n     * Calculate the sin of an angle, avoiding returning floats for known results\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} angle the angle in radians or in degree\n     * @return {Number}\n     */\n    sin: function sin(angle) {\n      if (angle === 0) {\n        return 0;\n      }\n\n      var angleSlice = angle / PiBy2,\n          sign = 1;\n\n      if (angle < 0) {\n        // sin(-a) = -sin(a)\n        sign = -1;\n      }\n\n      switch (angleSlice) {\n        case 1:\n          return sign;\n\n        case 2:\n          return 0;\n\n        case 3:\n          return -sign;\n      }\n\n      return Math.sin(angle);\n    },\n\n    /**\n     * Removes value from an array.\n     * Presence of value (and its position in an array) is determined via `Array.prototype.indexOf`\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} array\n     * @param {*} value\n     * @return {Array} original array\n     */\n    removeFromArray: function removeFromArray(array, value) {\n      var idx = array.indexOf(value);\n\n      if (idx !== -1) {\n        array.splice(idx, 1);\n      }\n\n      return array;\n    },\n\n    /**\n     * Returns random number between 2 specified ones.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} min lower limit\n     * @param {Number} max upper limit\n     * @return {Number} random value (between min and max)\n     */\n    getRandomInt: function getRandomInt(min, max) {\n      return Math.floor(Math.random() * (max - min + 1)) + min;\n    },\n\n    /**\n     * Transforms degrees to radians.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} degrees value in degrees\n     * @return {Number} value in radians\n     */\n    degreesToRadians: function degreesToRadians(degrees) {\n      return degrees * PiBy180;\n    },\n\n    /**\n     * Transforms radians to degrees.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number} radians value in radians\n     * @return {Number} value in degrees\n     */\n    radiansToDegrees: function radiansToDegrees(radians) {\n      return radians / PiBy180;\n    },\n\n    /**\n     * Rotates `point` around `origin` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {fabric.Point} point The point to rotate\n     * @param {fabric.Point} origin The origin of the rotation\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {fabric.Point} The new rotated point\n     */\n    rotatePoint: function rotatePoint(point, origin, radians) {\n      point.subtractEquals(origin);\n      var v = fabric.util.rotateVector(point, radians);\n      return new fabric.Point(v.x, v.y).addEquals(origin);\n    },\n\n    /**\n     * Rotates `vector` with `radians`\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} vector The vector to rotate (x and y)\n     * @param {Number} radians The radians of the angle for the rotation\n     * @return {Object} The new rotated point\n     */\n    rotateVector: function rotateVector(vector, radians) {\n      var sin = fabric.util.sin(radians),\n          cos = fabric.util.cos(radians),\n          rx = vector.x * cos - vector.y * sin,\n          ry = vector.x * sin + vector.y * cos;\n      return {\n        x: rx,\n        y: ry\n      };\n    },\n\n    /**\n     * Apply transform t to point p\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Point} p The point to transform\n     * @param  {Array} t The transform\n     * @param  {Boolean} [ignoreOffset] Indicates that the offset should not be applied\n     * @return {fabric.Point} The transformed point\n     */\n    transformPoint: function transformPoint(p, t, ignoreOffset) {\n      if (ignoreOffset) {\n        return new fabric.Point(t[0] * p.x + t[2] * p.y, t[1] * p.x + t[3] * p.y);\n      }\n\n      return new fabric.Point(t[0] * p.x + t[2] * p.y + t[4], t[1] * p.x + t[3] * p.y + t[5]);\n    },\n\n    /**\n     * Returns coordinates of points's bounding rectangle (left, top, width, height)\n     * @param {Array} points 4 points array\n     * @return {Object} Object with left, top, width, height properties\n     */\n    makeBoundingBoxFromPoints: function makeBoundingBoxFromPoints(points) {\n      var xPoints = [points[0].x, points[1].x, points[2].x, points[3].x],\n          minX = fabric.util.array.min(xPoints),\n          maxX = fabric.util.array.max(xPoints),\n          width = maxX - minX,\n          yPoints = [points[0].y, points[1].y, points[2].y, points[3].y],\n          minY = fabric.util.array.min(yPoints),\n          maxY = fabric.util.array.max(yPoints),\n          height = maxY - minY;\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Invert transformation t\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} t The transform\n     * @return {Array} The inverted transform\n     */\n    invertTransform: function invertTransform(t) {\n      var a = 1 / (t[0] * t[3] - t[1] * t[2]),\n          r = [a * t[3], -a * t[1], -a * t[2], a * t[0]],\n          o = fabric.util.transformPoint({\n        x: t[4],\n        y: t[5]\n      }, r, true);\n      r[4] = -o.x;\n      r[5] = -o.y;\n      return r;\n    },\n\n    /**\n     * A wrapper around Number#toFixed, which contrary to native method returns number, not string.\n     * @static\n     * @memberOf fabric.util\n     * @param {Number|String} number number to operate on\n     * @param {Number} fractionDigits number of fraction digits to \"leave\"\n     * @return {Number}\n     */\n    toFixed: function toFixed(number, fractionDigits) {\n      return parseFloat(Number(number).toFixed(fractionDigits));\n    },\n\n    /**\n     * Converts from attribute value to pixel value if applicable.\n     * Returns converted pixels or original value not converted.\n     * @param {Number|String} value number to operate on\n     * @param {Number} fontSize\n     * @return {Number|String}\n     */\n    parseUnit: function parseUnit(value, fontSize) {\n      var unit = /\\D{0,2}$/.exec(value),\n          number = parseFloat(value);\n\n      if (!fontSize) {\n        fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n      }\n\n      switch (unit[0]) {\n        case 'mm':\n          return number * fabric.DPI / 25.4;\n\n        case 'cm':\n          return number * fabric.DPI / 2.54;\n\n        case 'in':\n          return number * fabric.DPI;\n\n        case 'pt':\n          return number * fabric.DPI / 72;\n        // or * 4 / 3\n\n        case 'pc':\n          return number * fabric.DPI / 72 * 12;\n        // or * 16\n\n        case 'em':\n          return number * fontSize;\n\n        default:\n          return number;\n      }\n    },\n\n    /**\n     * Function which always returns `false`.\n     * @static\n     * @memberOf fabric.util\n     * @return {Boolean}\n     */\n    falseFunction: function falseFunction() {\n      return false;\n    },\n\n    /**\n     * Returns klass \"Class\" object of given namespace\n     * @memberOf fabric.util\n     * @param {String} type Type of object (eg. 'circle')\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @return {Object} klass \"Class\"\n     */\n    getKlass: function getKlass(type, namespace) {\n      // capitalize first letter only\n      type = fabric.util.string.camelize(type.charAt(0).toUpperCase() + type.slice(1));\n      return fabric.util.resolveNamespace(namespace)[type];\n    },\n\n    /**\n     * Returns array of attributes for given svg that fabric parses\n     * @memberOf fabric.util\n     * @param {String} type Type of svg element (eg. 'circle')\n     * @return {Array} string names of supported attributes\n     */\n    getSvgAttributes: function getSvgAttributes(type) {\n      var attributes = ['instantiated_by_use', 'style', 'id', 'class'];\n\n      switch (type) {\n        case 'linearGradient':\n          attributes = attributes.concat(['x1', 'y1', 'x2', 'y2', 'gradientUnits', 'gradientTransform']);\n          break;\n\n        case 'radialGradient':\n          attributes = attributes.concat(['gradientUnits', 'gradientTransform', 'cx', 'cy', 'r', 'fx', 'fy', 'fr']);\n          break;\n\n        case 'stop':\n          attributes = attributes.concat(['offset', 'stop-color', 'stop-opacity']);\n          break;\n      }\n\n      return attributes;\n    },\n\n    /**\n     * Returns object of given namespace\n     * @memberOf fabric.util\n     * @param {String} namespace Namespace string e.g. 'fabric.Image.filter' or 'fabric'\n     * @return {Object} Object for given namespace (default fabric)\n     */\n    resolveNamespace: function resolveNamespace(namespace) {\n      if (!namespace) {\n        return fabric;\n      }\n\n      var parts = namespace.split('.'),\n          len = parts.length,\n          i,\n          obj = global || fabric.window;\n\n      for (i = 0; i < len; ++i) {\n        obj = obj[parts[i]];\n      }\n\n      return obj;\n    },\n\n    /**\n     * Loads image element from given url and passes it to a callback\n     * @memberOf fabric.util\n     * @param {String} url URL representing an image\n     * @param {Function} callback Callback; invoked with loaded image\n     * @param {*} [context] Context to invoke callback in\n     * @param {Object} [crossOrigin] crossOrigin value to set image element to\n     */\n    loadImage: function loadImage(url, callback, context, crossOrigin) {\n      if (!url) {\n        callback && callback.call(context, url);\n        return;\n      }\n\n      var img = fabric.util.createImage();\n      /** @ignore */\n\n      var onLoadCallback = function onLoadCallback() {\n        callback && callback.call(context, img);\n        img = img.onload = img.onerror = null;\n      };\n\n      img.onload = onLoadCallback;\n      /** @ignore */\n\n      img.onerror = function () {\n        fabric.log('Error loading ' + img.src);\n        callback && callback.call(context, null, true);\n        img = img.onload = img.onerror = null;\n      }; // data-urls appear to be buggy with crossOrigin\n      // https://github.com/kangax/fabric.js/commit/d0abb90f1cd5c5ef9d2a94d3fb21a22330da3e0a#commitcomment-4513767\n      // see https://code.google.com/p/chromium/issues/detail?id=315152\n      //     https://bugzilla.mozilla.org/show_bug.cgi?id=935069\n\n\n      if (url.indexOf('data') !== 0 && crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      } // IE10 / IE11-Fix: SVG contents from data: URI\n      // will only be available if the IMG is present\n      // in the DOM (and visible)\n\n\n      if (url.substring(0, 14) === 'data:image/svg') {\n        img.onload = null;\n        fabric.util.loadImageInDom(img, onLoadCallback);\n      }\n\n      img.src = url;\n    },\n\n    /**\n     * Attaches SVG image with data: URL to the dom\n     * @memberOf fabric.util\n     * @param {Object} img Image object with data:image/svg src\n     * @param {Function} callback Callback; invoked with loaded image\n     * @return {Object} DOM element (div containing the SVG image)\n     */\n    loadImageInDom: function loadImageInDom(img, onLoadCallback) {\n      var div = fabric.document.createElement('div');\n      div.style.width = div.style.height = '1px';\n      div.style.left = div.style.top = '-100%';\n      div.style.position = 'absolute';\n      div.appendChild(img);\n      fabric.document.querySelector('body').appendChild(div);\n      /**\n       * Wrap in function to:\n       *   1. Call existing callback\n       *   2. Cleanup DOM\n       */\n\n      img.onload = function () {\n        onLoadCallback();\n        div.parentNode.removeChild(div);\n        div = null;\n      };\n    },\n\n    /**\n     * Creates corresponding fabric instances from their object representations\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} objects Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * @param {String} namespace Namespace to get klass \"Class\" object from\n     * @param {Function} reviver Method for further parsing of object elements,\n     * called after each fabric object created.\n     */\n    enlivenObjects: function enlivenObjects(objects, callback, namespace, reviver) {\n      objects = objects || [];\n      var enlivenedObjects = [],\n          numLoadedObjects = 0,\n          numTotalObjects = objects.length;\n\n      function onLoaded() {\n        if (++numLoadedObjects === numTotalObjects) {\n          callback && callback(enlivenedObjects.filter(function (obj) {\n            // filter out undefined objects (objects that gave error)\n            return obj;\n          }));\n        }\n      }\n\n      if (!numTotalObjects) {\n        callback && callback(enlivenedObjects);\n        return;\n      }\n\n      objects.forEach(function (o, index) {\n        // if sparse array\n        if (!o || !o.type) {\n          onLoaded();\n          return;\n        }\n\n        var klass = fabric.util.getKlass(o.type, namespace);\n        klass.fromObject(o, function (obj, error) {\n          error || (enlivenedObjects[index] = obj);\n          reviver && reviver(o, obj, error);\n          onLoaded();\n        });\n      });\n    },\n\n    /**\n     * Create and wait for loading of patterns\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} patterns Objects to enliven\n     * @param {Function} callback Callback to invoke when all objects are created\n     * called after each fabric object created.\n     */\n    enlivenPatterns: function enlivenPatterns(patterns, callback) {\n      patterns = patterns || [];\n\n      function onLoaded() {\n        if (++numLoadedPatterns === numPatterns) {\n          callback && callback(enlivenedPatterns);\n        }\n      }\n\n      var enlivenedPatterns = [],\n          numLoadedPatterns = 0,\n          numPatterns = patterns.length;\n\n      if (!numPatterns) {\n        callback && callback(enlivenedPatterns);\n        return;\n      }\n\n      patterns.forEach(function (p, index) {\n        if (p && p.source) {\n          new fabric.Pattern(p, function (pattern) {\n            enlivenedPatterns[index] = pattern;\n            onLoaded();\n          });\n        } else {\n          enlivenedPatterns[index] = p;\n          onLoaded();\n        }\n      });\n    },\n\n    /**\n     * Groups SVG elements (usually those retrieved from SVG document)\n     * @static\n     * @memberOf fabric.util\n     * @param {Array} elements SVG elements to group\n     * @param {Object} [options] Options object\n     * @param {String} path Value to set sourcePath to\n     * @return {fabric.Object|fabric.Group}\n     */\n    groupSVGElements: function groupSVGElements(elements, options, path) {\n      var object;\n\n      if (elements && elements.length === 1) {\n        return elements[0];\n      }\n\n      if (options) {\n        if (options.width && options.height) {\n          options.centerPoint = {\n            x: options.width / 2,\n            y: options.height / 2\n          };\n        } else {\n          delete options.width;\n          delete options.height;\n        }\n      }\n\n      object = new fabric.Group(elements, options);\n\n      if (typeof path !== 'undefined') {\n        object.sourcePath = path;\n      }\n\n      return object;\n    },\n\n    /**\n     * Populates an object with properties of another object\n     * @static\n     * @memberOf fabric.util\n     * @param {Object} source Source object\n     * @param {Object} destination Destination object\n     * @return {Array} properties Properties names to include\n     */\n    populateWithProperties: function populateWithProperties(source, destination, properties) {\n      if (properties && Object.prototype.toString.call(properties) === '[object Array]') {\n        for (var i = 0, len = properties.length; i < len; i++) {\n          if (properties[i] in source) {\n            destination[properties[i]] = source[properties[i]];\n          }\n        }\n      }\n    },\n\n    /**\n     * Draws a dashed line between two points\n     *\n     * This method is used to draw dashed line around selection area.\n     * See <a href=\"http://stackoverflow.com/questions/4576724/dotted-stroke-in-canvas\">dotted stroke in canvas</a>\n     *\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x  start x coordinate\n     * @param {Number} y start y coordinate\n     * @param {Number} x2 end x coordinate\n     * @param {Number} y2 end y coordinate\n     * @param {Array} da dash array pattern\n     */\n    drawDashedLine: function drawDashedLine(ctx, x, y, x2, y2, da) {\n      var dx = x2 - x,\n          dy = y2 - y,\n          len = sqrt(dx * dx + dy * dy),\n          rot = atan2(dy, dx),\n          dc = da.length,\n          di = 0,\n          draw = true;\n      ctx.save();\n      ctx.translate(x, y);\n      ctx.moveTo(0, 0);\n      ctx.rotate(rot);\n      x = 0;\n\n      while (len > x) {\n        x += da[di++ % dc];\n\n        if (x > len) {\n          x = len;\n        }\n\n        ctx[draw ? 'lineTo' : 'moveTo'](x, 0);\n        draw = !draw;\n      }\n\n      ctx.restore();\n    },\n\n    /**\n     * Creates canvas element\n     * @static\n     * @memberOf fabric.util\n     * @return {CanvasElement} initialized canvas element\n     */\n    createCanvasElement: function createCanvasElement() {\n      return fabric.document.createElement('canvas');\n    },\n\n    /**\n     * Creates a canvas element that is a copy of another and is also painted\n     * @param {CanvasElement} canvas to copy size and content of\n     * @static\n     * @memberOf fabric.util\n     * @return {CanvasElement} initialized canvas element\n     */\n    copyCanvasElement: function copyCanvasElement(canvas) {\n      var newCanvas = fabric.util.createCanvasElement();\n      newCanvas.width = canvas.width;\n      newCanvas.height = canvas.height;\n      newCanvas.getContext('2d').drawImage(canvas, 0, 0);\n      return newCanvas;\n    },\n\n    /**\n     * since 2.6.0 moved from canvas instance to utility.\n     * @param {CanvasElement} canvasEl to copy size and content of\n     * @param {String} format 'jpeg' or 'png', in some browsers 'webp' is ok too\n     * @param {Number} quality <= 1 and > 0\n     * @static\n     * @memberOf fabric.util\n     * @return {String} data url\n     */\n    toDataURL: function toDataURL(canvasEl, format, quality) {\n      return canvasEl.toDataURL('image/' + format, quality);\n    },\n\n    /**\n     * Creates image element (works on client and node)\n     * @static\n     * @memberOf fabric.util\n     * @return {HTMLImageElement} HTML image element\n     */\n    createImage: function createImage() {\n      return fabric.document.createElement('img');\n    },\n\n    /**\n     * @static\n     * @memberOf fabric.util\n     * @deprecated since 2.0.0\n     * @param {fabric.Object} receiver Object implementing `clipTo` method\n     * @param {CanvasRenderingContext2D} ctx Context to clip\n     */\n    clipContext: function clipContext(receiver, ctx) {\n      ctx.save();\n      ctx.beginPath();\n      receiver.clipTo(ctx);\n      ctx.clip();\n    },\n\n    /**\n     * Multiply matrix A by matrix B to nest transformations\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a First transformMatrix\n     * @param  {Array} b Second transformMatrix\n     * @param  {Boolean} is2x2 flag to multiply matrices as 2x2 matrices\n     * @return {Array} The product of the two transform matrices\n     */\n    multiplyTransformMatrices: function multiplyTransformMatrices(a, b, is2x2) {\n      // Matrix multiply a * b\n      return [a[0] * b[0] + a[2] * b[1], a[1] * b[0] + a[3] * b[1], a[0] * b[2] + a[2] * b[3], a[1] * b[2] + a[3] * b[3], is2x2 ? 0 : a[0] * b[4] + a[2] * b[5] + a[4], is2x2 ? 0 : a[1] * b[4] + a[3] * b[5] + a[5]];\n    },\n\n    /**\n     * Decomposes standard 2x2 matrix into transform componentes\n     * @static\n     * @memberOf fabric.util\n     * @param  {Array} a transformMatrix\n     * @return {Object} Components of transform\n     */\n    qrDecompose: function qrDecompose(a) {\n      var angle = atan2(a[1], a[0]),\n          denom = pow(a[0], 2) + pow(a[1], 2),\n          scaleX = sqrt(denom),\n          scaleY = (a[0] * a[3] - a[2] * a[1]) / scaleX,\n          skewX = atan2(a[0] * a[2] + a[1] * a[3], denom);\n      return {\n        angle: angle / PiBy180,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        skewX: skewX / PiBy180,\n        skewY: 0,\n        translateX: a[4],\n        translateY: a[5]\n      };\n    },\n    customTransformMatrix: function customTransformMatrix(scaleX, scaleY, skewX) {\n      var skewMatrixX = [1, 0, abs(Math.tan(skewX * PiBy180)), 1],\n          scaleMatrix = [abs(scaleX), 0, 0, abs(scaleY)];\n      return fabric.util.multiplyTransformMatrices(scaleMatrix, skewMatrixX, true);\n    },\n\n    /**\n     * reset an object transform state to neutral. Top and left are not accounted for\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Object} target object to transform\n     */\n    resetObjectTransform: function resetObjectTransform(target) {\n      target.scaleX = 1;\n      target.scaleY = 1;\n      target.skewX = 0;\n      target.skewY = 0;\n      target.flipX = false;\n      target.flipY = false;\n      target.rotate(0);\n    },\n\n    /**\n     * Extract Object transform values\n     * @static\n     * @memberOf fabric.util\n     * @param  {fabric.Object} target object to read from\n     * @return {Object} Components of transform\n     */\n    saveObjectTransform: function saveObjectTransform(target) {\n      return {\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        angle: target.angle,\n        left: target.left,\n        flipX: target.flipX,\n        flipY: target.flipY,\n        top: target.top\n      };\n    },\n\n    /**\n     * Returns string representation of function body\n     * @param {Function} fn Function to get body of\n     * @return {String} Function body\n     */\n    getFunctionBody: function getFunctionBody(fn) {\n      return (String(fn).match(/function[^{]*\\{([\\s\\S]*)\\}/) || {})[1];\n    },\n\n    /**\n     * Returns true if context has transparent pixel\n     * at specified location (taking tolerance into account)\n     * @param {CanvasRenderingContext2D} ctx context\n     * @param {Number} x x coordinate\n     * @param {Number} y y coordinate\n     * @param {Number} tolerance Tolerance\n     */\n    isTransparent: function isTransparent(ctx, x, y, tolerance) {\n      // If tolerance is > 0 adjust start coords to take into account.\n      // If moves off Canvas fix to 0\n      if (tolerance > 0) {\n        if (x > tolerance) {\n          x -= tolerance;\n        } else {\n          x = 0;\n        }\n\n        if (y > tolerance) {\n          y -= tolerance;\n        } else {\n          y = 0;\n        }\n      }\n\n      var _isTransparent = true,\n          i,\n          temp,\n          imageData = ctx.getImageData(x, y, tolerance * 2 || 1, tolerance * 2 || 1),\n          l = imageData.data.length; // Split image data - for tolerance > 1, pixelDataSize = 4;\n\n      for (i = 3; i < l; i += 4) {\n        temp = imageData.data[i];\n        _isTransparent = temp <= 0;\n\n        if (_isTransparent === false) {\n          break; // Stop if colour found\n        }\n      }\n\n      imageData = null;\n      return _isTransparent;\n    },\n\n    /**\n     * Parse preserveAspectRatio attribute from element\n     * @param {string} attribute to be parsed\n     * @return {Object} an object containing align and meetOrSlice attribute\n     */\n    parsePreserveAspectRatioAttribute: function parsePreserveAspectRatioAttribute(attribute) {\n      var meetOrSlice = 'meet',\n          alignX = 'Mid',\n          alignY = 'Mid',\n          aspectRatioAttrs = attribute.split(' '),\n          align;\n\n      if (aspectRatioAttrs && aspectRatioAttrs.length) {\n        meetOrSlice = aspectRatioAttrs.pop();\n\n        if (meetOrSlice !== 'meet' && meetOrSlice !== 'slice') {\n          align = meetOrSlice;\n          meetOrSlice = 'meet';\n        } else if (aspectRatioAttrs.length) {\n          align = aspectRatioAttrs.pop();\n        }\n      } //divide align in alignX and alignY\n\n\n      alignX = align !== 'none' ? align.slice(1, 4) : 'none';\n      alignY = align !== 'none' ? align.slice(5, 8) : 'none';\n      return {\n        meetOrSlice: meetOrSlice,\n        alignX: alignX,\n        alignY: alignY\n      };\n    },\n\n    /**\n     * Clear char widths cache for the given font family or all the cache if no\n     * fontFamily is specified.\n     * Use it if you know you are loading fonts in a lazy way and you are not waiting\n     * for custom fonts to load properly when adding text objects to the canvas.\n     * If a text object is added when its own font is not loaded yet, you will get wrong\n     * measurement and so wrong bounding boxes.\n     * After the font cache is cleared, either change the textObject text content or call\n     * initDimensions() to trigger a recalculation\n     * @memberOf fabric.util\n     * @param {String} [fontFamily] font family to clear\n     */\n    clearFabricFontCache: function clearFabricFontCache(fontFamily) {\n      fontFamily = (fontFamily || '').toLowerCase();\n\n      if (!fontFamily) {\n        fabric.charWidthsCache = {};\n      } else if (fabric.charWidthsCache[fontFamily]) {\n        delete fabric.charWidthsCache[fontFamily];\n      }\n    },\n\n    /**\n     * Given current aspect ratio, determines the max width and height that can\n     * respect the total allowed area for the cache.\n     * @memberOf fabric.util\n     * @param {Number} ar aspect ratio\n     * @param {Number} maximumArea Maximum area you want to achieve\n     * @return {Object.x} Limited dimensions by X\n     * @return {Object.y} Limited dimensions by Y\n     */\n    limitDimsByArea: function limitDimsByArea(ar, maximumArea) {\n      var roughWidth = Math.sqrt(maximumArea * ar),\n          perfLimitSizeY = Math.floor(maximumArea / roughWidth);\n      return {\n        x: Math.floor(roughWidth),\n        y: perfLimitSizeY\n      };\n    },\n    capValue: function capValue(min, value, max) {\n      return Math.max(min, Math.min(value, max));\n    },\n    findScaleToFit: function findScaleToFit(source, destination) {\n      return Math.min(destination.width / source.width, destination.height / source.height);\n    },\n    findScaleToCover: function findScaleToCover(source, destination) {\n      return Math.max(destination.width / source.width, destination.height / source.height);\n    },\n\n    /**\n     * given an array of 6 number returns something like `\"matrix(...numbers)\"`\n     * @memberOf fabric.util\n     * @param {Array} trasnform an array with 6 numbers\n     * @return {String} transform matrix for svg\n     * @return {Object.y} Limited dimensions by Y\n     */\n    matrixToSVG: function matrixToSVG(transform) {\n      return 'matrix(' + transform.map(function (value) {\n        return fabric.util.toFixed(value, fabric.Object.NUM_FRACTION_DIGITS);\n      }).join(' ') + ')';\n    }\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function () {\n  var _join = Array.prototype.join;\n  /* Adapted from http://dxr.mozilla.org/mozilla-central/source/content/svg/content/src/nsSVGPathDataParser.cpp\n   * by Andrea Bogazzi code is under MPL. if you don't have a copy of the license you can take it here\n   * http://mozilla.org/MPL/2.0/\n   */\n\n  function arcToSegments(toX, toY, rx, ry, large, sweep, rotateX) {\n    var argsString = _join.call(arguments);\n\n    if (fabric.arcToSegmentsCache[argsString]) {\n      return fabric.arcToSegmentsCache[argsString];\n    }\n\n    var PI = Math.PI,\n        th = rotateX * PI / 180,\n        sinTh = fabric.util.sin(th),\n        cosTh = fabric.util.cos(th),\n        fromX = 0,\n        fromY = 0;\n    rx = Math.abs(rx);\n    ry = Math.abs(ry);\n    var px = -cosTh * toX * 0.5 - sinTh * toY * 0.5,\n        py = -cosTh * toY * 0.5 + sinTh * toX * 0.5,\n        rx2 = rx * rx,\n        ry2 = ry * ry,\n        py2 = py * py,\n        px2 = px * px,\n        pl = rx2 * ry2 - rx2 * py2 - ry2 * px2,\n        root = 0;\n\n    if (pl < 0) {\n      var s = Math.sqrt(1 - pl / (rx2 * ry2));\n      rx *= s;\n      ry *= s;\n    } else {\n      root = (large === sweep ? -1.0 : 1.0) * Math.sqrt(pl / (rx2 * py2 + ry2 * px2));\n    }\n\n    var cx = root * rx * py / ry,\n        cy = -root * ry * px / rx,\n        cx1 = cosTh * cx - sinTh * cy + toX * 0.5,\n        cy1 = sinTh * cx + cosTh * cy + toY * 0.5,\n        mTheta = calcVectorAngle(1, 0, (px - cx) / rx, (py - cy) / ry),\n        dtheta = calcVectorAngle((px - cx) / rx, (py - cy) / ry, (-px - cx) / rx, (-py - cy) / ry);\n\n    if (sweep === 0 && dtheta > 0) {\n      dtheta -= 2 * PI;\n    } else if (sweep === 1 && dtheta < 0) {\n      dtheta += 2 * PI;\n    } // Convert into cubic bezier segments <= 90deg\n\n\n    var segments = Math.ceil(Math.abs(dtheta / PI * 2)),\n        result = [],\n        mDelta = dtheta / segments,\n        mT = 8 / 3 * Math.sin(mDelta / 4) * Math.sin(mDelta / 4) / Math.sin(mDelta / 2),\n        th3 = mTheta + mDelta;\n\n    for (var i = 0; i < segments; i++) {\n      result[i] = segmentToBezier(mTheta, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY);\n      fromX = result[i][4];\n      fromY = result[i][5];\n      mTheta = th3;\n      th3 += mDelta;\n    }\n\n    fabric.arcToSegmentsCache[argsString] = result;\n    return result;\n  }\n\n  function segmentToBezier(th2, th3, cosTh, sinTh, rx, ry, cx1, cy1, mT, fromX, fromY) {\n    var costh2 = fabric.util.cos(th2),\n        sinth2 = fabric.util.sin(th2),\n        costh3 = fabric.util.cos(th3),\n        sinth3 = fabric.util.sin(th3),\n        toX = cosTh * rx * costh3 - sinTh * ry * sinth3 + cx1,\n        toY = sinTh * rx * costh3 + cosTh * ry * sinth3 + cy1,\n        cp1X = fromX + mT * (-cosTh * rx * sinth2 - sinTh * ry * costh2),\n        cp1Y = fromY + mT * (-sinTh * rx * sinth2 + cosTh * ry * costh2),\n        cp2X = toX + mT * (cosTh * rx * sinth3 + sinTh * ry * costh3),\n        cp2Y = toY + mT * (sinTh * rx * sinth3 - cosTh * ry * costh3);\n    return [cp1X, cp1Y, cp2X, cp2Y, toX, toY];\n  }\n  /*\n   * Private\n   */\n\n\n  function calcVectorAngle(ux, uy, vx, vy) {\n    var ta = Math.atan2(uy, ux),\n        tb = Math.atan2(vy, vx);\n\n    if (tb >= ta) {\n      return tb - ta;\n    } else {\n      return 2 * Math.PI - (ta - tb);\n    }\n  }\n  /**\n   * Draws arc\n   * @param {CanvasRenderingContext2D} ctx\n   * @param {Number} fx\n   * @param {Number} fy\n   * @param {Array} coords\n   */\n\n\n  fabric.util.drawArc = function (ctx, fx, fy, coords) {\n    var rx = coords[0],\n        ry = coords[1],\n        rot = coords[2],\n        large = coords[3],\n        sweep = coords[4],\n        tx = coords[5],\n        ty = coords[6],\n        segs = [[], [], [], []],\n        segsNorm = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segsNorm.length; i < len; i++) {\n      segs[i][0] = segsNorm[i][0] + fx;\n      segs[i][1] = segsNorm[i][1] + fy;\n      segs[i][2] = segsNorm[i][2] + fx;\n      segs[i][3] = segsNorm[i][3] + fy;\n      segs[i][4] = segsNorm[i][4] + fx;\n      segs[i][5] = segsNorm[i][5] + fy;\n      ctx.bezierCurveTo.apply(ctx, segs[i]);\n    }\n  };\n  /**\n   * Calculate bounding box of a elliptic-arc\n   * @param {Number} fx start point of arc\n   * @param {Number} fy\n   * @param {Number} rx horizontal radius\n   * @param {Number} ry vertical radius\n   * @param {Number} rot angle of horizontal axe\n   * @param {Number} large 1 or 0, whatever the arc is the big or the small on the 2 points\n   * @param {Number} sweep 1 or 0, 1 clockwise or counterclockwise direction\n   * @param {Number} tx end point of arc\n   * @param {Number} ty\n   */\n\n\n  fabric.util.getBoundsOfArc = function (fx, fy, rx, ry, rot, large, sweep, tx, ty) {\n    var fromX = 0,\n        fromY = 0,\n        bound,\n        bounds = [],\n        segs = arcToSegments(tx - fx, ty - fy, rx, ry, large, sweep, rot);\n\n    for (var i = 0, len = segs.length; i < len; i++) {\n      bound = getBoundsOfCurve(fromX, fromY, segs[i][0], segs[i][1], segs[i][2], segs[i][3], segs[i][4], segs[i][5]);\n      bounds.push({\n        x: bound[0].x + fx,\n        y: bound[0].y + fy\n      });\n      bounds.push({\n        x: bound[1].x + fx,\n        y: bound[1].y + fy\n      });\n      fromX = segs[i][4];\n      fromY = segs[i][5];\n    }\n\n    return bounds;\n  };\n  /**\n   * Calculate bounding box of a beziercurve\n   * @param {Number} x0 starting point\n   * @param {Number} y0\n   * @param {Number} x1 first control point\n   * @param {Number} y1\n   * @param {Number} x2 secondo control point\n   * @param {Number} y2\n   * @param {Number} x3 end of beizer\n   * @param {Number} y3\n   */\n  // taken from http://jsbin.com/ivomiq/56/edit  no credits available for that.\n\n\n  function getBoundsOfCurve(x0, y0, x1, y1, x2, y2, x3, y3) {\n    var argsString;\n\n    if (fabric.cachesBoundsOfCurve) {\n      argsString = _join.call(arguments);\n\n      if (fabric.boundsOfCurveCache[argsString]) {\n        return fabric.boundsOfCurveCache[argsString];\n      }\n    }\n\n    var sqrt = Math.sqrt,\n        min = Math.min,\n        max = Math.max,\n        abs = Math.abs,\n        tvalues = [],\n        bounds = [[], []],\n        a,\n        b,\n        c,\n        t,\n        t1,\n        t2,\n        b2ac,\n        sqrtb2ac;\n    b = 6 * x0 - 12 * x1 + 6 * x2;\n    a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n    c = 3 * x1 - 3 * x0;\n\n    for (var i = 0; i < 2; ++i) {\n      if (i > 0) {\n        b = 6 * y0 - 12 * y1 + 6 * y2;\n        a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n        c = 3 * y1 - 3 * y0;\n      }\n\n      if (abs(a) < 1e-12) {\n        if (abs(b) < 1e-12) {\n          continue;\n        }\n\n        t = -c / b;\n\n        if (0 < t && t < 1) {\n          tvalues.push(t);\n        }\n\n        continue;\n      }\n\n      b2ac = b * b - 4 * c * a;\n\n      if (b2ac < 0) {\n        continue;\n      }\n\n      sqrtb2ac = sqrt(b2ac);\n      t1 = (-b + sqrtb2ac) / (2 * a);\n\n      if (0 < t1 && t1 < 1) {\n        tvalues.push(t1);\n      }\n\n      t2 = (-b - sqrtb2ac) / (2 * a);\n\n      if (0 < t2 && t2 < 1) {\n        tvalues.push(t2);\n      }\n    }\n\n    var x,\n        y,\n        j = tvalues.length,\n        jlen = j,\n        mt;\n\n    while (j--) {\n      t = tvalues[j];\n      mt = 1 - t;\n      x = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n      bounds[0][j] = x;\n      y = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n      bounds[1][j] = y;\n    }\n\n    bounds[0][jlen] = x0;\n    bounds[1][jlen] = y0;\n    bounds[0][jlen + 1] = x3;\n    bounds[1][jlen + 1] = y3;\n    var result = [{\n      x: min.apply(null, bounds[0]),\n      y: min.apply(null, bounds[1])\n    }, {\n      x: max.apply(null, bounds[0]),\n      y: max.apply(null, bounds[1])\n    }];\n\n    if (fabric.cachesBoundsOfCurve) {\n      fabric.boundsOfCurveCache[argsString] = result;\n    }\n\n    return result;\n  }\n\n  fabric.util.getBoundsOfCurve = getBoundsOfCurve;\n})();\n\n(function () {\n  var slice = Array.prototype.slice;\n  /**\n   * Invokes method on all items in a given array\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} method Name of a method to invoke\n   * @return {Array}\n   */\n\n  function invoke(array, method) {\n    var args = slice.call(arguments, 2),\n        result = [];\n\n    for (var i = 0, len = array.length; i < len; i++) {\n      result[i] = args.length ? array[i][method].apply(array[i], args) : array[i][method].call(array[i]);\n    }\n\n    return result;\n  }\n  /**\n   * Finds maximum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n\n\n  function max(array, byProperty) {\n    return find(array, byProperty, function (value1, value2) {\n      return value1 >= value2;\n    });\n  }\n  /**\n   * Finds minimum value in array (not necessarily \"first\" one)\n   * @memberOf fabric.util.array\n   * @param {Array} array Array to iterate over\n   * @param {String} byProperty\n   * @return {*}\n   */\n\n\n  function min(array, byProperty) {\n    return find(array, byProperty, function (value1, value2) {\n      return value1 < value2;\n    });\n  }\n  /**\n   * @private\n   */\n\n\n  function fill(array, value) {\n    var k = array.length;\n\n    while (k--) {\n      array[k] = value;\n    }\n\n    return array;\n  }\n  /**\n   * @private\n   */\n\n\n  function find(array, byProperty, condition) {\n    if (!array || array.length === 0) {\n      return;\n    }\n\n    var i = array.length - 1,\n        result = byProperty ? array[i][byProperty] : array[i];\n\n    if (byProperty) {\n      while (i--) {\n        if (condition(array[i][byProperty], result)) {\n          result = array[i][byProperty];\n        }\n      }\n    } else {\n      while (i--) {\n        if (condition(array[i], result)) {\n          result = array[i];\n        }\n      }\n    }\n\n    return result;\n  }\n  /**\n   * @namespace fabric.util.array\n   */\n\n\n  fabric.util.array = {\n    fill: fill,\n    invoke: invoke,\n    min: min,\n    max: max\n  };\n})();\n\n(function () {\n  /**\n   * Copies all enumerable properties of one js object to another\n   * this does not and cannot compete with generic utils.\n   * Does not clone or extend fabric.Object subclasses.\n   * This is mostly for internal use and has extra handling for fabricJS objects\n   * it skips the canvas property in deep cloning.\n   * @memberOf fabric.util.object\n   * @param {Object} destination Where to copy to\n   * @param {Object} source Where to copy from\n   * @return {Object}\n   */\n  function extend(destination, source, deep) {\n    // JScript DontEnum bug is not taken care of\n    // the deep clone is for internal use, is not meant to avoid\n    // javascript traps or cloning html element or self referenced objects.\n    if (deep) {\n      if (!fabric.isLikelyNode && source instanceof Element) {\n        // avoid cloning deep images, canvases,\n        destination = source;\n      } else if (source instanceof Array) {\n        destination = [];\n\n        for (var i = 0, len = source.length; i < len; i++) {\n          destination[i] = extend({}, source[i], deep);\n        }\n      } else if (source && typeof source === 'object') {\n        for (var property in source) {\n          if (property === 'canvas') {\n            destination[property] = extend({}, source[property]);\n          } else if (source.hasOwnProperty(property)) {\n            destination[property] = extend({}, source[property], deep);\n          }\n        }\n      } else {\n        // this sounds odd for an extend but is ok for recursive use\n        destination = source;\n      }\n    } else {\n      for (var property in source) {\n        destination[property] = source[property];\n      }\n    }\n\n    return destination;\n  }\n  /**\n   * Creates an empty object and copies all enumerable properties of another object to it\n   * @memberOf fabric.util.object\n   * TODO: this function return an empty object if you try to clone null\n   * @param {Object} object Object to clone\n   * @return {Object}\n   */\n\n\n  function clone(object, deep) {\n    return extend({}, object, deep);\n  }\n  /** @namespace fabric.util.object */\n\n\n  fabric.util.object = {\n    extend: extend,\n    clone: clone\n  };\n  fabric.util.object.extend(fabric.util, fabric.Observable);\n})();\n\n(function () {\n  /**\n   * Camelizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to camelize\n   * @return {String} Camelized version of a string\n   */\n  function camelize(string) {\n    return string.replace(/-+(.)?/g, function (match, character) {\n      return character ? character.toUpperCase() : '';\n    });\n  }\n  /**\n   * Capitalizes a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to capitalize\n   * @param {Boolean} [firstLetterOnly] If true only first letter is capitalized\n   * and other letters stay untouched, if false first letter is capitalized\n   * and other letters are converted to lowercase.\n   * @return {String} Capitalized version of a string\n   */\n\n\n  function capitalize(string, firstLetterOnly) {\n    return string.charAt(0).toUpperCase() + (firstLetterOnly ? string.slice(1) : string.slice(1).toLowerCase());\n  }\n  /**\n   * Escapes XML in a string\n   * @memberOf fabric.util.string\n   * @param {String} string String to escape\n   * @return {String} Escaped version of a string\n   */\n\n\n  function escapeXml(string) {\n    return string.replace(/&/g, '&amp;').replace(/\"/g, '&quot;').replace(/'/g, '&apos;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n  }\n  /**\n   * Divide a string in the user perceived single units\n   * @memberOf fabric.util.string\n   * @param {String} textstring String to escape\n   * @return {Array} array containing the graphemes\n   */\n\n\n  function graphemeSplit(textstring) {\n    var i = 0,\n        chr,\n        graphemes = [];\n\n    for (i = 0, chr; i < textstring.length; i++) {\n      if ((chr = getWholeChar(textstring, i)) === false) {\n        continue;\n      }\n\n      graphemes.push(chr);\n    }\n\n    return graphemes;\n  } // taken from mdn in the charAt doc page.\n\n\n  function getWholeChar(str, i) {\n    var code = str.charCodeAt(i);\n\n    if (isNaN(code)) {\n      return ''; // Position not found\n    }\n\n    if (code < 0xD800 || code > 0xDFFF) {\n      return str.charAt(i);\n    } // High surrogate (could change last hex to 0xDB7F to treat high private\n    // surrogates as single characters)\n\n\n    if (0xD800 <= code && code <= 0xDBFF) {\n      if (str.length <= i + 1) {\n        throw 'High surrogate without following low surrogate';\n      }\n\n      var next = str.charCodeAt(i + 1);\n\n      if (0xDC00 > next || next > 0xDFFF) {\n        throw 'High surrogate without following low surrogate';\n      }\n\n      return str.charAt(i) + str.charAt(i + 1);\n    } // Low surrogate (0xDC00 <= code && code <= 0xDFFF)\n\n\n    if (i === 0) {\n      throw 'Low surrogate without preceding high surrogate';\n    }\n\n    var prev = str.charCodeAt(i - 1); // (could change last hex to 0xDB7F to treat high private\n    // surrogates as single characters)\n\n    if (0xD800 > prev || prev > 0xDBFF) {\n      throw 'Low surrogate without preceding high surrogate';\n    } // We can pass over low surrogates now as the second component\n    // in a pair which we have already processed\n\n\n    return false;\n  }\n  /**\n   * String utilities\n   * @namespace fabric.util.string\n   */\n\n\n  fabric.util.string = {\n    camelize: camelize,\n    capitalize: capitalize,\n    escapeXml: escapeXml,\n    graphemeSplit: graphemeSplit\n  };\n})();\n\n(function () {\n  var slice = Array.prototype.slice,\n      emptyFunction = function emptyFunction() {},\n      IS_DONTENUM_BUGGY = function () {\n    for (var p in {\n      toString: 1\n    }) {\n      if (p === 'toString') {\n        return false;\n      }\n    }\n\n    return true;\n  }(),\n\n  /** @ignore */\n  addMethods = function addMethods(klass, source, parent) {\n    for (var property in source) {\n      if (property in klass.prototype && typeof klass.prototype[property] === 'function' && (source[property] + '').indexOf('callSuper') > -1) {\n        klass.prototype[property] = function (property) {\n          return function () {\n            var superclass = this.constructor.superclass;\n            this.constructor.superclass = parent;\n            var returnValue = source[property].apply(this, arguments);\n            this.constructor.superclass = superclass;\n\n            if (property !== 'initialize') {\n              return returnValue;\n            }\n          };\n        }(property);\n      } else {\n        klass.prototype[property] = source[property];\n      }\n\n      if (IS_DONTENUM_BUGGY) {\n        if (source.toString !== Object.prototype.toString) {\n          klass.prototype.toString = source.toString;\n        }\n\n        if (source.valueOf !== Object.prototype.valueOf) {\n          klass.prototype.valueOf = source.valueOf;\n        }\n      }\n    }\n  };\n\n  function Subclass() {}\n\n  function callSuper(methodName) {\n    var parentMethod = null,\n        _this = this; // climb prototype chain to find method not equal to callee's method\n\n\n    while (_this.constructor.superclass) {\n      var superClassMethod = _this.constructor.superclass.prototype[methodName];\n\n      if (_this[methodName] !== superClassMethod) {\n        parentMethod = superClassMethod;\n        break;\n      } // eslint-disable-next-line\n\n\n      _this = _this.constructor.superclass.prototype;\n    }\n\n    if (!parentMethod) {\n      return console.log('tried to callSuper ' + methodName + ', method not found in prototype chain', this);\n    }\n\n    return arguments.length > 1 ? parentMethod.apply(this, slice.call(arguments, 1)) : parentMethod.call(this);\n  }\n  /**\n   * Helper for creation of \"classes\".\n   * @memberOf fabric.util\n   * @param {Function} [parent] optional \"Class\" to inherit from\n   * @param {Object} [properties] Properties shared by all instances of this class\n   *                  (be careful modifying objects defined here as this would affect all instances)\n   */\n\n\n  function createClass() {\n    var parent = null,\n        properties = slice.call(arguments, 0);\n\n    if (typeof properties[0] === 'function') {\n      parent = properties.shift();\n    }\n\n    function klass() {\n      this.initialize.apply(this, arguments);\n    }\n\n    klass.superclass = parent;\n    klass.subclasses = [];\n\n    if (parent) {\n      Subclass.prototype = parent.prototype;\n      klass.prototype = new Subclass();\n      parent.subclasses.push(klass);\n    }\n\n    for (var i = 0, length = properties.length; i < length; i++) {\n      addMethods(klass, properties[i], parent);\n    }\n\n    if (!klass.prototype.initialize) {\n      klass.prototype.initialize = emptyFunction;\n    }\n\n    klass.prototype.constructor = klass;\n    klass.prototype.callSuper = callSuper;\n    return klass;\n  }\n\n  fabric.util.createClass = createClass;\n})();\n\n(function () {\n  var unknown = 'unknown';\n  /* EVENT HANDLING */\n\n  function areHostMethods(object) {\n    var methodNames = Array.prototype.slice.call(arguments, 1),\n        t,\n        i,\n        len = methodNames.length;\n\n    for (i = 0; i < len; i++) {\n      t = typeof object[methodNames[i]];\n\n      if (!/^(?:function|object|unknown)$/.test(t)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n  /** @ignore */\n\n\n  var getElement,\n      setElement,\n      getUniqueId = function () {\n    var uid = 0;\n    return function (element) {\n      return element.__uniqueID || (element.__uniqueID = 'uniqueID__' + uid++);\n    };\n  }();\n\n  (function () {\n    var elements = {};\n    /** @ignore */\n\n    getElement = function getElement(uid) {\n      return elements[uid];\n    };\n    /** @ignore */\n\n\n    setElement = function setElement(uid, element) {\n      elements[uid] = element;\n    };\n  })();\n\n  function createListener(uid, handler) {\n    return {\n      handler: handler,\n      wrappedHandler: createWrappedHandler(uid, handler)\n    };\n  }\n\n  function createWrappedHandler(uid, handler) {\n    return function (e) {\n      handler.call(getElement(uid), e || fabric.window.event);\n    };\n  }\n\n  function createDispatcher(uid, eventName) {\n    return function (e) {\n      if (handlers[uid] && handlers[uid][eventName]) {\n        var handlersForEvent = handlers[uid][eventName];\n\n        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n          handlersForEvent[i].call(this, e || fabric.window.event);\n        }\n      }\n    };\n  }\n\n  var shouldUseAddListenerRemoveListener = areHostMethods(fabric.document.documentElement, 'addEventListener', 'removeEventListener') && areHostMethods(fabric.window, 'addEventListener', 'removeEventListener'),\n      shouldUseAttachEventDetachEvent = areHostMethods(fabric.document.documentElement, 'attachEvent', 'detachEvent') && areHostMethods(fabric.window, 'attachEvent', 'detachEvent'),\n      // IE branch\n  listeners = {},\n      // DOM L0 branch\n  handlers = {},\n      addListener,\n      removeListener;\n\n  if (shouldUseAddListenerRemoveListener) {\n    /** @ignore */\n    addListener = function addListener(element, eventName, handler, options) {\n      // since ie10 or ie9 can use addEventListener but they do not support options, i need to check\n      element && element.addEventListener(eventName, handler, shouldUseAttachEventDetachEvent ? false : options);\n    };\n    /** @ignore */\n\n\n    removeListener = function removeListener(element, eventName, handler, options) {\n      element && element.removeEventListener(eventName, handler, shouldUseAttachEventDetachEvent ? false : options);\n    };\n  } else if (shouldUseAttachEventDetachEvent) {\n    /** @ignore */\n    addListener = function addListener(element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n\n      var uid = getUniqueId(element);\n      setElement(uid, element);\n\n      if (!listeners[uid]) {\n        listeners[uid] = {};\n      }\n\n      if (!listeners[uid][eventName]) {\n        listeners[uid][eventName] = [];\n      }\n\n      var listener = createListener(uid, handler);\n      listeners[uid][eventName].push(listener);\n      element.attachEvent('on' + eventName, listener.wrappedHandler);\n    };\n    /** @ignore */\n\n\n    removeListener = function removeListener(element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n\n      var uid = getUniqueId(element),\n          listener;\n\n      if (listeners[uid] && listeners[uid][eventName]) {\n        for (var i = 0, len = listeners[uid][eventName].length; i < len; i++) {\n          listener = listeners[uid][eventName][i];\n\n          if (listener && listener.handler === handler) {\n            element.detachEvent('on' + eventName, listener.wrappedHandler);\n            listeners[uid][eventName][i] = null;\n          }\n        }\n      }\n    };\n  } else {\n    /** @ignore */\n    addListener = function addListener(element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n\n      var uid = getUniqueId(element);\n\n      if (!handlers[uid]) {\n        handlers[uid] = {};\n      }\n\n      if (!handlers[uid][eventName]) {\n        handlers[uid][eventName] = [];\n        var existingHandler = element['on' + eventName];\n\n        if (existingHandler) {\n          handlers[uid][eventName].push(existingHandler);\n        }\n\n        element['on' + eventName] = createDispatcher(uid, eventName);\n      }\n\n      handlers[uid][eventName].push(handler);\n    };\n    /** @ignore */\n\n\n    removeListener = function removeListener(element, eventName, handler) {\n      if (!element) {\n        return;\n      }\n\n      var uid = getUniqueId(element);\n\n      if (handlers[uid] && handlers[uid][eventName]) {\n        var handlersForEvent = handlers[uid][eventName];\n\n        for (var i = 0, len = handlersForEvent.length; i < len; i++) {\n          if (handlersForEvent[i] === handler) {\n            handlersForEvent.splice(i, 1);\n          }\n        }\n      }\n    };\n  }\n  /**\n   * Adds an event listener to an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n\n\n  fabric.util.addListener = addListener;\n  /**\n   * Removes an event listener from an element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {String} eventName\n   * @param {Function} handler\n   */\n\n  fabric.util.removeListener = removeListener;\n  /**\n   * Cross-browser wrapper for getting event's coordinates\n   * @memberOf fabric.util\n   * @param {Event} event Event object\n   */\n\n  function getPointer(event) {\n    event || (event = fabric.window.event);\n    var element = event.target || (typeof event.srcElement !== unknown ? event.srcElement : null),\n        scroll = fabric.util.getScrollLeftTop(element);\n    return {\n      x: pointerX(event) + scroll.left,\n      y: pointerY(event) + scroll.top\n    };\n  }\n\n  var pointerX = function pointerX(event) {\n    return event.clientX;\n  },\n      pointerY = function pointerY(event) {\n    return event.clientY;\n  };\n\n  function _getPointer(event, pageProp, clientProp) {\n    var touchProp = event.type === 'touchend' ? 'changedTouches' : 'touches';\n    var pointer,\n        eventTouchProp = event[touchProp];\n\n    if (eventTouchProp && eventTouchProp[0]) {\n      pointer = eventTouchProp[0][clientProp];\n    }\n\n    if (typeof pointer === 'undefined') {\n      pointer = event[clientProp];\n    }\n\n    return pointer;\n  }\n\n  if (fabric.isTouchSupported) {\n    pointerX = function pointerX(event) {\n      return _getPointer(event, 'pageX', 'clientX');\n    };\n\n    pointerY = function pointerY(event) {\n      return _getPointer(event, 'pageY', 'clientY');\n    };\n  }\n\n  fabric.util.getPointer = getPointer;\n})();\n\n(function () {\n  /**\n   * Cross-browser wrapper for setting element's style\n   * @memberOf fabric.util\n   * @param {HTMLElement} element\n   * @param {Object} styles\n   * @return {HTMLElement} Element that was passed as a first argument\n   */\n  function setStyle(element, styles) {\n    var elementStyle = element.style;\n\n    if (!elementStyle) {\n      return element;\n    }\n\n    if (typeof styles === 'string') {\n      element.style.cssText += ';' + styles;\n      return styles.indexOf('opacity') > -1 ? setOpacity(element, styles.match(/opacity:\\s*(\\d?\\.?\\d*)/)[1]) : element;\n    }\n\n    for (var property in styles) {\n      if (property === 'opacity') {\n        setOpacity(element, styles[property]);\n      } else {\n        var normalizedProperty = property === 'float' || property === 'cssFloat' ? typeof elementStyle.styleFloat === 'undefined' ? 'cssFloat' : 'styleFloat' : property;\n        elementStyle[normalizedProperty] = styles[property];\n      }\n    }\n\n    return element;\n  }\n\n  var parseEl = fabric.document.createElement('div'),\n      supportsOpacity = typeof parseEl.style.opacity === 'string',\n      supportsFilters = typeof parseEl.style.filter === 'string',\n      reOpacity = /alpha\\s*\\(\\s*opacity\\s*=\\s*([^\\)]+)\\)/,\n\n  /** @ignore */\n  setOpacity = function setOpacity(element) {\n    return element;\n  };\n\n  if (supportsOpacity) {\n    /** @ignore */\n    setOpacity = function setOpacity(element, value) {\n      element.style.opacity = value;\n      return element;\n    };\n  } else if (supportsFilters) {\n    /** @ignore */\n    setOpacity = function setOpacity(element, value) {\n      var es = element.style;\n\n      if (element.currentStyle && !element.currentStyle.hasLayout) {\n        es.zoom = 1;\n      }\n\n      if (reOpacity.test(es.filter)) {\n        value = value >= 0.9999 ? '' : 'alpha(opacity=' + value * 100 + ')';\n        es.filter = es.filter.replace(reOpacity, value);\n      } else {\n        es.filter += ' alpha(opacity=' + value * 100 + ')';\n      }\n\n      return element;\n    };\n  }\n\n  fabric.util.setStyle = setStyle;\n})();\n\n(function () {\n  var _slice = Array.prototype.slice;\n  /**\n   * Takes id and returns an element with that id (if one exists in a document)\n   * @memberOf fabric.util\n   * @param {String|HTMLElement} id\n   * @return {HTMLElement|null}\n   */\n\n  function getById(id) {\n    return typeof id === 'string' ? fabric.document.getElementById(id) : id;\n  }\n\n  var sliceCanConvertNodelists,\n\n  /**\n   * Converts an array-like object (e.g. arguments or NodeList) to an array\n   * @memberOf fabric.util\n   * @param {Object} arrayLike\n   * @return {Array}\n   */\n  toArray = function toArray(arrayLike) {\n    return _slice.call(arrayLike, 0);\n  };\n\n  try {\n    sliceCanConvertNodelists = toArray(fabric.document.childNodes) instanceof Array;\n  } catch (err) {}\n\n  if (!sliceCanConvertNodelists) {\n    toArray = function toArray(arrayLike) {\n      var arr = new Array(arrayLike.length),\n          i = arrayLike.length;\n\n      while (i--) {\n        arr[i] = arrayLike[i];\n      }\n\n      return arr;\n    };\n  }\n  /**\n   * Creates specified element with specified attributes\n   * @memberOf fabric.util\n   * @param {String} tagName Type of an element to create\n   * @param {Object} [attributes] Attributes to set on an element\n   * @return {HTMLElement} Newly created element\n   */\n\n\n  function makeElement(tagName, attributes) {\n    var el = fabric.document.createElement(tagName);\n\n    for (var prop in attributes) {\n      if (prop === 'class') {\n        el.className = attributes[prop];\n      } else if (prop === 'for') {\n        el.htmlFor = attributes[prop];\n      } else {\n        el.setAttribute(prop, attributes[prop]);\n      }\n    }\n\n    return el;\n  }\n  /**\n   * Adds class to an element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to add class to\n   * @param {String} className Class to add to an element\n   */\n\n\n  function addClass(element, className) {\n    if (element && (' ' + element.className + ' ').indexOf(' ' + className + ' ') === -1) {\n      element.className += (element.className ? ' ' : '') + className;\n    }\n  }\n  /**\n   * Wraps element with another element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to wrap\n   * @param {HTMLElement|String} wrapper Element to wrap with\n   * @param {Object} [attributes] Attributes to set on a wrapper\n   * @return {HTMLElement} wrapper\n   */\n\n\n  function wrapElement(element, wrapper, attributes) {\n    if (typeof wrapper === 'string') {\n      wrapper = makeElement(wrapper, attributes);\n    }\n\n    if (element.parentNode) {\n      element.parentNode.replaceChild(wrapper, element);\n    }\n\n    wrapper.appendChild(element);\n    return wrapper;\n  }\n  /**\n   * Returns element scroll offsets\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to operate on\n   * @return {Object} Object with left/top values\n   */\n\n\n  function getScrollLeftTop(element) {\n    var left = 0,\n        top = 0,\n        docElement = fabric.document.documentElement,\n        body = fabric.document.body || {\n      scrollLeft: 0,\n      scrollTop: 0\n    }; // While loop checks (and then sets element to) .parentNode OR .host\n    //  to account for ShadowDOM. We still want to traverse up out of ShadowDOM,\n    //  but the .parentNode of a root ShadowDOM node will always be null, instead\n    //  it should be accessed through .host. See http://stackoverflow.com/a/24765528/4383938\n\n    while (element && (element.parentNode || element.host)) {\n      // Set element to element parent, or 'host' in case of ShadowDOM\n      element = element.parentNode || element.host;\n\n      if (element === fabric.document) {\n        left = body.scrollLeft || docElement.scrollLeft || 0;\n        top = body.scrollTop || docElement.scrollTop || 0;\n      } else {\n        left += element.scrollLeft || 0;\n        top += element.scrollTop || 0;\n      }\n\n      if (element.nodeType === 1 && element.style.position === 'fixed') {\n        break;\n      }\n    }\n\n    return {\n      left: left,\n      top: top\n    };\n  }\n  /**\n   * Returns offset for a given element\n   * @function\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get offset for\n   * @return {Object} Object with \"left\" and \"top\" properties\n   */\n\n\n  function getElementOffset(element) {\n    var docElem,\n        doc = element && element.ownerDocument,\n        box = {\n      left: 0,\n      top: 0\n    },\n        offset = {\n      left: 0,\n      top: 0\n    },\n        scrollLeftTop,\n        offsetAttributes = {\n      borderLeftWidth: 'left',\n      borderTopWidth: 'top',\n      paddingLeft: 'left',\n      paddingTop: 'top'\n    };\n\n    if (!doc) {\n      return offset;\n    }\n\n    for (var attr in offsetAttributes) {\n      offset[offsetAttributes[attr]] += parseInt(getElementStyle(element, attr), 10) || 0;\n    }\n\n    docElem = doc.documentElement;\n\n    if (typeof element.getBoundingClientRect !== 'undefined') {\n      box = element.getBoundingClientRect();\n    }\n\n    scrollLeftTop = getScrollLeftTop(element);\n    return {\n      left: box.left + scrollLeftTop.left - (docElem.clientLeft || 0) + offset.left,\n      top: box.top + scrollLeftTop.top - (docElem.clientTop || 0) + offset.top\n    };\n  }\n  /**\n   * Returns style attribute value of a given element\n   * @memberOf fabric.util\n   * @param {HTMLElement} element Element to get style attribute for\n   * @param {String} attr Style attribute to get for element\n   * @return {String} Style attribute value of the given element.\n   */\n\n\n  var getElementStyle;\n\n  if (fabric.document.defaultView && fabric.document.defaultView.getComputedStyle) {\n    getElementStyle = function getElementStyle(element, attr) {\n      var style = fabric.document.defaultView.getComputedStyle(element, null);\n      return style ? style[attr] : undefined;\n    };\n  } else {\n    getElementStyle = function getElementStyle(element, attr) {\n      var value = element.style[attr];\n\n      if (!value && element.currentStyle) {\n        value = element.currentStyle[attr];\n      }\n\n      return value;\n    };\n  }\n\n  (function () {\n    var style = fabric.document.documentElement.style,\n        selectProp = 'userSelect' in style ? 'userSelect' : 'MozUserSelect' in style ? 'MozUserSelect' : 'WebkitUserSelect' in style ? 'WebkitUserSelect' : 'KhtmlUserSelect' in style ? 'KhtmlUserSelect' : '';\n    /**\n     * Makes element unselectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make unselectable\n     * @return {HTMLElement} Element that was passed in\n     */\n\n    function makeElementUnselectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = fabric.util.falseFunction;\n      }\n\n      if (selectProp) {\n        element.style[selectProp] = 'none';\n      } else if (typeof element.unselectable === 'string') {\n        element.unselectable = 'on';\n      }\n\n      return element;\n    }\n    /**\n     * Makes element selectable\n     * @memberOf fabric.util\n     * @param {HTMLElement} element Element to make selectable\n     * @return {HTMLElement} Element that was passed in\n     */\n\n\n    function makeElementSelectable(element) {\n      if (typeof element.onselectstart !== 'undefined') {\n        element.onselectstart = null;\n      }\n\n      if (selectProp) {\n        element.style[selectProp] = '';\n      } else if (typeof element.unselectable === 'string') {\n        element.unselectable = '';\n      }\n\n      return element;\n    }\n\n    fabric.util.makeElementUnselectable = makeElementUnselectable;\n    fabric.util.makeElementSelectable = makeElementSelectable;\n  })();\n\n  (function () {\n    /**\n     * Inserts a script element with a given url into a document; invokes callback, when that script is finished loading\n     * @memberOf fabric.util\n     * @param {String} url URL of a script to load\n     * @param {Function} callback Callback to execute when script is finished loading\n     */\n    function getScript(url, callback) {\n      var headEl = fabric.document.getElementsByTagName('head')[0],\n          scriptEl = fabric.document.createElement('script'),\n          loading = true;\n      /** @ignore */\n\n      scriptEl.onload =\n      /** @ignore */\n      scriptEl.onreadystatechange = function (e) {\n        if (loading) {\n          if (typeof this.readyState === 'string' && this.readyState !== 'loaded' && this.readyState !== 'complete') {\n            return;\n          }\n\n          loading = false;\n          callback(e || fabric.window.event);\n          scriptEl = scriptEl.onload = scriptEl.onreadystatechange = null;\n        }\n      };\n\n      scriptEl.src = url;\n      headEl.appendChild(scriptEl); // causes issue in Opera\n      // headEl.removeChild(scriptEl);\n    }\n\n    fabric.util.getScript = getScript;\n  })();\n\n  function getNodeCanvas(element) {\n    var impl = fabric.jsdomImplForWrapper(element);\n    return impl._canvas || impl._image;\n  }\n\n  ;\n\n  function cleanUpJsdomNode(element) {\n    if (!fabric.isLikelyNode) {\n      return;\n    }\n\n    var impl = fabric.jsdomImplForWrapper(element);\n\n    if (impl) {\n      impl._image = null;\n      impl._canvas = null; // unsure if necessary\n\n      impl._currentSrc = null;\n      impl._attributes = null;\n      impl._classList = null;\n    }\n  }\n\n  fabric.util.getById = getById;\n  fabric.util.toArray = toArray;\n  fabric.util.makeElement = makeElement;\n  fabric.util.addClass = addClass;\n  fabric.util.wrapElement = wrapElement;\n  fabric.util.getScrollLeftTop = getScrollLeftTop;\n  fabric.util.getElementOffset = getElementOffset;\n  fabric.util.getElementStyle = getElementStyle;\n  fabric.util.getNodeCanvas = getNodeCanvas;\n  fabric.util.cleanUpJsdomNode = cleanUpJsdomNode;\n})();\n\n(function () {\n  function addParamToUrl(url, param) {\n    return url + (/\\?/.test(url) ? '&' : '?') + param;\n  }\n\n  function emptyFn() {}\n  /**\n   * Cross-browser abstraction for sending XMLHttpRequest\n   * @memberOf fabric.util\n   * @param {String} url URL to send XMLHttpRequest to\n   * @param {Object} [options] Options object\n   * @param {String} [options.method=\"GET\"]\n   * @param {String} [options.parameters] parameters to append to url in GET or in body\n   * @param {String} [options.body] body to send with POST or PUT request\n   * @param {Function} options.onComplete Callback to invoke when request is completed\n   * @return {XMLHttpRequest} request\n   */\n\n\n  function request(url, options) {\n    options || (options = {});\n\n    var method = options.method ? options.method.toUpperCase() : 'GET',\n        onComplete = options.onComplete || function () {},\n        xhr = new fabric.window.XMLHttpRequest(),\n        body = options.body || options.parameters;\n    /** @ignore */\n\n\n    xhr.onreadystatechange = function () {\n      if (xhr.readyState === 4) {\n        onComplete(xhr);\n        xhr.onreadystatechange = emptyFn;\n      }\n    };\n\n    if (method === 'GET') {\n      body = null;\n\n      if (typeof options.parameters === 'string') {\n        url = addParamToUrl(url, options.parameters);\n      }\n    }\n\n    xhr.open(method, url, true);\n\n    if (method === 'POST' || method === 'PUT') {\n      xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');\n    }\n\n    xhr.send(body);\n    return xhr;\n  }\n\n  fabric.util.request = request;\n})();\n/**\n * Wrapper around `console.log` (when available)\n * @param {*} [values] Values to log\n */\n\n\nfabric.log = function () {};\n/**\n * Wrapper around `console.warn` (when available)\n * @param {*} [values] Values to log as a warning\n */\n\n\nfabric.warn = function () {};\n/* eslint-disable */\n\n\nif (typeof console !== 'undefined') {\n  ['log', 'warn'].forEach(function (methodName) {\n    if (typeof console[methodName] !== 'undefined' && typeof console[methodName].apply === 'function') {\n      fabric[methodName] = function () {\n        return console[methodName].apply(console, arguments);\n      };\n    }\n  });\n}\n/* eslint-enable */\n\n\n(function () {\n  function noop() {\n    return false;\n  }\n  /**\n   * Changes value from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Number} [options.startValue=0] Starting value\n   * @param {Number} [options.endValue=100] Ending value\n   * @param {Number} [options.byValue=100] Value to modify the property by\n   * @param {Function} [options.easing] Easing function\n   * @param {Number} [options.duration=500] Duration of change (in ms)\n   * @param {Function} [options.abort] Additional function with logic. If returns true, onComplete is called.\n   */\n\n\n  function animate(options) {\n    requestAnimFrame(function (timestamp) {\n      options || (options = {});\n\n      var start = timestamp || +new Date(),\n          duration = options.duration || 500,\n          finish = start + duration,\n          time,\n          onChange = options.onChange || noop,\n          abort = options.abort || noop,\n          onComplete = options.onComplete || noop,\n          easing = options.easing || function (t, b, c, d) {\n        return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n      },\n          startValue = 'startValue' in options ? options.startValue : 0,\n          endValue = 'endValue' in options ? options.endValue : 100,\n          byValue = options.byValue || endValue - startValue;\n\n      options.onStart && options.onStart();\n\n      (function tick(ticktime) {\n        // TODO: move abort call after calculation\n        // and pass (current,valuePerc, timePerc) as arguments\n        if (abort()) {\n          onComplete(endValue, 1, 1);\n          return;\n        }\n\n        time = ticktime || +new Date();\n        var currentTime = time > finish ? duration : time - start,\n            timePerc = currentTime / duration,\n            current = easing(currentTime, startValue, byValue, duration),\n            valuePerc = Math.abs((current - startValue) / byValue);\n        onChange(current, valuePerc, timePerc);\n\n        if (time > finish) {\n          options.onComplete && options.onComplete();\n          return;\n        }\n\n        requestAnimFrame(tick);\n      })(start);\n    });\n  }\n\n  var _requestAnimFrame = fabric.window.requestAnimationFrame || fabric.window.webkitRequestAnimationFrame || fabric.window.mozRequestAnimationFrame || fabric.window.oRequestAnimationFrame || fabric.window.msRequestAnimationFrame || function (callback) {\n    return fabric.window.setTimeout(callback, 1000 / 60);\n  };\n\n  var _cancelAnimFrame = fabric.window.cancelAnimationFrame || fabric.window.clearTimeout;\n  /**\n   * requestAnimationFrame polyfill based on http://paulirish.com/2011/requestanimationframe-for-smart-animating/\n   * In order to get a precise start time, `requestAnimFrame` should be called as an entry into the method\n   * @memberOf fabric.util\n   * @param {Function} callback Callback to invoke\n   * @param {DOMElement} element optional Element to associate with animation\n   */\n\n\n  function requestAnimFrame() {\n    return _requestAnimFrame.apply(fabric.window, arguments);\n  }\n\n  function cancelAnimFrame() {\n    return _cancelAnimFrame.apply(fabric.window, arguments);\n  }\n\n  fabric.util.animate = animate;\n  fabric.util.requestAnimFrame = requestAnimFrame;\n  fabric.util.cancelAnimFrame = cancelAnimFrame;\n})();\n\n(function () {\n  // Calculate an in-between color. Returns a \"rgba()\" string.\n  // Credit: Edwin Martin <edwin@bitstorm.org>\n  //         http://www.bitstorm.org/jquery/color-animation/jquery.animate-colors.js\n  function calculateColor(begin, end, pos) {\n    var color = 'rgba(' + parseInt(begin[0] + pos * (end[0] - begin[0]), 10) + ',' + parseInt(begin[1] + pos * (end[1] - begin[1]), 10) + ',' + parseInt(begin[2] + pos * (end[2] - begin[2]), 10);\n    color += ',' + (begin && end ? parseFloat(begin[3] + pos * (end[3] - begin[3])) : 1);\n    color += ')';\n    return color;\n  }\n  /**\n   * Changes the color from one to another within certain period of time, invoking callbacks as value is being changed.\n   * @memberOf fabric.util\n   * @param {String} fromColor The starting color in hex or rgb(a) format.\n   * @param {String} toColor The starting color in hex or rgb(a) format.\n   * @param {Number} [duration] Duration of change (in ms).\n   * @param {Object} [options] Animation options\n   * @param {Function} [options.onChange] Callback; invoked on every value change\n   * @param {Function} [options.onComplete] Callback; invoked when value change is completed\n   * @param {Function} [options.colorEasing] Easing function. Note that this function only take two arguments (currentTime, duration). Thus the regular animation easing functions cannot be used.\n   * @param {Function} [options.abort] Additional function with logic. If returns true, onComplete is called.\n   */\n\n\n  function animateColor(fromColor, toColor, duration, options) {\n    var startColor = new fabric.Color(fromColor).getSource(),\n        endColor = new fabric.Color(toColor).getSource();\n    options = options || {};\n    fabric.util.animate(fabric.util.object.extend(options, {\n      duration: duration || 500,\n      startValue: startColor,\n      endValue: endColor,\n      byValue: endColor,\n      easing: function easing(currentTime, startValue, byValue, duration) {\n        var posValue = options.colorEasing ? options.colorEasing(currentTime, duration) : 1 - Math.cos(currentTime / duration * (Math.PI / 2));\n        return calculateColor(startValue, byValue, posValue);\n      }\n    }));\n  }\n\n  fabric.util.animateColor = animateColor;\n})();\n\n(function () {\n  function normalize(a, c, p, s) {\n    if (a < Math.abs(c)) {\n      a = c;\n      s = p / 4;\n    } else {\n      //handle the 0/0 case:\n      if (c === 0 && a === 0) {\n        s = p / (2 * Math.PI) * Math.asin(1);\n      } else {\n        s = p / (2 * Math.PI) * Math.asin(c / a);\n      }\n    }\n\n    return {\n      a: a,\n      c: c,\n      p: p,\n      s: s\n    };\n  }\n\n  function elastic(opts, t, d) {\n    return opts.a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p);\n  }\n  /**\n   * Cubic easing out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeOutCubic(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t + 1) + b;\n  }\n  /**\n   * Cubic easing in and out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInOutCubic(t, b, c, d) {\n    t /= d / 2;\n\n    if (t < 1) {\n      return c / 2 * t * t * t + b;\n    }\n\n    return c / 2 * ((t -= 2) * t * t + 2) + b;\n  }\n  /**\n   * Quartic easing in\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInQuart(t, b, c, d) {\n    return c * (t /= d) * t * t * t + b;\n  }\n  /**\n   * Quartic easing out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeOutQuart(t, b, c, d) {\n    return -c * ((t = t / d - 1) * t * t * t - 1) + b;\n  }\n  /**\n   * Quartic easing in and out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInOutQuart(t, b, c, d) {\n    t /= d / 2;\n\n    if (t < 1) {\n      return c / 2 * t * t * t * t + b;\n    }\n\n    return -c / 2 * ((t -= 2) * t * t * t - 2) + b;\n  }\n  /**\n   * Quintic easing in\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInQuint(t, b, c, d) {\n    return c * (t /= d) * t * t * t * t + b;\n  }\n  /**\n   * Quintic easing out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeOutQuint(t, b, c, d) {\n    return c * ((t = t / d - 1) * t * t * t * t + 1) + b;\n  }\n  /**\n   * Quintic easing in and out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInOutQuint(t, b, c, d) {\n    t /= d / 2;\n\n    if (t < 1) {\n      return c / 2 * t * t * t * t * t + b;\n    }\n\n    return c / 2 * ((t -= 2) * t * t * t * t + 2) + b;\n  }\n  /**\n   * Sinusoidal easing in\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInSine(t, b, c, d) {\n    return -c * Math.cos(t / d * (Math.PI / 2)) + c + b;\n  }\n  /**\n   * Sinusoidal easing out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeOutSine(t, b, c, d) {\n    return c * Math.sin(t / d * (Math.PI / 2)) + b;\n  }\n  /**\n   * Sinusoidal easing in and out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInOutSine(t, b, c, d) {\n    return -c / 2 * (Math.cos(Math.PI * t / d) - 1) + b;\n  }\n  /**\n   * Exponential easing in\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInExpo(t, b, c, d) {\n    return t === 0 ? b : c * Math.pow(2, 10 * (t / d - 1)) + b;\n  }\n  /**\n   * Exponential easing out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeOutExpo(t, b, c, d) {\n    return t === d ? b + c : c * (-Math.pow(2, -10 * t / d) + 1) + b;\n  }\n  /**\n   * Exponential easing in and out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInOutExpo(t, b, c, d) {\n    if (t === 0) {\n      return b;\n    }\n\n    if (t === d) {\n      return b + c;\n    }\n\n    t /= d / 2;\n\n    if (t < 1) {\n      return c / 2 * Math.pow(2, 10 * (t - 1)) + b;\n    }\n\n    return c / 2 * (-Math.pow(2, -10 * --t) + 2) + b;\n  }\n  /**\n   * Circular easing in\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInCirc(t, b, c, d) {\n    return -c * (Math.sqrt(1 - (t /= d) * t) - 1) + b;\n  }\n  /**\n   * Circular easing out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeOutCirc(t, b, c, d) {\n    return c * Math.sqrt(1 - (t = t / d - 1) * t) + b;\n  }\n  /**\n   * Circular easing in and out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInOutCirc(t, b, c, d) {\n    t /= d / 2;\n\n    if (t < 1) {\n      return -c / 2 * (Math.sqrt(1 - t * t) - 1) + b;\n    }\n\n    return c / 2 * (Math.sqrt(1 - (t -= 2) * t) + 1) + b;\n  }\n  /**\n   * Elastic easing in\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInElastic(t, b, c, d) {\n    var s = 1.70158,\n        p = 0,\n        a = c;\n\n    if (t === 0) {\n      return b;\n    }\n\n    t /= d;\n\n    if (t === 1) {\n      return b + c;\n    }\n\n    if (!p) {\n      p = d * 0.3;\n    }\n\n    var opts = normalize(a, c, p, s);\n    return -elastic(opts, t, d) + b;\n  }\n  /**\n   * Elastic easing out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeOutElastic(t, b, c, d) {\n    var s = 1.70158,\n        p = 0,\n        a = c;\n\n    if (t === 0) {\n      return b;\n    }\n\n    t /= d;\n\n    if (t === 1) {\n      return b + c;\n    }\n\n    if (!p) {\n      p = d * 0.3;\n    }\n\n    var opts = normalize(a, c, p, s);\n    return opts.a * Math.pow(2, -10 * t) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p) + opts.c + b;\n  }\n  /**\n   * Elastic easing in and out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInOutElastic(t, b, c, d) {\n    var s = 1.70158,\n        p = 0,\n        a = c;\n\n    if (t === 0) {\n      return b;\n    }\n\n    t /= d / 2;\n\n    if (t === 2) {\n      return b + c;\n    }\n\n    if (!p) {\n      p = d * (0.3 * 1.5);\n    }\n\n    var opts = normalize(a, c, p, s);\n\n    if (t < 1) {\n      return -0.5 * elastic(opts, t, d) + b;\n    }\n\n    return opts.a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - opts.s) * (2 * Math.PI) / opts.p) * 0.5 + opts.c + b;\n  }\n  /**\n   * Backwards easing in\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n\n    return c * (t /= d) * t * ((s + 1) * t - s) + b;\n  }\n  /**\n   * Backwards easing out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n\n    return c * ((t = t / d - 1) * t * ((s + 1) * t + s) + 1) + b;\n  }\n  /**\n   * Backwards easing in and out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInOutBack(t, b, c, d, s) {\n    if (s === undefined) {\n      s = 1.70158;\n    }\n\n    t /= d / 2;\n\n    if (t < 1) {\n      return c / 2 * (t * t * (((s *= 1.525) + 1) * t - s)) + b;\n    }\n\n    return c / 2 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2) + b;\n  }\n  /**\n   * Bouncing easing in\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInBounce(t, b, c, d) {\n    return c - easeOutBounce(d - t, 0, c, d) + b;\n  }\n  /**\n   * Bouncing easing out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeOutBounce(t, b, c, d) {\n    if ((t /= d) < 1 / 2.75) {\n      return c * (7.5625 * t * t) + b;\n    } else if (t < 2 / 2.75) {\n      return c * (7.5625 * (t -= 1.5 / 2.75) * t + 0.75) + b;\n    } else if (t < 2.5 / 2.75) {\n      return c * (7.5625 * (t -= 2.25 / 2.75) * t + 0.9375) + b;\n    } else {\n      return c * (7.5625 * (t -= 2.625 / 2.75) * t + 0.984375) + b;\n    }\n  }\n  /**\n   * Bouncing easing in and out\n   * @memberOf fabric.util.ease\n   */\n\n\n  function easeInOutBounce(t, b, c, d) {\n    if (t < d / 2) {\n      return easeInBounce(t * 2, 0, c, d) * 0.5 + b;\n    }\n\n    return easeOutBounce(t * 2 - d, 0, c, d) * 0.5 + c * 0.5 + b;\n  }\n  /**\n   * Easing functions\n   * See <a href=\"http://gizma.com/easing/\">Easing Equations by Robert Penner</a>\n   * @namespace fabric.util.ease\n   */\n\n\n  fabric.util.ease = {\n    /**\n     * Quadratic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInQuad: function easeInQuad(t, b, c, d) {\n      return c * (t /= d) * t + b;\n    },\n\n    /**\n     * Quadratic easing out\n     * @memberOf fabric.util.ease\n     */\n    easeOutQuad: function easeOutQuad(t, b, c, d) {\n      return -c * (t /= d) * (t - 2) + b;\n    },\n\n    /**\n     * Quadratic easing in and out\n     * @memberOf fabric.util.ease\n     */\n    easeInOutQuad: function easeInOutQuad(t, b, c, d) {\n      t /= d / 2;\n\n      if (t < 1) {\n        return c / 2 * t * t + b;\n      }\n\n      return -c / 2 * (--t * (t - 2) - 1) + b;\n    },\n\n    /**\n     * Cubic easing in\n     * @memberOf fabric.util.ease\n     */\n    easeInCubic: function easeInCubic(t, b, c, d) {\n      return c * (t /= d) * t * t + b;\n    },\n    easeOutCubic: easeOutCubic,\n    easeInOutCubic: easeInOutCubic,\n    easeInQuart: easeInQuart,\n    easeOutQuart: easeOutQuart,\n    easeInOutQuart: easeInOutQuart,\n    easeInQuint: easeInQuint,\n    easeOutQuint: easeOutQuint,\n    easeInOutQuint: easeInOutQuint,\n    easeInSine: easeInSine,\n    easeOutSine: easeOutSine,\n    easeInOutSine: easeInOutSine,\n    easeInExpo: easeInExpo,\n    easeOutExpo: easeOutExpo,\n    easeInOutExpo: easeInOutExpo,\n    easeInCirc: easeInCirc,\n    easeOutCirc: easeOutCirc,\n    easeInOutCirc: easeInOutCirc,\n    easeInElastic: easeInElastic,\n    easeOutElastic: easeOutElastic,\n    easeInOutElastic: easeInOutElastic,\n    easeInBack: easeInBack,\n    easeOutBack: easeOutBack,\n    easeInOutBack: easeInOutBack,\n    easeInBounce: easeInBounce,\n    easeOutBounce: easeOutBounce,\n    easeInOutBounce: easeInOutBounce\n  };\n})();\n\n(function (global) {\n  'use strict';\n  /**\n   * @name fabric\n   * @namespace\n   */\n\n  var fabric = global.fabric || (global.fabric = {}),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      parseUnit = fabric.util.parseUnit,\n      multiplyTransformMatrices = fabric.util.multiplyTransformMatrices,\n      svgValidTagNames = ['path', 'circle', 'polygon', 'polyline', 'ellipse', 'rect', 'line', 'image', 'text'],\n      svgViewBoxElements = ['symbol', 'image', 'marker', 'pattern', 'view', 'svg'],\n      svgInvalidAncestors = ['pattern', 'defs', 'symbol', 'metadata', 'clipPath', 'mask', 'desc'],\n      svgValidParents = ['symbol', 'g', 'a', 'svg', 'clipPath', 'defs'],\n      attributesMap = {\n    cx: 'left',\n    x: 'left',\n    r: 'radius',\n    cy: 'top',\n    y: 'top',\n    display: 'visible',\n    visibility: 'visible',\n    transform: 'transformMatrix',\n    'fill-opacity': 'fillOpacity',\n    'fill-rule': 'fillRule',\n    'font-family': 'fontFamily',\n    'font-size': 'fontSize',\n    'font-style': 'fontStyle',\n    'font-weight': 'fontWeight',\n    'letter-spacing': 'charSpacing',\n    'paint-order': 'paintFirst',\n    'stroke-dasharray': 'strokeDashArray',\n    'stroke-dashoffset': 'strokeDashOffset',\n    'stroke-linecap': 'strokeLineCap',\n    'stroke-linejoin': 'strokeLineJoin',\n    'stroke-miterlimit': 'strokeMiterLimit',\n    'stroke-opacity': 'strokeOpacity',\n    'stroke-width': 'strokeWidth',\n    'text-decoration': 'textDecoration',\n    'text-anchor': 'textAnchor',\n    opacity: 'opacity',\n    'clip-path': 'clipPath',\n    'clip-rule': 'clipRule',\n    'vector-effect': 'strokeUniform'\n  },\n      colorAttributes = {\n    stroke: 'strokeOpacity',\n    fill: 'fillOpacity'\n  };\n  fabric.svgValidTagNamesRegEx = getSvgRegex(svgValidTagNames);\n  fabric.svgViewBoxElementsRegEx = getSvgRegex(svgViewBoxElements);\n  fabric.svgInvalidAncestorsRegEx = getSvgRegex(svgInvalidAncestors);\n  fabric.svgValidParentsRegEx = getSvgRegex(svgValidParents);\n  fabric.cssRules = {};\n  fabric.gradientDefs = {};\n  fabric.clipPaths = {};\n\n  function normalizeAttr(attr) {\n    // transform attribute names\n    if (attr in attributesMap) {\n      return attributesMap[attr];\n    }\n\n    return attr;\n  }\n\n  function normalizeValue(attr, value, parentAttributes, fontSize) {\n    var isArray = Object.prototype.toString.call(value) === '[object Array]',\n        parsed;\n\n    if ((attr === 'fill' || attr === 'stroke') && value === 'none') {\n      value = '';\n    } else if (attr === 'vector-effect') {\n      value = value === 'non-scaling-stroke';\n    } else if (attr === 'strokeDashArray') {\n      if (value === 'none') {\n        value = null;\n      } else {\n        value = value.replace(/,/g, ' ').split(/\\s+/).map(parseFloat);\n      }\n    } else if (attr === 'transformMatrix') {\n      if (parentAttributes && parentAttributes.transformMatrix) {\n        value = multiplyTransformMatrices(parentAttributes.transformMatrix, fabric.parseTransformAttribute(value));\n      } else {\n        value = fabric.parseTransformAttribute(value);\n      }\n    } else if (attr === 'visible') {\n      value = value !== 'none' && value !== 'hidden'; // display=none on parent element always takes precedence over child element\n\n      if (parentAttributes && parentAttributes.visible === false) {\n        value = false;\n      }\n    } else if (attr === 'opacity') {\n      value = parseFloat(value);\n\n      if (parentAttributes && typeof parentAttributes.opacity !== 'undefined') {\n        value *= parentAttributes.opacity;\n      }\n    } else if (attr === 'textAnchor'\n    /* text-anchor */\n    ) {\n        value = value === 'start' ? 'left' : value === 'end' ? 'right' : 'center';\n      } else if (attr === 'charSpacing') {\n      // parseUnit returns px and we convert it to em\n      parsed = parseUnit(value, fontSize) / fontSize * 1000;\n    } else if (attr === 'paintFirst') {\n      var fillIndex = value.indexOf('fill');\n      var strokeIndex = value.indexOf('stroke');\n      var value = 'fill';\n\n      if (fillIndex > -1 && strokeIndex > -1 && strokeIndex < fillIndex) {\n        value = 'stroke';\n      } else if (fillIndex === -1 && strokeIndex > -1) {\n        value = 'stroke';\n      }\n    } else if (attr === 'href' || attr === 'xlink:href') {\n      return value;\n    } else {\n      parsed = isArray ? value.map(parseUnit) : parseUnit(value, fontSize);\n    }\n\n    return !isArray && isNaN(parsed) ? value : parsed;\n  }\n  /**\n    * @private\n    */\n\n\n  function getSvgRegex(arr) {\n    return new RegExp('^(' + arr.join('|') + ')\\\\b', 'i');\n  }\n  /**\n   * @private\n   * @param {Object} attributes Array of attributes to parse\n   */\n\n\n  function _setStrokeFillOpacity(attributes) {\n    for (var attr in colorAttributes) {\n      if (typeof attributes[colorAttributes[attr]] === 'undefined' || attributes[attr] === '') {\n        continue;\n      }\n\n      if (typeof attributes[attr] === 'undefined') {\n        if (!fabric.Object.prototype[attr]) {\n          continue;\n        }\n\n        attributes[attr] = fabric.Object.prototype[attr];\n      }\n\n      if (attributes[attr].indexOf('url(') === 0) {\n        continue;\n      }\n\n      var color = new fabric.Color(attributes[attr]);\n      attributes[attr] = color.setAlpha(toFixed(color.getAlpha() * attributes[colorAttributes[attr]], 2)).toRgba();\n    }\n\n    return attributes;\n  }\n  /**\n   * @private\n   */\n\n\n  function _getMultipleNodes(doc, nodeNames) {\n    var nodeName,\n        nodeArray = [],\n        nodeList,\n        i,\n        len;\n\n    for (i = 0, len = nodeNames.length; i < len; i++) {\n      nodeName = nodeNames[i];\n      nodeList = doc.getElementsByTagName(nodeName);\n      nodeArray = nodeArray.concat(Array.prototype.slice.call(nodeList));\n    }\n\n    return nodeArray;\n  }\n  /**\n   * Parses \"transform\" attribute, returning an array of values\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {String} attributeValue String containing attribute value\n   * @return {Array} Array of 6 elements representing transformation matrix\n   */\n\n\n  fabric.parseTransformAttribute = function () {\n    function rotateMatrix(matrix, args) {\n      var cos = fabric.util.cos(args[0]),\n          sin = fabric.util.sin(args[0]),\n          x = 0,\n          y = 0;\n\n      if (args.length === 3) {\n        x = args[1];\n        y = args[2];\n      }\n\n      matrix[0] = cos;\n      matrix[1] = sin;\n      matrix[2] = -sin;\n      matrix[3] = cos;\n      matrix[4] = x - (cos * x - sin * y);\n      matrix[5] = y - (sin * x + cos * y);\n    }\n\n    function scaleMatrix(matrix, args) {\n      var multiplierX = args[0],\n          multiplierY = args.length === 2 ? args[1] : args[0];\n      matrix[0] = multiplierX;\n      matrix[3] = multiplierY;\n    }\n\n    function skewMatrix(matrix, args, pos) {\n      matrix[pos] = Math.tan(fabric.util.degreesToRadians(args[0]));\n    }\n\n    function translateMatrix(matrix, args) {\n      matrix[4] = args[0];\n\n      if (args.length === 2) {\n        matrix[5] = args[1];\n      }\n    } // identity matrix\n\n\n    var iMatrix = fabric.iMatrix,\n        // == begin transform regexp\n    number = fabric.reNum,\n        commaWsp = '(?:\\\\s+,?\\\\s*|,\\\\s*)',\n        skewX = '(?:(skewX)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n        skewY = '(?:(skewY)\\\\s*\\\\(\\\\s*(' + number + ')\\\\s*\\\\))',\n        rotate = '(?:(rotate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' + commaWsp + '(' + number + ')' + commaWsp + '(' + number + '))?\\\\s*\\\\))',\n        scale = '(?:(scale)\\\\s*\\\\(\\\\s*(' + number + ')(?:' + commaWsp + '(' + number + '))?\\\\s*\\\\))',\n        translate = '(?:(translate)\\\\s*\\\\(\\\\s*(' + number + ')(?:' + commaWsp + '(' + number + '))?\\\\s*\\\\))',\n        matrix = '(?:(matrix)\\\\s*\\\\(\\\\s*' + '(' + number + ')' + commaWsp + '(' + number + ')' + commaWsp + '(' + number + ')' + commaWsp + '(' + number + ')' + commaWsp + '(' + number + ')' + commaWsp + '(' + number + ')' + '\\\\s*\\\\))',\n        transform = '(?:' + matrix + '|' + translate + '|' + scale + '|' + rotate + '|' + skewX + '|' + skewY + ')',\n        transforms = '(?:' + transform + '(?:' + commaWsp + '*' + transform + ')*' + ')',\n        transformList = '^\\\\s*(?:' + transforms + '?)\\\\s*$',\n        // http://www.w3.org/TR/SVG/coords.html#TransformAttribute\n    reTransformList = new RegExp(transformList),\n        // == end transform regexp\n    reTransform = new RegExp(transform, 'g');\n    return function (attributeValue) {\n      // start with identity matrix\n      var matrix = iMatrix.concat(),\n          matrices = []; // return if no argument was given or\n      // an argument does not match transform attribute regexp\n\n      if (!attributeValue || attributeValue && !reTransformList.test(attributeValue)) {\n        return matrix;\n      }\n\n      attributeValue.replace(reTransform, function (match) {\n        var m = new RegExp(transform).exec(match).filter(function (match) {\n          // match !== '' && match != null\n          return !!match;\n        }),\n            operation = m[1],\n            args = m.slice(2).map(parseFloat);\n\n        switch (operation) {\n          case 'translate':\n            translateMatrix(matrix, args);\n            break;\n\n          case 'rotate':\n            args[0] = fabric.util.degreesToRadians(args[0]);\n            rotateMatrix(matrix, args);\n            break;\n\n          case 'scale':\n            scaleMatrix(matrix, args);\n            break;\n\n          case 'skewX':\n            skewMatrix(matrix, args, 2);\n            break;\n\n          case 'skewY':\n            skewMatrix(matrix, args, 1);\n            break;\n\n          case 'matrix':\n            matrix = args;\n            break;\n        } // snapshot current matrix into matrices array\n\n\n        matrices.push(matrix.concat()); // reset\n\n        matrix = iMatrix.concat();\n      });\n      var combinedMatrix = matrices[0];\n\n      while (matrices.length > 1) {\n        matrices.shift();\n        combinedMatrix = fabric.util.multiplyTransformMatrices(combinedMatrix, matrices[0]);\n      }\n\n      return combinedMatrix;\n    };\n  }();\n  /**\n   * @private\n   */\n\n\n  function parseStyleString(style, oStyle) {\n    var attr, value;\n    style.replace(/;\\s*$/, '').split(';').forEach(function (chunk) {\n      var pair = chunk.split(':');\n      attr = pair[0].trim().toLowerCase();\n      value = pair[1].trim();\n      oStyle[attr] = value;\n    });\n  }\n  /**\n   * @private\n   */\n\n\n  function parseStyleObject(style, oStyle) {\n    var attr, value;\n\n    for (var prop in style) {\n      if (typeof style[prop] === 'undefined') {\n        continue;\n      }\n\n      attr = prop.toLowerCase();\n      value = style[prop];\n      oStyle[attr] = value;\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  function getGlobalStylesForElement(element, svgUid) {\n    var styles = {};\n\n    for (var rule in fabric.cssRules[svgUid]) {\n      if (elementMatchesRule(element, rule.split(' '))) {\n        for (var property in fabric.cssRules[svgUid][rule]) {\n          styles[property] = fabric.cssRules[svgUid][rule][property];\n        }\n      }\n    }\n\n    return styles;\n  }\n  /**\n   * @private\n   */\n\n\n  function elementMatchesRule(element, selectors) {\n    var firstMatching,\n        parentMatching = true; //start from rightmost selector.\n\n    firstMatching = selectorMatches(element, selectors.pop());\n\n    if (firstMatching && selectors.length) {\n      parentMatching = doesSomeParentMatch(element, selectors);\n    }\n\n    return firstMatching && parentMatching && selectors.length === 0;\n  }\n\n  function doesSomeParentMatch(element, selectors) {\n    var selector,\n        parentMatching = true;\n\n    while (element.parentNode && element.parentNode.nodeType === 1 && selectors.length) {\n      if (parentMatching) {\n        selector = selectors.pop();\n      }\n\n      element = element.parentNode;\n      parentMatching = selectorMatches(element, selector);\n    }\n\n    return selectors.length === 0;\n  }\n  /**\n   * @private\n   */\n\n\n  function selectorMatches(element, selector) {\n    var nodeName = element.nodeName,\n        classNames = element.getAttribute('class'),\n        id = element.getAttribute('id'),\n        matcher,\n        i; // i check if a selector matches slicing away part from it.\n    // if i get empty string i should match\n\n    matcher = new RegExp('^' + nodeName, 'i');\n    selector = selector.replace(matcher, '');\n\n    if (id && selector.length) {\n      matcher = new RegExp('#' + id + '(?![a-zA-Z\\\\-]+)', 'i');\n      selector = selector.replace(matcher, '');\n    }\n\n    if (classNames && selector.length) {\n      classNames = classNames.split(' ');\n\n      for (i = classNames.length; i--;) {\n        matcher = new RegExp('\\\\.' + classNames[i] + '(?![a-zA-Z\\\\-]+)', 'i');\n        selector = selector.replace(matcher, '');\n      }\n    }\n\n    return selector.length === 0;\n  }\n  /**\n   * @private\n   * to support IE8 missing getElementById on SVGdocument and on node xmlDOM\n   */\n\n\n  function elementById(doc, id) {\n    var el;\n    doc.getElementById && (el = doc.getElementById(id));\n\n    if (el) {\n      return el;\n    }\n\n    var node,\n        i,\n        len,\n        nodelist = doc.getElementsByTagName('*');\n\n    for (i = 0, len = nodelist.length; i < len; i++) {\n      node = nodelist[i];\n\n      if (id === node.getAttribute('id')) {\n        return node;\n      }\n    }\n  }\n  /**\n   * @private\n   */\n\n\n  function parseUseDirectives(doc) {\n    var nodelist = _getMultipleNodes(doc, ['use', 'svg:use']),\n        i = 0;\n\n    while (nodelist.length && i < nodelist.length) {\n      var el = nodelist[i],\n          xlink = (el.getAttribute('xlink:href') || el.getAttribute('href')).substr(1),\n          x = el.getAttribute('x') || 0,\n          y = el.getAttribute('y') || 0,\n          el2 = elementById(doc, xlink).cloneNode(true),\n          currentTrans = (el2.getAttribute('transform') || '') + ' translate(' + x + ', ' + y + ')',\n          parentNode,\n          oldLength = nodelist.length,\n          attr,\n          j,\n          attrs,\n          len;\n      applyViewboxTransform(el2);\n\n      if (/^svg$/i.test(el2.nodeName)) {\n        var el3 = el2.ownerDocument.createElement('g');\n\n        for (j = 0, attrs = el2.attributes, len = attrs.length; j < len; j++) {\n          attr = attrs.item(j);\n          el3.setAttribute(attr.nodeName, attr.nodeValue);\n        } // el2.firstChild != null\n\n\n        while (el2.firstChild) {\n          el3.appendChild(el2.firstChild);\n        }\n\n        el2 = el3;\n      }\n\n      for (j = 0, attrs = el.attributes, len = attrs.length; j < len; j++) {\n        attr = attrs.item(j);\n\n        if (attr.nodeName === 'x' || attr.nodeName === 'y' || attr.nodeName === 'xlink:href' || attr.nodeName === 'href') {\n          continue;\n        }\n\n        if (attr.nodeName === 'transform') {\n          currentTrans = attr.nodeValue + ' ' + currentTrans;\n        } else {\n          el2.setAttribute(attr.nodeName, attr.nodeValue);\n        }\n      }\n\n      el2.setAttribute('transform', currentTrans);\n      el2.setAttribute('instantiated_by_use', '1');\n      el2.removeAttribute('id');\n      parentNode = el.parentNode;\n      parentNode.replaceChild(el2, el); // some browsers do not shorten nodelist after replaceChild (IE8)\n\n      if (nodelist.length === oldLength) {\n        i++;\n      }\n    }\n  } // http://www.w3.org/TR/SVG/coords.html#ViewBoxAttribute\n  // matches, e.g.: +14.56e-12, etc.\n\n\n  var reViewBoxAttrValue = new RegExp('^' + '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' + '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' + '\\\\s*(' + fabric.reNum + '+)\\\\s*,?' + '\\\\s*(' + fabric.reNum + '+)\\\\s*' + '$');\n  /**\n   * Add a <g> element that envelop all child elements and makes the viewbox transformMatrix descend on all elements\n   */\n\n  function applyViewboxTransform(element) {\n    var viewBoxAttr = element.getAttribute('viewBox'),\n        scaleX = 1,\n        scaleY = 1,\n        minX = 0,\n        minY = 0,\n        viewBoxWidth,\n        viewBoxHeight,\n        matrix,\n        el,\n        widthAttr = element.getAttribute('width'),\n        heightAttr = element.getAttribute('height'),\n        x = element.getAttribute('x') || 0,\n        y = element.getAttribute('y') || 0,\n        preserveAspectRatio = element.getAttribute('preserveAspectRatio') || '',\n        missingViewBox = !viewBoxAttr || !fabric.svgViewBoxElementsRegEx.test(element.nodeName) || !(viewBoxAttr = viewBoxAttr.match(reViewBoxAttrValue)),\n        missingDimAttr = !widthAttr || !heightAttr || widthAttr === '100%' || heightAttr === '100%',\n        toBeParsed = missingViewBox && missingDimAttr,\n        parsedDim = {},\n        translateMatrix = '',\n        widthDiff = 0,\n        heightDiff = 0;\n    parsedDim.width = 0;\n    parsedDim.height = 0;\n    parsedDim.toBeParsed = toBeParsed;\n\n    if (toBeParsed) {\n      return parsedDim;\n    }\n\n    if (missingViewBox) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      return parsedDim;\n    }\n\n    minX = -parseFloat(viewBoxAttr[1]);\n    minY = -parseFloat(viewBoxAttr[2]);\n    viewBoxWidth = parseFloat(viewBoxAttr[3]);\n    viewBoxHeight = parseFloat(viewBoxAttr[4]);\n\n    if (!missingDimAttr) {\n      parsedDim.width = parseUnit(widthAttr);\n      parsedDim.height = parseUnit(heightAttr);\n      scaleX = parsedDim.width / viewBoxWidth;\n      scaleY = parsedDim.height / viewBoxHeight;\n    } else {\n      parsedDim.width = viewBoxWidth;\n      parsedDim.height = viewBoxHeight;\n    } // default is to preserve aspect ratio\n\n\n    preserveAspectRatio = fabric.util.parsePreserveAspectRatioAttribute(preserveAspectRatio);\n\n    if (preserveAspectRatio.alignX !== 'none') {\n      //translate all container for the effect of Mid, Min, Max\n      if (preserveAspectRatio.meetOrSlice === 'meet') {\n        scaleY = scaleX = scaleX > scaleY ? scaleY : scaleX; // calculate additional translation to move the viewbox\n      }\n\n      if (preserveAspectRatio.meetOrSlice === 'slice') {\n        scaleY = scaleX = scaleX > scaleY ? scaleX : scaleY; // calculate additional translation to move the viewbox\n      }\n\n      widthDiff = parsedDim.width - viewBoxWidth * scaleX;\n      heightDiff = parsedDim.height - viewBoxHeight * scaleX;\n\n      if (preserveAspectRatio.alignX === 'Mid') {\n        widthDiff /= 2;\n      }\n\n      if (preserveAspectRatio.alignY === 'Mid') {\n        heightDiff /= 2;\n      }\n\n      if (preserveAspectRatio.alignX === 'Min') {\n        widthDiff = 0;\n      }\n\n      if (preserveAspectRatio.alignY === 'Min') {\n        heightDiff = 0;\n      }\n    }\n\n    if (scaleX === 1 && scaleY === 1 && minX === 0 && minY === 0 && x === 0 && y === 0) {\n      return parsedDim;\n    }\n\n    if (x || y) {\n      translateMatrix = ' translate(' + parseUnit(x) + ' ' + parseUnit(y) + ') ';\n    }\n\n    matrix = translateMatrix + ' matrix(' + scaleX + ' 0' + ' 0 ' + scaleY + ' ' + (minX * scaleX + widthDiff) + ' ' + (minY * scaleY + heightDiff) + ') ';\n    parsedDim.viewboxTransform = fabric.parseTransformAttribute(matrix);\n\n    if (element.nodeName === 'svg') {\n      el = element.ownerDocument.createElement('g'); // element.firstChild != null\n\n      while (element.firstChild) {\n        el.appendChild(element.firstChild);\n      }\n\n      element.appendChild(el);\n    } else {\n      el = element;\n      matrix = el.getAttribute('transform') + matrix;\n    }\n\n    el.setAttribute('transform', matrix);\n    return parsedDim;\n  }\n\n  function hasAncestorWithNodeName(element, nodeName) {\n    while (element && (element = element.parentNode)) {\n      if (element.nodeName && nodeName.test(element.nodeName.replace('svg:', '')) && !element.getAttribute('instantiated_by_use')) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n  /**\n   * Parses an SVG document, converts it to an array of corresponding fabric.* instances and passes them to a callback\n   * @static\n   * @function\n   * @memberOf fabric\n   * @param {SVGDocument} doc SVG document to parse\n   * @param {Function} callback Callback to call when parsing is finished;\n   * It's being passed an array of elements (parsed from a document).\n   * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n   * @param {Object} [parsingOptions] options for parsing document\n   * @param {String} [parsingOptions.crossOrigin] crossOrigin settings\n   */\n\n\n  fabric.parseSVGDocument = function (doc, callback, reviver, parsingOptions) {\n    if (!doc) {\n      return;\n    }\n\n    parseUseDirectives(doc);\n    var svgUid = fabric.Object.__uid++,\n        i,\n        len,\n        options = applyViewboxTransform(doc),\n        descendants = fabric.util.toArray(doc.getElementsByTagName('*'));\n    options.crossOrigin = parsingOptions && parsingOptions.crossOrigin;\n    options.svgUid = svgUid;\n\n    if (descendants.length === 0 && fabric.isLikelyNode) {\n      // we're likely in node, where \"o3-xml\" library fails to gEBTN(\"*\")\n      // https://github.com/ajaxorg/node-o3-xml/issues/21\n      descendants = doc.selectNodes('//*[name(.)!=\"svg\"]');\n      var arr = [];\n\n      for (i = 0, len = descendants.length; i < len; i++) {\n        arr[i] = descendants[i];\n      }\n\n      descendants = arr;\n    }\n\n    var elements = descendants.filter(function (el) {\n      applyViewboxTransform(el);\n      return fabric.svgValidTagNamesRegEx.test(el.nodeName.replace('svg:', '')) && !hasAncestorWithNodeName(el, fabric.svgInvalidAncestorsRegEx); // http://www.w3.org/TR/SVG/struct.html#DefsElement\n    });\n\n    if (!elements || elements && !elements.length) {\n      callback && callback([], {});\n      return;\n    }\n\n    var clipPaths = {};\n    descendants.filter(function (el) {\n      return el.nodeName.replace('svg:', '') === 'clipPath';\n    }).forEach(function (el) {\n      var id = el.getAttribute('id');\n      clipPaths[id] = fabric.util.toArray(el.getElementsByTagName('*')).filter(function (el) {\n        return fabric.svgValidTagNamesRegEx.test(el.nodeName.replace('svg:', ''));\n      });\n    });\n    fabric.gradientDefs[svgUid] = fabric.getGradientDefs(doc);\n    fabric.cssRules[svgUid] = fabric.getCSSRules(doc);\n    fabric.clipPaths[svgUid] = clipPaths; // Precedence of rules:   style > class > attribute\n\n    fabric.parseElements(elements, function (instances, elements) {\n      if (callback) {\n        callback(instances, options, elements, descendants);\n        delete fabric.gradientDefs[svgUid];\n        delete fabric.cssRules[svgUid];\n        delete fabric.clipPaths[svgUid];\n      }\n    }, clone(options), reviver, parsingOptions);\n  };\n\n  function recursivelyParseGradientsXlink(doc, gradient) {\n    var gradientsAttrs = ['gradientTransform', 'x1', 'x2', 'y1', 'y2', 'gradientUnits', 'cx', 'cy', 'r', 'fx', 'fy'],\n        xlinkAttr = 'xlink:href',\n        xLink = gradient.getAttribute(xlinkAttr).substr(1),\n        referencedGradient = elementById(doc, xLink);\n\n    if (referencedGradient && referencedGradient.getAttribute(xlinkAttr)) {\n      recursivelyParseGradientsXlink(doc, referencedGradient);\n    }\n\n    gradientsAttrs.forEach(function (attr) {\n      if (!gradient.hasAttribute(attr)) {\n        gradient.setAttribute(attr, referencedGradient.getAttribute(attr));\n      }\n    });\n\n    if (!gradient.children.length) {\n      var referenceClone = referencedGradient.cloneNode(true);\n\n      while (referenceClone.firstChild) {\n        gradient.appendChild(referenceClone.firstChild);\n      }\n    }\n\n    gradient.removeAttribute(xlinkAttr);\n  }\n\n  var reFontDeclaration = new RegExp('(normal|italic)?\\\\s*(normal|small-caps)?\\\\s*' + '(normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900)?\\\\s*(' + fabric.reNum + '(?:px|cm|mm|em|pt|pc|in)*)(?:\\\\/(normal|' + fabric.reNum + '))?\\\\s+(.*)');\n  extend(fabric, {\n    /**\n     * Parses a short font declaration, building adding its properties to a style object\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {String} value font declaration\n     * @param {Object} oStyle definition\n     */\n    parseFontDeclaration: function parseFontDeclaration(value, oStyle) {\n      var match = value.match(reFontDeclaration);\n\n      if (!match) {\n        return;\n      }\n\n      var fontStyle = match[1],\n          // font variant is not used\n      // fontVariant = match[2],\n      fontWeight = match[3],\n          fontSize = match[4],\n          lineHeight = match[5],\n          fontFamily = match[6];\n\n      if (fontStyle) {\n        oStyle.fontStyle = fontStyle;\n      }\n\n      if (fontWeight) {\n        oStyle.fontWeight = isNaN(parseFloat(fontWeight)) ? fontWeight : parseFloat(fontWeight);\n      }\n\n      if (fontSize) {\n        oStyle.fontSize = parseUnit(fontSize);\n      }\n\n      if (fontFamily) {\n        oStyle.fontFamily = fontFamily;\n      }\n\n      if (lineHeight) {\n        oStyle.lineHeight = lineHeight === 'normal' ? 1 : lineHeight;\n      }\n    },\n\n    /**\n     * Parses an SVG document, returning all of the gradient declarations found in it\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} Gradient definitions; key corresponds to element id, value -- to gradient definition element\n     */\n    getGradientDefs: function getGradientDefs(doc) {\n      var tagArray = ['linearGradient', 'radialGradient', 'svg:linearGradient', 'svg:radialGradient'],\n          elList = _getMultipleNodes(doc, tagArray),\n          el,\n          j = 0,\n          gradientDefs = {};\n\n      j = elList.length;\n\n      while (j--) {\n        el = elList[j];\n\n        if (el.getAttribute('xlink:href')) {\n          recursivelyParseGradientsXlink(doc, el);\n        }\n\n        gradientDefs[el.getAttribute('id')] = el;\n      }\n\n      return gradientDefs;\n    },\n\n    /**\n     * Returns an object of attributes' name/value, given element and an array of attribute names;\n     * Parses parent \"g\" nodes recursively upwards.\n     * @static\n     * @memberOf fabric\n     * @param {DOMElement} element Element to parse\n     * @param {Array} attributes Array of attributes to parse\n     * @return {Object} object containing parsed attributes' names/values\n     */\n    parseAttributes: function parseAttributes(element, attributes, svgUid) {\n      if (!element) {\n        return;\n      }\n\n      var value,\n          parentAttributes = {},\n          fontSize,\n          parentFontSize;\n\n      if (typeof svgUid === 'undefined') {\n        svgUid = element.getAttribute('svgUid');\n      } // if there's a parent container (`g` or `a` or `symbol` node), parse its attributes recursively upwards\n\n\n      if (element.parentNode && fabric.svgValidParentsRegEx.test(element.parentNode.nodeName)) {\n        parentAttributes = fabric.parseAttributes(element.parentNode, attributes, svgUid);\n      }\n\n      var ownAttributes = attributes.reduce(function (memo, attr) {\n        value = element.getAttribute(attr);\n\n        if (value) {\n          // eslint-disable-line\n          memo[attr] = value;\n        }\n\n        return memo;\n      }, {}); // add values parsed from style, which take precedence over attributes\n      // (see: http://www.w3.org/TR/SVG/styling.html#UsingPresentationAttributes)\n\n      ownAttributes = extend(ownAttributes, extend(getGlobalStylesForElement(element, svgUid), fabric.parseStyleAttribute(element)));\n      fontSize = parentFontSize = parentAttributes.fontSize || fabric.Text.DEFAULT_SVG_FONT_SIZE;\n\n      if (ownAttributes['font-size']) {\n        // looks like the minimum should be 9px when dealing with ems. this is what looks like in browsers.\n        ownAttributes['font-size'] = fontSize = parseUnit(ownAttributes['font-size'], parentFontSize);\n      }\n\n      var normalizedAttr,\n          normalizedValue,\n          normalizedStyle = {};\n\n      for (var attr in ownAttributes) {\n        normalizedAttr = normalizeAttr(attr);\n        normalizedValue = normalizeValue(normalizedAttr, ownAttributes[attr], parentAttributes, fontSize);\n        normalizedStyle[normalizedAttr] = normalizedValue;\n      }\n\n      if (normalizedStyle && normalizedStyle.font) {\n        fabric.parseFontDeclaration(normalizedStyle.font, normalizedStyle);\n      }\n\n      var mergedAttrs = extend(parentAttributes, normalizedStyle);\n      return fabric.svgValidParentsRegEx.test(element.nodeName) ? mergedAttrs : _setStrokeFillOpacity(mergedAttrs);\n    },\n\n    /**\n     * Transforms an array of svg elements to corresponding fabric.* instances\n     * @static\n     * @memberOf fabric\n     * @param {Array} elements Array of elements to parse\n     * @param {Function} callback Being passed an array of fabric instances (transformed from SVG elements)\n     * @param {Object} [options] Options object\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     */\n    parseElements: function parseElements(elements, callback, options, reviver, parsingOptions) {\n      new fabric.ElementsParser(elements, callback, options, reviver, parsingOptions).parse();\n    },\n\n    /**\n     * Parses \"style\" attribute, retuning an object with values\n     * @static\n     * @memberOf fabric\n     * @param {SVGElement} element Element to parse\n     * @return {Object} Objects with values parsed from style attribute of an element\n     */\n    parseStyleAttribute: function parseStyleAttribute(element) {\n      var oStyle = {},\n          style = element.getAttribute('style');\n\n      if (!style) {\n        return oStyle;\n      }\n\n      if (typeof style === 'string') {\n        parseStyleString(style, oStyle);\n      } else {\n        parseStyleObject(style, oStyle);\n      }\n\n      return oStyle;\n    },\n\n    /**\n     * Parses \"points\" attribute, returning an array of values\n     * @static\n     * @memberOf fabric\n     * @param {String} points points attribute string\n     * @return {Array} array of points\n     */\n    parsePointsAttribute: function parsePointsAttribute(points) {\n      // points attribute is required and must not be empty\n      if (!points) {\n        return null;\n      } // replace commas with whitespace and remove bookending whitespace\n\n\n      points = points.replace(/,/g, ' ').trim();\n      points = points.split(/\\s+/);\n      var parsedPoints = [],\n          i,\n          len;\n\n      for (i = 0, len = points.length; i < len; i += 2) {\n        parsedPoints.push({\n          x: parseFloat(points[i]),\n          y: parseFloat(points[i + 1])\n        });\n      } // odd number of points is an error\n      // if (parsedPoints.length % 2 !== 0) {\n      //   return null;\n      // }\n\n\n      return parsedPoints;\n    },\n\n    /**\n     * Returns CSS rules for a given SVG document\n     * @static\n     * @function\n     * @memberOf fabric\n     * @param {SVGDocument} doc SVG document to parse\n     * @return {Object} CSS rules of this document\n     */\n    getCSSRules: function getCSSRules(doc) {\n      var styles = doc.getElementsByTagName('style'),\n          i,\n          len,\n          allRules = {},\n          rules; // very crude parsing of style contents\n\n      for (i = 0, len = styles.length; i < len; i++) {\n        // IE9 doesn't support textContent, but provides text instead.\n        var styleContents = styles[i].textContent || styles[i].text; // remove comments\n\n        styleContents = styleContents.replace(/\\/\\*[\\s\\S]*?\\*\\//g, '');\n\n        if (styleContents.trim() === '') {\n          continue;\n        }\n\n        rules = styleContents.match(/[^{]*\\{[\\s\\S]*?\\}/g);\n        rules = rules.map(function (rule) {\n          return rule.trim();\n        }); // eslint-disable-next-line no-loop-func\n\n        rules.forEach(function (rule) {\n          var match = rule.match(/([\\s\\S]*?)\\s*\\{([^}]*)\\}/),\n              ruleObj = {},\n              declaration = match[2].trim(),\n              propertyValuePairs = declaration.replace(/;$/, '').split(/\\s*;\\s*/);\n\n          for (i = 0, len = propertyValuePairs.length; i < len; i++) {\n            var pair = propertyValuePairs[i].split(/\\s*:\\s*/),\n                property = pair[0],\n                value = pair[1];\n            ruleObj[property] = value;\n          }\n\n          rule = match[1];\n          rule.split(',').forEach(function (_rule) {\n            _rule = _rule.replace(/^svg/i, '').trim();\n\n            if (_rule === '') {\n              return;\n            }\n\n            if (allRules[_rule]) {\n              fabric.util.object.extend(allRules[_rule], ruleObj);\n            } else {\n              allRules[_rule] = fabric.util.object.clone(ruleObj);\n            }\n          });\n        });\n      }\n\n      return allRules;\n    },\n\n    /**\n     * Takes url corresponding to an SVG document, and parses it into a set of fabric objects.\n     * Note that SVG is fetched via XMLHttpRequest, so it needs to conform to SOP (Same Origin Policy)\n     * @memberOf fabric\n     * @param {String} url\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromURL: function loadSVGFromURL(url, callback, reviver, options) {\n      url = url.replace(/^\\n\\s*/, '').trim();\n      new fabric.util.request(url, {\n        method: 'get',\n        onComplete: onComplete\n      });\n\n      function onComplete(r) {\n        var xml = r.responseXML;\n\n        if (xml && !xml.documentElement && fabric.window.ActiveXObject && r.responseText) {\n          xml = new ActiveXObject('Microsoft.XMLDOM');\n          xml.async = 'false'; //IE chokes on DOCTYPE\n\n          xml.loadXML(r.responseText.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n        }\n\n        if (!xml || !xml.documentElement) {\n          callback && callback(null);\n          return false;\n        }\n\n        fabric.parseSVGDocument(xml.documentElement, function (results, _options, elements, allElements) {\n          callback && callback(results, _options, elements, allElements);\n        }, reviver, options);\n      }\n    },\n\n    /**\n     * Takes string corresponding to an SVG document, and parses it into a set of fabric objects\n     * @memberOf fabric\n     * @param {String} string\n     * @param {Function} callback\n     * @param {Function} [reviver] Method for further parsing of SVG elements, called after each fabric object created.\n     * @param {Object} [options] Object containing options for parsing\n     * @param {String} [options.crossOrigin] crossOrigin crossOrigin setting to use for external resources\n     */\n    loadSVGFromString: function loadSVGFromString(string, callback, reviver, options) {\n      string = string.trim();\n      var doc;\n\n      if (typeof fabric.window.DOMParser !== 'undefined') {\n        var parser = new fabric.window.DOMParser();\n\n        if (parser && parser.parseFromString) {\n          doc = parser.parseFromString(string, 'text/xml');\n        }\n      } else if (fabric.window.ActiveXObject) {\n        doc = new ActiveXObject('Microsoft.XMLDOM');\n        doc.async = 'false'; // IE chokes on DOCTYPE\n\n        doc.loadXML(string.replace(/<!DOCTYPE[\\s\\S]*?(\\[[\\s\\S]*\\])*?>/i, ''));\n      }\n\n      fabric.parseSVGDocument(doc.documentElement, function (results, _options, elements, allElements) {\n        callback(results, _options, elements, allElements);\n      }, reviver, options);\n    }\n  });\n})(typeof exports !== 'undefined' ? exports : this);\n\nfabric.ElementsParser = function (elements, callback, options, reviver, parsingOptions) {\n  this.elements = elements;\n  this.callback = callback;\n  this.options = options;\n  this.reviver = reviver;\n  this.svgUid = options && options.svgUid || 0;\n  this.parsingOptions = parsingOptions;\n  this.regexUrl = /^url\\(['\"]?#([^'\"]+)['\"]?\\)/g;\n};\n\n(function (proto) {\n  proto.parse = function () {\n    this.instances = new Array(this.elements.length);\n    this.numElements = this.elements.length;\n    this.createObjects();\n  };\n\n  proto.createObjects = function () {\n    var _this = this;\n\n    this.elements.forEach(function (element, i) {\n      element.setAttribute('svgUid', _this.svgUid);\n\n      _this.createObject(element, i);\n    });\n  };\n\n  proto.findTag = function (el) {\n    return fabric[fabric.util.string.capitalize(el.tagName.replace('svg:', ''))];\n  };\n\n  proto.createObject = function (el, index) {\n    var klass = this.findTag(el);\n\n    if (klass && klass.fromElement) {\n      try {\n        klass.fromElement(el, this.createCallback(index, el), this.options);\n      } catch (err) {\n        fabric.log(err);\n      }\n    } else {\n      this.checkIfDone();\n    }\n  };\n\n  proto.createCallback = function (index, el) {\n    var _this = this;\n\n    return function (obj) {\n      var _options;\n\n      _this.resolveGradient(obj, 'fill');\n\n      _this.resolveGradient(obj, 'stroke');\n\n      if (obj instanceof fabric.Image && obj._originalElement) {\n        _options = obj.parsePreserveAspectRatioAttribute(el);\n      }\n\n      obj._removeTransformMatrix(_options);\n\n      _this.resolveClipPath(obj);\n\n      _this.reviver && _this.reviver(el, obj);\n      _this.instances[index] = obj;\n\n      _this.checkIfDone();\n    };\n  };\n\n  proto.extractPropertyDefinition = function (obj, property, storage) {\n    var value = obj[property];\n\n    if (!/^url\\(/.test(value)) {\n      return;\n    }\n\n    var id = this.regexUrl.exec(value)[1];\n    this.regexUrl.lastIndex = 0;\n    return fabric[storage][this.svgUid][id];\n  };\n\n  proto.resolveGradient = function (obj, property) {\n    var gradientDef = this.extractPropertyDefinition(obj, property, 'gradientDefs');\n\n    if (gradientDef) {\n      obj.set(property, fabric.Gradient.fromElement(gradientDef, obj));\n    }\n  };\n\n  proto.createClipPathCallback = function (obj, container) {\n    return function (_newObj) {\n      _newObj._removeTransformMatrix();\n\n      _newObj.fillRule = _newObj.clipRule;\n      container.push(_newObj);\n    };\n  };\n\n  proto.resolveClipPath = function (obj) {\n    var clipPath = this.extractPropertyDefinition(obj, 'clipPath', 'clipPaths'),\n        element,\n        klass,\n        objTransformInv,\n        container,\n        gTransform,\n        options;\n\n    if (clipPath) {\n      container = [];\n      objTransformInv = fabric.util.invertTransform(obj.calcTransformMatrix());\n\n      for (var i = 0; i < clipPath.length; i++) {\n        element = clipPath[i];\n        klass = this.findTag(element);\n        klass.fromElement(element, this.createClipPathCallback(obj, container), this.options);\n      }\n\n      if (container.length === 1) {\n        clipPath = container[0];\n      } else {\n        clipPath = new fabric.Group(container);\n      }\n\n      gTransform = fabric.util.multiplyTransformMatrices(objTransformInv, clipPath.calcTransformMatrix());\n      var options = fabric.util.qrDecompose(gTransform);\n      clipPath.flipX = false;\n      clipPath.flipY = false;\n      clipPath.set('scaleX', options.scaleX);\n      clipPath.set('scaleY', options.scaleY);\n      clipPath.angle = options.angle;\n      clipPath.skewX = options.skewX;\n      clipPath.skewY = 0;\n      clipPath.setPositionByOrigin({\n        x: options.translateX,\n        y: options.translateY\n      }, 'center', 'center');\n      obj.clipPath = clipPath;\n    }\n  };\n\n  proto.checkIfDone = function () {\n    if (--this.numElements === 0) {\n      this.instances = this.instances.filter(function (el) {\n        // eslint-disable-next-line no-eq-null, eqeqeq\n        return el != null;\n      });\n      this.callback(this.instances, this.elements);\n    }\n  };\n})(fabric.ElementsParser.prototype);\n\n(function (global) {\n  'use strict';\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\n  var fabric = global.fabric || (global.fabric = {});\n\n  if (fabric.Point) {\n    fabric.warn('fabric.Point is already defined');\n    return;\n  }\n\n  fabric.Point = Point;\n  /**\n   * Point class\n   * @class fabric.Point\n   * @memberOf fabric\n   * @constructor\n   * @param {Number} x\n   * @param {Number} y\n   * @return {fabric.Point} thisArg\n   */\n\n  function Point(x, y) {\n    this.x = x;\n    this.y = y;\n  }\n\n  Point.prototype =\n  /** @lends fabric.Point.prototype */\n  {\n    type: 'point',\n    constructor: Point,\n\n    /**\n     * Adds another point to this one and returns another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point instance with added values\n     */\n    add: function add(that) {\n      return new Point(this.x + that.x, this.y + that.y);\n    },\n\n    /**\n     * Adds another point to this one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    addEquals: function addEquals(that) {\n      this.x += that.x;\n      this.y += that.y;\n      return this;\n    },\n\n    /**\n     * Adds value to this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point} new Point with added value\n     */\n    scalarAdd: function scalarAdd(scalar) {\n      return new Point(this.x + scalar, this.y + scalar);\n    },\n\n    /**\n     * Adds value to this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarAddEquals: function scalarAddEquals(scalar) {\n      this.x += scalar;\n      this.y += scalar;\n      return this;\n    },\n\n    /**\n     * Subtracts another point from this point and returns a new one\n     * @param {fabric.Point} that\n     * @return {fabric.Point} new Point object with subtracted values\n     */\n    subtract: function subtract(that) {\n      return new Point(this.x - that.x, this.y - that.y);\n    },\n\n    /**\n     * Subtracts another point from this point\n     * @param {fabric.Point} that\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    subtractEquals: function subtractEquals(that) {\n      this.x -= that.x;\n      this.y -= that.y;\n      return this;\n    },\n\n    /**\n     * Subtracts value from this point and returns a new one\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    scalarSubtract: function scalarSubtract(scalar) {\n      return new Point(this.x - scalar, this.y - scalar);\n    },\n\n    /**\n     * Subtracts value from this point\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    scalarSubtractEquals: function scalarSubtractEquals(scalar) {\n      this.x -= scalar;\n      this.y -= scalar;\n      return this;\n    },\n\n    /**\n     * Multiplies this point by a value and returns a new one\n     * TODO: rename in scalarMultiply in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    multiply: function multiply(scalar) {\n      return new Point(this.x * scalar, this.y * scalar);\n    },\n\n    /**\n     * Multiplies this point by a value\n     * TODO: rename in scalarMultiplyEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    multiplyEquals: function multiplyEquals(scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      return this;\n    },\n\n    /**\n     * Divides this point by a value and returns a new one\n     * TODO: rename in scalarDivide in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point}\n     */\n    divide: function divide(scalar) {\n      return new Point(this.x / scalar, this.y / scalar);\n    },\n\n    /**\n     * Divides this point by a value\n     * TODO: rename in scalarDivideEquals in 2.0\n     * @param {Number} scalar\n     * @return {fabric.Point} thisArg\n     * @chainable\n     */\n    divideEquals: function divideEquals(scalar) {\n      this.x /= scalar;\n      this.y /= scalar;\n      return this;\n    },\n\n    /**\n     * Returns true if this point is equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    eq: function eq(that) {\n      return this.x === that.x && this.y === that.y;\n    },\n\n    /**\n     * Returns true if this point is less than another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lt: function lt(that) {\n      return this.x < that.x && this.y < that.y;\n    },\n\n    /**\n     * Returns true if this point is less than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    lte: function lte(that) {\n      return this.x <= that.x && this.y <= that.y;\n    },\n\n    /**\n      * Returns true if this point is greater another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gt: function gt(that) {\n      return this.x > that.x && this.y > that.y;\n    },\n\n    /**\n     * Returns true if this point is greater than or equal to another one\n     * @param {fabric.Point} that\n     * @return {Boolean}\n     */\n    gte: function gte(that) {\n      return this.x >= that.x && this.y >= that.y;\n    },\n\n    /**\n     * Returns new point which is the result of linear interpolation with this one and another one\n     * @param {fabric.Point} that\n     * @param {Number} t , position of interpolation, between 0 and 1 default 0.5\n     * @return {fabric.Point}\n     */\n    lerp: function lerp(that, t) {\n      if (typeof t === 'undefined') {\n        t = 0.5;\n      }\n\n      t = Math.max(Math.min(1, t), 0);\n      return new Point(this.x + (that.x - this.x) * t, this.y + (that.y - this.y) * t);\n    },\n\n    /**\n     * Returns distance from this point and another one\n     * @param {fabric.Point} that\n     * @return {Number}\n     */\n    distanceFrom: function distanceFrom(that) {\n      var dx = this.x - that.x,\n          dy = this.y - that.y;\n      return Math.sqrt(dx * dx + dy * dy);\n    },\n\n    /**\n     * Returns the point between this point and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    midPointFrom: function midPointFrom(that) {\n      return this.lerp(that);\n    },\n\n    /**\n     * Returns a new point which is the min of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    min: function min(that) {\n      return new Point(Math.min(this.x, that.x), Math.min(this.y, that.y));\n    },\n\n    /**\n     * Returns a new point which is the max of this and another one\n     * @param {fabric.Point} that\n     * @return {fabric.Point}\n     */\n    max: function max(that) {\n      return new Point(Math.max(this.x, that.x), Math.max(this.y, that.y));\n    },\n\n    /**\n     * Returns string representation of this point\n     * @return {String}\n     */\n    toString: function toString() {\n      return this.x + ',' + this.y;\n    },\n\n    /**\n     * Sets x/y of this point\n     * @param {Number} x\n     * @param {Number} y\n     * @chainable\n     */\n    setXY: function setXY(x, y) {\n      this.x = x;\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x of this point\n     * @param {Number} x\n     * @chainable\n     */\n    setX: function setX(x) {\n      this.x = x;\n      return this;\n    },\n\n    /**\n     * Sets y of this point\n     * @param {Number} y\n     * @chainable\n     */\n    setY: function setY(y) {\n      this.y = y;\n      return this;\n    },\n\n    /**\n     * Sets x/y of this point from another point\n     * @param {fabric.Point} that\n     * @chainable\n     */\n    setFromPoint: function setFromPoint(that) {\n      this.x = that.x;\n      this.y = that.y;\n      return this;\n    },\n\n    /**\n     * Swaps x/y of this point and another point\n     * @param {fabric.Point} that\n     */\n    swap: function swap(that) {\n      var x = this.x,\n          y = this.y;\n      this.x = that.x;\n      this.y = that.y;\n      that.x = x;\n      that.y = y;\n    },\n\n    /**\n     * return a cloned instance of the point\n     * @return {fabric.Point}\n     */\n    clone: function clone() {\n      return new Point(this.x, this.y);\n    }\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n  /* Adaptation of work of Kevin Lindsey (kevin@kevlindev.com) */\n\n  var fabric = global.fabric || (global.fabric = {});\n\n  if (fabric.Intersection) {\n    fabric.warn('fabric.Intersection is already defined');\n    return;\n  }\n  /**\n   * Intersection class\n   * @class fabric.Intersection\n   * @memberOf fabric\n   * @constructor\n   */\n\n\n  function Intersection(status) {\n    this.status = status;\n    this.points = [];\n  }\n\n  fabric.Intersection = Intersection;\n  fabric.Intersection.prototype =\n  /** @lends fabric.Intersection.prototype */\n  {\n    constructor: Intersection,\n\n    /**\n     * Appends a point to intersection\n     * @param {fabric.Point} point\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoint: function appendPoint(point) {\n      this.points.push(point);\n      return this;\n    },\n\n    /**\n     * Appends points to intersection\n     * @param {Array} points\n     * @return {fabric.Intersection} thisArg\n     * @chainable\n     */\n    appendPoints: function appendPoints(points) {\n      this.points = this.points.concat(points);\n      return this;\n    }\n  };\n  /**\n   * Checks if one line intersects another\n   * TODO: rename in intersectSegmentSegment\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {fabric.Point} b1\n   * @param {fabric.Point} b2\n   * @return {fabric.Intersection}\n   */\n\n  fabric.Intersection.intersectLineLine = function (a1, a2, b1, b2) {\n    var result,\n        uaT = (b2.x - b1.x) * (a1.y - b1.y) - (b2.y - b1.y) * (a1.x - b1.x),\n        ubT = (a2.x - a1.x) * (a1.y - b1.y) - (a2.y - a1.y) * (a1.x - b1.x),\n        uB = (b2.y - b1.y) * (a2.x - a1.x) - (b2.x - b1.x) * (a2.y - a1.y);\n\n    if (uB !== 0) {\n      var ua = uaT / uB,\n          ub = ubT / uB;\n\n      if (0 <= ua && ua <= 1 && 0 <= ub && ub <= 1) {\n        result = new Intersection('Intersection');\n        result.appendPoint(new fabric.Point(a1.x + ua * (a2.x - a1.x), a1.y + ua * (a2.y - a1.y)));\n      } else {\n        result = new Intersection();\n      }\n    } else {\n      if (uaT === 0 || ubT === 0) {\n        result = new Intersection('Coincident');\n      } else {\n        result = new Intersection('Parallel');\n      }\n    }\n\n    return result;\n  };\n  /**\n   * Checks if line intersects polygon\n   * TODO: rename in intersectSegmentPolygon\n   * fix detection of coincident\n   * @static\n   * @param {fabric.Point} a1\n   * @param {fabric.Point} a2\n   * @param {Array} points\n   * @return {fabric.Intersection}\n   */\n\n\n  fabric.Intersection.intersectLinePolygon = function (a1, a2, points) {\n    var result = new Intersection(),\n        length = points.length,\n        b1,\n        b2,\n        inter,\n        i;\n\n    for (i = 0; i < length; i++) {\n      b1 = points[i];\n      b2 = points[(i + 1) % length];\n      inter = Intersection.intersectLineLine(a1, a2, b1, b2);\n      result.appendPoints(inter.points);\n    }\n\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n\n    return result;\n  };\n  /**\n   * Checks if polygon intersects another polygon\n   * @static\n   * @param {Array} points1\n   * @param {Array} points2\n   * @return {fabric.Intersection}\n   */\n\n\n  fabric.Intersection.intersectPolygonPolygon = function (points1, points2) {\n    var result = new Intersection(),\n        length = points1.length,\n        i;\n\n    for (i = 0; i < length; i++) {\n      var a1 = points1[i],\n          a2 = points1[(i + 1) % length],\n          inter = Intersection.intersectLinePolygon(a1, a2, points2);\n      result.appendPoints(inter.points);\n    }\n\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n\n    return result;\n  };\n  /**\n   * Checks if polygon intersects rectangle\n   * @static\n   * @param {Array} points\n   * @param {fabric.Point} r1\n   * @param {fabric.Point} r2\n   * @return {fabric.Intersection}\n   */\n\n\n  fabric.Intersection.intersectPolygonRectangle = function (points, r1, r2) {\n    var min = r1.min(r2),\n        max = r1.max(r2),\n        topRight = new fabric.Point(max.x, min.y),\n        bottomLeft = new fabric.Point(min.x, max.y),\n        inter1 = Intersection.intersectLinePolygon(min, topRight, points),\n        inter2 = Intersection.intersectLinePolygon(topRight, max, points),\n        inter3 = Intersection.intersectLinePolygon(max, bottomLeft, points),\n        inter4 = Intersection.intersectLinePolygon(bottomLeft, min, points),\n        result = new Intersection();\n    result.appendPoints(inter1.points);\n    result.appendPoints(inter2.points);\n    result.appendPoints(inter3.points);\n    result.appendPoints(inter4.points);\n\n    if (result.points.length > 0) {\n      result.status = 'Intersection';\n    }\n\n    return result;\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {});\n\n  if (fabric.Color) {\n    fabric.warn('fabric.Color is already defined.');\n    return;\n  }\n  /**\n   * Color class\n   * The purpose of {@link fabric.Color} is to abstract and encapsulate common color operations;\n   * {@link fabric.Color} is a constructor and creates instances of {@link fabric.Color} objects.\n   *\n   * @class fabric.Color\n   * @param {String} color optional in hex or rgb(a) or hsl format or from known color list\n   * @return {fabric.Color} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2/#colors}\n   */\n\n\n  function Color(color) {\n    if (!color) {\n      this.setSource([0, 0, 0, 1]);\n    } else {\n      this._tryParsingColor(color);\n    }\n  }\n\n  fabric.Color = Color;\n  fabric.Color.prototype =\n  /** @lends fabric.Color.prototype */\n  {\n    /**\n     * @private\n     * @param {String|Array} color Color value to parse\n     */\n    _tryParsingColor: function _tryParsingColor(color) {\n      var source;\n\n      if (color in Color.colorNameMap) {\n        color = Color.colorNameMap[color];\n      }\n\n      if (color === 'transparent') {\n        source = [255, 255, 255, 0];\n      }\n\n      if (!source) {\n        source = Color.sourceFromHex(color);\n      }\n\n      if (!source) {\n        source = Color.sourceFromRgb(color);\n      }\n\n      if (!source) {\n        source = Color.sourceFromHsl(color);\n      }\n\n      if (!source) {\n        //if color is not recognize let's make black as canvas does\n        source = [0, 0, 0, 1];\n      }\n\n      if (source) {\n        this.setSource(source);\n      }\n    },\n\n    /**\n     * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n     * @private\n     * @param {Number} r Red color value\n     * @param {Number} g Green color value\n     * @param {Number} b Blue color value\n     * @return {Array} Hsl color\n     */\n    _rgbToHsl: function _rgbToHsl(r, g, b) {\n      r /= 255;\n      g /= 255;\n      b /= 255;\n      var h,\n          s,\n          l,\n          max = fabric.util.array.max([r, g, b]),\n          min = fabric.util.array.min([r, g, b]);\n      l = (max + min) / 2;\n\n      if (max === min) {\n        h = s = 0; // achromatic\n      } else {\n        var d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n\n        switch (max) {\n          case r:\n            h = (g - b) / d + (g < b ? 6 : 0);\n            break;\n\n          case g:\n            h = (b - r) / d + 2;\n            break;\n\n          case b:\n            h = (r - g) / d + 4;\n            break;\n        }\n\n        h /= 6;\n      }\n\n      return [Math.round(h * 360), Math.round(s * 100), Math.round(l * 100)];\n    },\n\n    /**\n     * Returns source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @return {Array}\n     */\n    getSource: function getSource() {\n      return this._source;\n    },\n\n    /**\n     * Sets source of this color (where source is an array representation; ex: [200, 200, 100, 1])\n     * @param {Array} source\n     */\n    setSource: function setSource(source) {\n      this._source = source;\n    },\n\n    /**\n     * Returns color representation in RGB format\n     * @return {String} ex: rgb(0-255,0-255,0-255)\n     */\n    toRgb: function toRgb() {\n      var source = this.getSource();\n      return 'rgb(' + source[0] + ',' + source[1] + ',' + source[2] + ')';\n    },\n\n    /**\n     * Returns color representation in RGBA format\n     * @return {String} ex: rgba(0-255,0-255,0-255,0-1)\n     */\n    toRgba: function toRgba() {\n      var source = this.getSource();\n      return 'rgba(' + source[0] + ',' + source[1] + ',' + source[2] + ',' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HSL format\n     * @return {String} ex: hsl(0-360,0%-100%,0%-100%)\n     */\n    toHsl: function toHsl() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsl(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%)';\n    },\n\n    /**\n     * Returns color representation in HSLA format\n     * @return {String} ex: hsla(0-360,0%-100%,0%-100%,0-1)\n     */\n    toHsla: function toHsla() {\n      var source = this.getSource(),\n          hsl = this._rgbToHsl(source[0], source[1], source[2]);\n\n      return 'hsla(' + hsl[0] + ',' + hsl[1] + '%,' + hsl[2] + '%,' + source[3] + ')';\n    },\n\n    /**\n     * Returns color representation in HEX format\n     * @return {String} ex: FF5555\n     */\n    toHex: function toHex() {\n      var source = this.getSource(),\n          r,\n          g,\n          b;\n      r = source[0].toString(16);\n      r = r.length === 1 ? '0' + r : r;\n      g = source[1].toString(16);\n      g = g.length === 1 ? '0' + g : g;\n      b = source[2].toString(16);\n      b = b.length === 1 ? '0' + b : b;\n      return r.toUpperCase() + g.toUpperCase() + b.toUpperCase();\n    },\n\n    /**\n     * Returns color representation in HEXA format\n     * @return {String} ex: FF5555CC\n     */\n    toHexa: function toHexa() {\n      var source = this.getSource(),\n          a;\n      a = Math.round(source[3] * 255);\n      a = a.toString(16);\n      a = a.length === 1 ? '0' + a : a;\n      return this.toHex() + a.toUpperCase();\n    },\n\n    /**\n     * Gets value of alpha channel for this color\n     * @return {Number} 0-1\n     */\n    getAlpha: function getAlpha() {\n      return this.getSource()[3];\n    },\n\n    /**\n     * Sets value of alpha channel for this color\n     * @param {Number} alpha Alpha value 0-1\n     * @return {fabric.Color} thisArg\n     */\n    setAlpha: function setAlpha(alpha) {\n      var source = this.getSource();\n      source[3] = alpha;\n      this.setSource(source);\n      return this;\n    },\n\n    /**\n     * Transforms color to its grayscale representation\n     * @return {fabric.Color} thisArg\n     */\n    toGrayscale: function toGrayscale() {\n      var source = this.getSource(),\n          average = parseInt((source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0), 10),\n          currentAlpha = source[3];\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Transforms color to its black and white representation\n     * @param {Number} threshold\n     * @return {fabric.Color} thisArg\n     */\n    toBlackWhite: function toBlackWhite(threshold) {\n      var source = this.getSource(),\n          average = (source[0] * 0.3 + source[1] * 0.59 + source[2] * 0.11).toFixed(0),\n          currentAlpha = source[3];\n      threshold = threshold || 127;\n      average = Number(average) < Number(threshold) ? 0 : 255;\n      this.setSource([average, average, average, currentAlpha]);\n      return this;\n    },\n\n    /**\n     * Overlays color with another color\n     * @param {String|fabric.Color} otherColor\n     * @return {fabric.Color} thisArg\n     */\n    overlayWith: function overlayWith(otherColor) {\n      if (!(otherColor instanceof Color)) {\n        otherColor = new Color(otherColor);\n      }\n\n      var result = [],\n          alpha = this.getAlpha(),\n          otherAlpha = 0.5,\n          source = this.getSource(),\n          otherSource = otherColor.getSource(),\n          i;\n\n      for (i = 0; i < 3; i++) {\n        result.push(Math.round(source[i] * (1 - otherAlpha) + otherSource[i] * otherAlpha));\n      }\n\n      result[3] = alpha;\n      this.setSource(result);\n      return this;\n    }\n  };\n  /**\n   * Regex matching color in RGB or RGBA formats (ex: rgb(0, 0, 0), rgba(255, 100, 10, 0.5), rgba( 255 , 100 , 10 , 0.5 ), rgb(1,1,1), rgba(100%, 60%, 10%, 0.5))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n  // eslint-disable-next-line max-len\n\n  fabric.Color.reRGBa = /^rgba?\\(\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*,\\s*(\\d{1,3}(?:\\.\\d+)?\\%?)\\s*(?:\\s*,\\s*((?:\\d*\\.?\\d+)?)\\s*)?\\)$/i;\n  /**\n   * Regex matching color in HSL or HSLA formats (ex: hsl(200, 80%, 10%), hsla(300, 50%, 80%, 0.5), hsla( 300 , 50% , 80% , 0.5 ))\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n\n  fabric.Color.reHSLa = /^hsla?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3}\\%)\\s*,\\s*(\\d{1,3}\\%)\\s*(?:\\s*,\\s*(\\d+(?:\\.\\d+)?)\\s*)?\\)$/i;\n  /**\n   * Regex matching color in HEX format (ex: #FF5544CC, #FF5555, 010155, aff)\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   */\n\n  fabric.Color.reHex = /^#?([0-9a-f]{8}|[0-9a-f]{6}|[0-9a-f]{4}|[0-9a-f]{3})$/i;\n  /**\n   * Map of the 148 color names with HEX code\n   * @static\n   * @field\n   * @memberOf fabric.Color\n   * @see: https://www.w3.org/TR/css3-color/#svg-color\n   */\n\n  fabric.Color.colorNameMap = {\n    aliceblue: '#F0F8FF',\n    antiquewhite: '#FAEBD7',\n    aqua: '#00FFFF',\n    aquamarine: '#7FFFD4',\n    azure: '#F0FFFF',\n    beige: '#F5F5DC',\n    bisque: '#FFE4C4',\n    black: '#000000',\n    blanchedalmond: '#FFEBCD',\n    blue: '#0000FF',\n    blueviolet: '#8A2BE2',\n    brown: '#A52A2A',\n    burlywood: '#DEB887',\n    cadetblue: '#5F9EA0',\n    chartreuse: '#7FFF00',\n    chocolate: '#D2691E',\n    coral: '#FF7F50',\n    cornflowerblue: '#6495ED',\n    cornsilk: '#FFF8DC',\n    crimson: '#DC143C',\n    cyan: '#00FFFF',\n    darkblue: '#00008B',\n    darkcyan: '#008B8B',\n    darkgoldenrod: '#B8860B',\n    darkgray: '#A9A9A9',\n    darkgrey: '#A9A9A9',\n    darkgreen: '#006400',\n    darkkhaki: '#BDB76B',\n    darkmagenta: '#8B008B',\n    darkolivegreen: '#556B2F',\n    darkorange: '#FF8C00',\n    darkorchid: '#9932CC',\n    darkred: '#8B0000',\n    darksalmon: '#E9967A',\n    darkseagreen: '#8FBC8F',\n    darkslateblue: '#483D8B',\n    darkslategray: '#2F4F4F',\n    darkslategrey: '#2F4F4F',\n    darkturquoise: '#00CED1',\n    darkviolet: '#9400D3',\n    deeppink: '#FF1493',\n    deepskyblue: '#00BFFF',\n    dimgray: '#696969',\n    dimgrey: '#696969',\n    dodgerblue: '#1E90FF',\n    firebrick: '#B22222',\n    floralwhite: '#FFFAF0',\n    forestgreen: '#228B22',\n    fuchsia: '#FF00FF',\n    gainsboro: '#DCDCDC',\n    ghostwhite: '#F8F8FF',\n    gold: '#FFD700',\n    goldenrod: '#DAA520',\n    gray: '#808080',\n    grey: '#808080',\n    green: '#008000',\n    greenyellow: '#ADFF2F',\n    honeydew: '#F0FFF0',\n    hotpink: '#FF69B4',\n    indianred: '#CD5C5C',\n    indigo: '#4B0082',\n    ivory: '#FFFFF0',\n    khaki: '#F0E68C',\n    lavender: '#E6E6FA',\n    lavenderblush: '#FFF0F5',\n    lawngreen: '#7CFC00',\n    lemonchiffon: '#FFFACD',\n    lightblue: '#ADD8E6',\n    lightcoral: '#F08080',\n    lightcyan: '#E0FFFF',\n    lightgoldenrodyellow: '#FAFAD2',\n    lightgray: '#D3D3D3',\n    lightgrey: '#D3D3D3',\n    lightgreen: '#90EE90',\n    lightpink: '#FFB6C1',\n    lightsalmon: '#FFA07A',\n    lightseagreen: '#20B2AA',\n    lightskyblue: '#87CEFA',\n    lightslategray: '#778899',\n    lightslategrey: '#778899',\n    lightsteelblue: '#B0C4DE',\n    lightyellow: '#FFFFE0',\n    lime: '#00FF00',\n    limegreen: '#32CD32',\n    linen: '#FAF0E6',\n    magenta: '#FF00FF',\n    maroon: '#800000',\n    mediumaquamarine: '#66CDAA',\n    mediumblue: '#0000CD',\n    mediumorchid: '#BA55D3',\n    mediumpurple: '#9370DB',\n    mediumseagreen: '#3CB371',\n    mediumslateblue: '#7B68EE',\n    mediumspringgreen: '#00FA9A',\n    mediumturquoise: '#48D1CC',\n    mediumvioletred: '#C71585',\n    midnightblue: '#191970',\n    mintcream: '#F5FFFA',\n    mistyrose: '#FFE4E1',\n    moccasin: '#FFE4B5',\n    navajowhite: '#FFDEAD',\n    navy: '#000080',\n    oldlace: '#FDF5E6',\n    olive: '#808000',\n    olivedrab: '#6B8E23',\n    orange: '#FFA500',\n    orangered: '#FF4500',\n    orchid: '#DA70D6',\n    palegoldenrod: '#EEE8AA',\n    palegreen: '#98FB98',\n    paleturquoise: '#AFEEEE',\n    palevioletred: '#DB7093',\n    papayawhip: '#FFEFD5',\n    peachpuff: '#FFDAB9',\n    peru: '#CD853F',\n    pink: '#FFC0CB',\n    plum: '#DDA0DD',\n    powderblue: '#B0E0E6',\n    purple: '#800080',\n    rebeccapurple: '#663399',\n    red: '#FF0000',\n    rosybrown: '#BC8F8F',\n    royalblue: '#4169E1',\n    saddlebrown: '#8B4513',\n    salmon: '#FA8072',\n    sandybrown: '#F4A460',\n    seagreen: '#2E8B57',\n    seashell: '#FFF5EE',\n    sienna: '#A0522D',\n    silver: '#C0C0C0',\n    skyblue: '#87CEEB',\n    slateblue: '#6A5ACD',\n    slategray: '#708090',\n    slategrey: '#708090',\n    snow: '#FFFAFA',\n    springgreen: '#00FF7F',\n    steelblue: '#4682B4',\n    tan: '#D2B48C',\n    teal: '#008080',\n    thistle: '#D8BFD8',\n    tomato: '#FF6347',\n    turquoise: '#40E0D0',\n    violet: '#EE82EE',\n    wheat: '#F5DEB3',\n    white: '#FFFFFF',\n    whitesmoke: '#F5F5F5',\n    yellow: '#FFFF00',\n    yellowgreen: '#9ACD32'\n  };\n  /**\n   * @private\n   * @param {Number} p\n   * @param {Number} q\n   * @param {Number} t\n   * @return {Number}\n   */\n\n  function hue2rgb(p, q, t) {\n    if (t < 0) {\n      t += 1;\n    }\n\n    if (t > 1) {\n      t -= 1;\n    }\n\n    if (t < 1 / 6) {\n      return p + (q - p) * 6 * t;\n    }\n\n    if (t < 1 / 2) {\n      return q;\n    }\n\n    if (t < 2 / 3) {\n      return p + (q - p) * (2 / 3 - t) * 6;\n    }\n\n    return p;\n  }\n  /**\n   * Returns new color object, when given a color in RGB format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255)\n   * @return {fabric.Color}\n   */\n\n\n  fabric.Color.fromRgb = function (color) {\n    return Color.fromSource(Color.sourceFromRgb(color));\n  };\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in RGB or RGBA format\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: rgb(0-255,0-255,0-255), rgb(0%-100%,0%-100%,0%-100%)\n   * @return {Array} source\n   */\n\n\n  fabric.Color.sourceFromRgb = function (color) {\n    var match = color.match(Color.reRGBa);\n\n    if (match) {\n      var r = parseInt(match[1], 10) / (/%$/.test(match[1]) ? 100 : 1) * (/%$/.test(match[1]) ? 255 : 1),\n          g = parseInt(match[2], 10) / (/%$/.test(match[2]) ? 100 : 1) * (/%$/.test(match[2]) ? 255 : 1),\n          b = parseInt(match[3], 10) / (/%$/.test(match[3]) ? 100 : 1) * (/%$/.test(match[3]) ? 255 : 1);\n      return [parseInt(r, 10), parseInt(g, 10), parseInt(b, 10), match[4] ? parseFloat(match[4]) : 1];\n    }\n  };\n  /**\n   * Returns new color object, when given a color in RGBA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n\n\n  fabric.Color.fromRgba = Color.fromRgb;\n  /**\n   * Returns new color object, when given a color in HSL format\n   * @param {String} color Color value ex: hsl(0-260,0%-100%,0%-100%)\n   * @memberOf fabric.Color\n   * @return {fabric.Color}\n   */\n\n  fabric.Color.fromHsl = function (color) {\n    return Color.fromSource(Color.sourceFromHsl(color));\n  };\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HSL or HSLA format.\n   * Adapted from <a href=\"https://rawgithub.com/mjijackson/mjijackson.github.com/master/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript.html\">https://github.com/mjijackson</a>\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: hsl(0-360,0%-100%,0%-100%) or hsla(0-360,0%-100%,0%-100%, 0-1)\n   * @return {Array} source\n   * @see http://http://www.w3.org/TR/css3-color/#hsl-color\n   */\n\n\n  fabric.Color.sourceFromHsl = function (color) {\n    var match = color.match(Color.reHSLa);\n\n    if (!match) {\n      return;\n    }\n\n    var h = (parseFloat(match[1]) % 360 + 360) % 360 / 360,\n        s = parseFloat(match[2]) / (/%$/.test(match[2]) ? 100 : 1),\n        l = parseFloat(match[3]) / (/%$/.test(match[3]) ? 100 : 1),\n        r,\n        g,\n        b;\n\n    if (s === 0) {\n      r = g = b = l;\n    } else {\n      var q = l <= 0.5 ? l * (s + 1) : l + s - l * s,\n          p = l * 2 - q;\n      r = hue2rgb(p, q, h + 1 / 3);\n      g = hue2rgb(p, q, h);\n      b = hue2rgb(p, q, h - 1 / 3);\n    }\n\n    return [Math.round(r * 255), Math.round(g * 255), Math.round(b * 255), match[4] ? parseFloat(match[4]) : 1];\n  };\n  /**\n   * Returns new color object, when given a color in HSLA format\n   * @static\n   * @function\n   * @memberOf fabric.Color\n   * @param {String} color\n   * @return {fabric.Color}\n   */\n\n\n  fabric.Color.fromHsla = Color.fromHsl;\n  /**\n   * Returns new color object, when given a color in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color Color value ex: FF5555\n   * @return {fabric.Color}\n   */\n\n  fabric.Color.fromHex = function (color) {\n    return Color.fromSource(Color.sourceFromHex(color));\n  };\n  /**\n   * Returns array representation (ex: [100, 100, 200, 1]) of a color that's in HEX format\n   * @static\n   * @memberOf fabric.Color\n   * @param {String} color ex: FF5555 or FF5544CC (RGBa)\n   * @return {Array} source\n   */\n\n\n  fabric.Color.sourceFromHex = function (color) {\n    if (color.match(Color.reHex)) {\n      var value = color.slice(color.indexOf('#') + 1),\n          isShortNotation = value.length === 3 || value.length === 4,\n          isRGBa = value.length === 8 || value.length === 4,\n          r = isShortNotation ? value.charAt(0) + value.charAt(0) : value.substring(0, 2),\n          g = isShortNotation ? value.charAt(1) + value.charAt(1) : value.substring(2, 4),\n          b = isShortNotation ? value.charAt(2) + value.charAt(2) : value.substring(4, 6),\n          a = isRGBa ? isShortNotation ? value.charAt(3) + value.charAt(3) : value.substring(6, 8) : 'FF';\n      return [parseInt(r, 16), parseInt(g, 16), parseInt(b, 16), parseFloat((parseInt(a, 16) / 255).toFixed(2))];\n    }\n  };\n  /**\n   * Returns new color object, when given color in array representation (ex: [200, 100, 100, 0.5])\n   * @static\n   * @memberOf fabric.Color\n   * @param {Array} source\n   * @return {fabric.Color}\n   */\n\n\n  fabric.Color.fromSource = function (source) {\n    var oColor = new Color();\n    oColor.setSource(source);\n    return oColor;\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function () {\n  /* _FROM_SVG_START_ */\n  function getColorStop(el) {\n    var style = el.getAttribute('style'),\n        offset = el.getAttribute('offset') || 0,\n        color,\n        colorAlpha,\n        opacity,\n        i; // convert percents to absolute values\n\n    offset = parseFloat(offset) / (/%$/.test(offset) ? 100 : 1);\n    offset = offset < 0 ? 0 : offset > 1 ? 1 : offset;\n\n    if (style) {\n      var keyValuePairs = style.split(/\\s*;\\s*/);\n\n      if (keyValuePairs[keyValuePairs.length - 1] === '') {\n        keyValuePairs.pop();\n      }\n\n      for (i = keyValuePairs.length; i--;) {\n        var split = keyValuePairs[i].split(/\\s*:\\s*/),\n            key = split[0].trim(),\n            value = split[1].trim();\n\n        if (key === 'stop-color') {\n          color = value;\n        } else if (key === 'stop-opacity') {\n          opacity = value;\n        }\n      }\n    }\n\n    if (!color) {\n      color = el.getAttribute('stop-color') || 'rgb(0,0,0)';\n    }\n\n    if (!opacity) {\n      opacity = el.getAttribute('stop-opacity');\n    }\n\n    color = new fabric.Color(color);\n    colorAlpha = color.getAlpha();\n    opacity = isNaN(parseFloat(opacity)) ? 1 : parseFloat(opacity);\n    opacity *= colorAlpha;\n    return {\n      offset: offset,\n      color: color.toRgb(),\n      opacity: opacity\n    };\n  }\n\n  function getLinearCoords(el) {\n    return {\n      x1: el.getAttribute('x1') || 0,\n      y1: el.getAttribute('y1') || 0,\n      x2: el.getAttribute('x2') || '100%',\n      y2: el.getAttribute('y2') || 0\n    };\n  }\n\n  function getRadialCoords(el) {\n    return {\n      x1: el.getAttribute('fx') || el.getAttribute('cx') || '50%',\n      y1: el.getAttribute('fy') || el.getAttribute('cy') || '50%',\n      r1: 0,\n      x2: el.getAttribute('cx') || '50%',\n      y2: el.getAttribute('cy') || '50%',\n      r2: el.getAttribute('r') || '50%'\n    };\n  }\n  /* _FROM_SVG_END_ */\n\n\n  var clone = fabric.util.object.clone;\n  /**\n   * Gradient class\n   * @class fabric.Gradient\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#gradients}\n   * @see {@link fabric.Gradient#initialize} for constructor definition\n   */\n\n  fabric.Gradient = fabric.util.createClass(\n  /** @lends fabric.Gradient.prototype */\n  {\n    /**\n     * Horizontal offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetX: 0,\n\n    /**\n     * Vertical offset for aligning gradients coming from SVG when outside pathgroups\n     * @type Number\n     * @default 0\n     */\n    offsetY: 0,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object with type, coords, gradientUnits and colorStops\n     * @return {fabric.Gradient} thisArg\n     */\n    initialize: function initialize(options) {\n      options || (options = {});\n      var coords = {};\n      this.id = fabric.Object.__uid++;\n      this.type = options.type || 'linear';\n      coords = {\n        x1: options.coords.x1 || 0,\n        y1: options.coords.y1 || 0,\n        x2: options.coords.x2 || 0,\n        y2: options.coords.y2 || 0\n      };\n\n      if (this.type === 'radial') {\n        coords.r1 = options.coords.r1 || 0;\n        coords.r2 = options.coords.r2 || 0;\n      }\n\n      this.coords = coords;\n      this.colorStops = options.colorStops.slice();\n\n      if (options.gradientTransform) {\n        this.gradientTransform = options.gradientTransform;\n      }\n\n      this.offsetX = options.offsetX || this.offsetX;\n      this.offsetY = options.offsetY || this.offsetY;\n    },\n\n    /**\n     * Adds another colorStop\n     * @param {Object} colorStop Object with offset and color\n     * @return {fabric.Gradient} thisArg\n     */\n    addColorStop: function addColorStop(colorStops) {\n      for (var position in colorStops) {\n        var color = new fabric.Color(colorStops[position]);\n        this.colorStops.push({\n          offset: parseFloat(position),\n          color: color.toRgb(),\n          opacity: color.getAlpha()\n        });\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns object representation of a gradient\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object}\n     */\n    toObject: function toObject(propertiesToInclude) {\n      var object = {\n        type: this.type,\n        coords: this.coords,\n        colorStops: this.colorStops,\n        offsetX: this.offsetX,\n        offsetY: this.offsetY,\n        gradientTransform: this.gradientTransform ? this.gradientTransform.concat() : this.gradientTransform\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns SVG representation of an gradient\n     * @param {Object} object Object to create a gradient for\n     * @return {String} SVG representation of an gradient (linear/radial)\n     */\n    toSVG: function toSVG(object, options) {\n      var coords = clone(this.coords, true),\n          i,\n          len,\n          options = options || {},\n          markup,\n          commonAttributes,\n          colorStops = clone(this.colorStops, true),\n          needsSwap = coords.r1 > coords.r2,\n          transform = this.gradientTransform ? this.gradientTransform.concat() : fabric.iMatrix.concat(),\n          offsetX = object.width / 2 - this.offsetX,\n          offsetY = object.height / 2 - this.offsetY,\n          withViewport = !!options.additionalTransform; // colorStops must be sorted ascending\n\n      colorStops.sort(function (a, b) {\n        return a.offset - b.offset;\n      });\n\n      if (object.type === 'path') {\n        offsetX -= object.pathOffset.x;\n        offsetY -= object.pathOffset.y;\n      }\n\n      transform[4] -= offsetX;\n      transform[5] -= offsetY;\n      commonAttributes = 'id=\"SVGID_' + this.id + '\" gradientUnits=\"userSpaceOnUse\"';\n      commonAttributes += ' gradientTransform=\"' + (withViewport ? options.additionalTransform + ' ' : '') + fabric.util.matrixToSVG(transform) + '\" ';\n\n      if (this.type === 'linear') {\n        markup = ['<linearGradient ', commonAttributes, ' x1=\"', coords.x1, '\" y1=\"', coords.y1, '\" x2=\"', coords.x2, '\" y2=\"', coords.y2, '\">\\n'];\n      } else if (this.type === 'radial') {\n        // svg radial gradient has just 1 radius. the biggest.\n        markup = ['<radialGradient ', commonAttributes, ' cx=\"', needsSwap ? coords.x1 : coords.x2, '\" cy=\"', needsSwap ? coords.y1 : coords.y2, '\" r=\"', needsSwap ? coords.r1 : coords.r2, '\" fx=\"', needsSwap ? coords.x2 : coords.x1, '\" fy=\"', needsSwap ? coords.y2 : coords.y1, '\">\\n'];\n      }\n\n      if (this.type === 'radial') {\n        if (needsSwap) {\n          // svg goes from internal to external radius. if radius are inverted, swap color stops.\n          colorStops = colorStops.concat();\n          colorStops.reverse();\n\n          for (i = 0, len = colorStops.length; i < len; i++) {\n            colorStops[i].offset = 1 - colorStops[i].offset;\n          }\n        }\n\n        var minRadius = Math.min(coords.r1, coords.r2);\n\n        if (minRadius > 0) {\n          // i have to shift all colorStops and add new one in 0.\n          var maxRadius = Math.max(coords.r1, coords.r2),\n              percentageShift = minRadius / maxRadius;\n\n          for (i = 0, len = colorStops.length; i < len; i++) {\n            colorStops[i].offset += percentageShift * (1 - colorStops[i].offset);\n          }\n        }\n      }\n\n      for (i = 0, len = colorStops.length; i < len; i++) {\n        var colorStop = colorStops[i];\n        markup.push('<stop ', 'offset=\"', colorStop.offset * 100 + '%', '\" style=\"stop-color:', colorStop.color, typeof colorStop.opacity !== 'undefined' ? ';stop-opacity: ' + colorStop.opacity : ';', '\"/>\\n');\n      }\n\n      markup.push(this.type === 'linear' ? '</linearGradient>\\n' : '</radialGradient>\\n');\n      return markup.join('');\n    },\n\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns an instance of CanvasGradient\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {CanvasGradient}\n     */\n    toLive: function toLive(ctx) {\n      var gradient,\n          coords = fabric.util.object.clone(this.coords),\n          i,\n          len;\n\n      if (!this.type) {\n        return;\n      }\n\n      if (this.type === 'linear') {\n        gradient = ctx.createLinearGradient(coords.x1, coords.y1, coords.x2, coords.y2);\n      } else if (this.type === 'radial') {\n        gradient = ctx.createRadialGradient(coords.x1, coords.y1, coords.r1, coords.x2, coords.y2, coords.r2);\n      }\n\n      for (i = 0, len = this.colorStops.length; i < len; i++) {\n        var color = this.colorStops[i].color,\n            opacity = this.colorStops[i].opacity,\n            offset = this.colorStops[i].offset;\n\n        if (typeof opacity !== 'undefined') {\n          color = new fabric.Color(color).setAlpha(opacity).toRgba();\n        }\n\n        gradient.addColorStop(offset, color);\n      }\n\n      return gradient;\n    }\n  });\n  fabric.util.object.extend(fabric.Gradient, {\n    /* _FROM_SVG_START_ */\n\n    /**\n     * Returns {@link fabric.Gradient} instance from an SVG element\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {SVGGradientElement} el SVG gradient element\n     * @param {fabric.Object} instance\n     * @return {fabric.Gradient} Gradient instance\n     * @see http://www.w3.org/TR/SVG/pservers.html#LinearGradientElement\n     * @see http://www.w3.org/TR/SVG/pservers.html#RadialGradientElement\n     */\n    fromElement: function fromElement(el, instance) {\n      /**\n       *  @example:\n       *\n       *  <linearGradient id=\"linearGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\"/>\n       *    <stop offset=\"100%\" stop-color=\"black\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <linearGradient id=\"linearGrad2\">\n       *    <stop offset=\"0\" style=\"stop-color:rgb(255,255,255)\"/>\n       *    <stop offset=\"1\" style=\"stop-color:rgb(0,0,0)\"/>\n       *  </linearGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad1\">\n       *    <stop offset=\"0%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *    <stop offset=\"50%\" stop-color=\"black\" stop-opacity=\"0.5\" />\n       *    <stop offset=\"100%\" stop-color=\"white\" stop-opacity=\"1\" />\n       *  </radialGradient>\n       *\n       *  OR\n       *\n       *  <radialGradient id=\"radialGrad2\">\n       *    <stop offset=\"0\" stop-color=\"rgb(255,255,255)\" />\n       *    <stop offset=\"0.5\" stop-color=\"rgb(0,0,0)\" />\n       *    <stop offset=\"1\" stop-color=\"rgb(255,255,255)\" />\n       *  </radialGradient>\n       *\n       */\n      var colorStopEls = el.getElementsByTagName('stop'),\n          type,\n          gradientUnits = el.getAttribute('gradientUnits') || 'objectBoundingBox',\n          gradientTransform = el.getAttribute('gradientTransform'),\n          colorStops = [],\n          coords,\n          ellipseMatrix,\n          i;\n\n      if (el.nodeName === 'linearGradient' || el.nodeName === 'LINEARGRADIENT') {\n        type = 'linear';\n      } else {\n        type = 'radial';\n      }\n\n      if (type === 'linear') {\n        coords = getLinearCoords(el);\n      } else if (type === 'radial') {\n        coords = getRadialCoords(el);\n      }\n\n      for (i = colorStopEls.length; i--;) {\n        colorStops.push(getColorStop(colorStopEls[i]));\n      }\n\n      ellipseMatrix = _convertPercentUnitsToValues(instance, coords, gradientUnits);\n      var gradient = new fabric.Gradient({\n        type: type,\n        coords: coords,\n        colorStops: colorStops,\n        offsetX: -instance.left,\n        offsetY: -instance.top\n      });\n\n      if (gradientTransform || ellipseMatrix !== '') {\n        gradient.gradientTransform = fabric.parseTransformAttribute((gradientTransform || '') + ellipseMatrix);\n      }\n\n      return gradient;\n    },\n\n    /* _FROM_SVG_END_ */\n\n    /**\n     * Returns {@link fabric.Gradient} instance from its object representation\n     * @static\n     * @memberOf fabric.Gradient\n     * @param {Object} obj\n     * @param {Object} [options] Options object\n     */\n    forObject: function forObject(obj, options) {\n      options || (options = {});\n\n      _convertPercentUnitsToValues(obj, options.coords, 'userSpaceOnUse');\n\n      return new fabric.Gradient(options);\n    }\n  });\n  /**\n   * @private\n   */\n\n  function _convertPercentUnitsToValues(object, options, gradientUnits) {\n    var propValue,\n        addFactor = 0,\n        multFactor = 1,\n        ellipseMatrix = '';\n\n    for (var prop in options) {\n      if (options[prop] === 'Infinity') {\n        options[prop] = 1;\n      } else if (options[prop] === '-Infinity') {\n        options[prop] = 0;\n      }\n\n      propValue = parseFloat(options[prop], 10);\n\n      if (typeof options[prop] === 'string' && /^(\\d+\\.\\d+)%|(\\d+)%$/.test(options[prop])) {\n        multFactor = 0.01;\n      } else {\n        multFactor = 1;\n      }\n\n      if (prop === 'x1' || prop === 'x2' || prop === 'r2') {\n        multFactor *= gradientUnits === 'objectBoundingBox' ? object.width : 1;\n        addFactor = gradientUnits === 'objectBoundingBox' ? object.left || 0 : 0;\n      } else if (prop === 'y1' || prop === 'y2') {\n        multFactor *= gradientUnits === 'objectBoundingBox' ? object.height : 1;\n        addFactor = gradientUnits === 'objectBoundingBox' ? object.top || 0 : 0;\n      }\n\n      options[prop] = propValue * multFactor + addFactor;\n    }\n\n    if (object.type === 'ellipse' && options.r2 !== null && gradientUnits === 'objectBoundingBox' && object.rx !== object.ry) {\n      var scaleFactor = object.ry / object.rx;\n      ellipseMatrix = ' scale(1, ' + scaleFactor + ')';\n\n      if (options.y1) {\n        options.y1 /= scaleFactor;\n      }\n\n      if (options.y2) {\n        options.y2 /= scaleFactor;\n      }\n    }\n\n    return ellipseMatrix;\n  }\n})();\n\n(function () {\n  'use strict';\n\n  var toFixed = fabric.util.toFixed;\n  /**\n   * Pattern class\n   * @class fabric.Pattern\n   * @see {@link http://fabricjs.com/patterns|Pattern demo}\n   * @see {@link http://fabricjs.com/dynamic-patterns|DynamicPattern demo}\n   * @see {@link fabric.Pattern#initialize} for constructor definition\n   */\n\n  fabric.Pattern = fabric.util.createClass(\n  /** @lends fabric.Pattern.prototype */\n  {\n    /**\n     * Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @type String\n     * @default\n     */\n    repeat: 'repeat',\n\n    /**\n     * Pattern horizontal offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Pattern vertical offset from object's left/top corner\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @type String\n     * @default\n     */\n    crossOrigin: '',\n\n    /**\n     * transform matrix to change the pattern, imported from svgs.\n     * @type Array\n     * @default\n     */\n    patternTransform: null,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @param {Function} [callback] function to invoke after callback init.\n     * @return {fabric.Pattern} thisArg\n     */\n    initialize: function initialize(options, callback) {\n      options || (options = {});\n      this.id = fabric.Object.__uid++;\n      this.setOptions(options);\n\n      if (!options.source || options.source && typeof options.source !== 'string') {\n        callback && callback(this);\n        return;\n      } // function string\n\n\n      if (typeof fabric.util.getFunctionBody(options.source) !== 'undefined') {\n        this.source = new Function(fabric.util.getFunctionBody(options.source));\n        callback && callback(this);\n      } else {\n        // img src string\n        var _this = this;\n\n        this.source = fabric.util.createImage();\n        fabric.util.loadImage(options.source, function (img) {\n          _this.source = img;\n          callback && callback(_this);\n        }, null, this.crossOrigin);\n      }\n    },\n\n    /**\n     * Returns object representation of a pattern\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of a pattern instance\n     */\n    toObject: function toObject(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          source,\n          object; // callback\n\n      if (typeof this.source === 'function') {\n        source = String(this.source);\n      } // <img> element\n      else if (typeof this.source.src === 'string') {\n          source = this.source.src;\n        } // <canvas> element\n        else if (typeof this.source === 'object' && this.source.toDataURL) {\n            source = this.source.toDataURL();\n          }\n\n      object = {\n        type: 'pattern',\n        source: source,\n        repeat: this.repeat,\n        crossOrigin: this.crossOrigin,\n        offsetX: toFixed(this.offsetX, NUM_FRACTION_DIGITS),\n        offsetY: toFixed(this.offsetY, NUM_FRACTION_DIGITS),\n        patternTransform: this.patternTransform ? this.patternTransform.concat() : null\n      };\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n      return object;\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns SVG representation of a pattern\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a pattern\n     */\n    toSVG: function toSVG(object) {\n      var patternSource = typeof this.source === 'function' ? this.source() : this.source,\n          patternWidth = patternSource.width / object.width,\n          patternHeight = patternSource.height / object.height,\n          patternOffsetX = this.offsetX / object.width,\n          patternOffsetY = this.offsetY / object.height,\n          patternImgSrc = '';\n\n      if (this.repeat === 'repeat-x' || this.repeat === 'no-repeat') {\n        patternHeight = 1;\n\n        if (patternOffsetY) {\n          patternHeight += Math.abs(patternOffsetY);\n        }\n      }\n\n      if (this.repeat === 'repeat-y' || this.repeat === 'no-repeat') {\n        patternWidth = 1;\n\n        if (patternOffsetX) {\n          patternWidth += Math.abs(patternOffsetX);\n        }\n      }\n\n      if (patternSource.src) {\n        patternImgSrc = patternSource.src;\n      } else if (patternSource.toDataURL) {\n        patternImgSrc = patternSource.toDataURL();\n      }\n\n      return '<pattern id=\"SVGID_' + this.id + '\" x=\"' + patternOffsetX + '\" y=\"' + patternOffsetY + '\" width=\"' + patternWidth + '\" height=\"' + patternHeight + '\">\\n' + '<image x=\"0\" y=\"0\"' + ' width=\"' + patternSource.width + '\" height=\"' + patternSource.height + '\" xlink:href=\"' + patternImgSrc + '\"></image>\\n' + '</pattern>\\n';\n    },\n\n    /* _TO_SVG_END_ */\n    setOptions: function setOptions(options) {\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n    },\n\n    /**\n     * Returns an instance of CanvasPattern\n     * @param {CanvasRenderingContext2D} ctx Context to create pattern\n     * @return {CanvasPattern}\n     */\n    toLive: function toLive(ctx) {\n      var source = typeof this.source === 'function' ? this.source() : this.source; // if the image failed to load, return, and allow rest to continue loading\n\n      if (!source) {\n        return '';\n      } // if an image\n\n\n      if (typeof source.src !== 'undefined') {\n        if (!source.complete) {\n          return '';\n        }\n\n        if (source.naturalWidth === 0 || source.naturalHeight === 0) {\n          return '';\n        }\n      }\n\n      return ctx.createPattern(source, this.repeat);\n    }\n  });\n})();\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Shadow) {\n    fabric.warn('fabric.Shadow is already defined.');\n    return;\n  }\n  /**\n   * Shadow class\n   * @class fabric.Shadow\n   * @see {@link http://fabricjs.com/shadows|Shadow demo}\n   * @see {@link fabric.Shadow#initialize} for constructor definition\n   */\n\n\n  fabric.Shadow = fabric.util.createClass(\n  /** @lends fabric.Shadow.prototype */\n  {\n    /**\n     * Shadow color\n     * @type String\n     * @default\n     */\n    color: 'rgb(0,0,0)',\n\n    /**\n     * Shadow blur\n     * @type Number\n     */\n    blur: 0,\n\n    /**\n     * Shadow horizontal offset\n     * @type Number\n     * @default\n     */\n    offsetX: 0,\n\n    /**\n     * Shadow vertical offset\n     * @type Number\n     * @default\n     */\n    offsetY: 0,\n\n    /**\n     * Whether the shadow should affect stroke operations\n     * @type Boolean\n     * @default\n     */\n    affectStroke: false,\n\n    /**\n     * Indicates whether toObject should include default values\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * When `false`, the shadow will scale with the object.\n     * When `true`, the shadow's offsetX, offsetY, and blur will not be affected by the object's scale.\n     * default to false\n     * @type Boolean\n     * @default\n     */\n    nonScaling: false,\n\n    /**\n     * Constructor\n     * @param {Object|String} [options] Options object with any of color, blur, offsetX, offsetY properties or string (e.g. \"rgba(0,0,0,0.2) 2px 2px 10px\")\n     * @return {fabric.Shadow} thisArg\n     */\n    initialize: function initialize(options) {\n      if (typeof options === 'string') {\n        options = this._parseShadow(options);\n      }\n\n      for (var prop in options) {\n        this[prop] = options[prop];\n      }\n\n      this.id = fabric.Object.__uid++;\n    },\n\n    /**\n     * @private\n     * @param {String} shadow Shadow value to parse\n     * @return {Object} Shadow object with color, offsetX, offsetY and blur\n     */\n    _parseShadow: function _parseShadow(shadow) {\n      var shadowStr = shadow.trim(),\n          offsetsAndBlur = fabric.Shadow.reOffsetsAndBlur.exec(shadowStr) || [],\n          color = shadowStr.replace(fabric.Shadow.reOffsetsAndBlur, '') || 'rgb(0,0,0)';\n      return {\n        color: color.trim(),\n        offsetX: parseInt(offsetsAndBlur[1], 10) || 0,\n        offsetY: parseInt(offsetsAndBlur[2], 10) || 0,\n        blur: parseInt(offsetsAndBlur[3], 10) || 0\n      };\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @see http://www.w3.org/TR/css-text-decor-3/#text-shadow\n     * @return {String} Returns CSS3 text-shadow declaration\n     */\n    toString: function toString() {\n      return [this.offsetX, this.offsetY, this.blur, this.color].join('px ');\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns SVG representation of a shadow\n     * @param {fabric.Object} object\n     * @return {String} SVG representation of a shadow\n     */\n    toSVG: function toSVG(object) {\n      var fBoxX = 40,\n          fBoxY = 40,\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          offset = fabric.util.rotateVector({\n        x: this.offsetX,\n        y: this.offsetY\n      }, fabric.util.degreesToRadians(-object.angle)),\n          BLUR_BOX = 20,\n          color = new fabric.Color(this.color);\n\n      if (object.width && object.height) {\n        //http://www.w3.org/TR/SVG/filters.html#FilterEffectsRegion\n        // we add some extra space to filter box to contain the blur ( 20 )\n        fBoxX = toFixed((Math.abs(offset.x) + this.blur) / object.width, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n        fBoxY = toFixed((Math.abs(offset.y) + this.blur) / object.height, NUM_FRACTION_DIGITS) * 100 + BLUR_BOX;\n      }\n\n      if (object.flipX) {\n        offset.x *= -1;\n      }\n\n      if (object.flipY) {\n        offset.y *= -1;\n      }\n\n      return '<filter id=\"SVGID_' + this.id + '\" y=\"-' + fBoxY + '%\" height=\"' + (100 + 2 * fBoxY) + '%\" ' + 'x=\"-' + fBoxX + '%\" width=\"' + (100 + 2 * fBoxX) + '%\" ' + '>\\n' + '\\t<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"' + toFixed(this.blur ? this.blur / 2 : 0, NUM_FRACTION_DIGITS) + '\"></feGaussianBlur>\\n' + '\\t<feOffset dx=\"' + toFixed(offset.x, NUM_FRACTION_DIGITS) + '\" dy=\"' + toFixed(offset.y, NUM_FRACTION_DIGITS) + '\" result=\"oBlur\" ></feOffset>\\n' + '\\t<feFlood flood-color=\"' + color.toRgb() + '\" flood-opacity=\"' + color.getAlpha() + '\"/>\\n' + '\\t<feComposite in2=\"oBlur\" operator=\"in\" />\\n' + '\\t<feMerge>\\n' + '\\t\\t<feMergeNode></feMergeNode>\\n' + '\\t\\t<feMergeNode in=\"SourceGraphic\"></feMergeNode>\\n' + '\\t</feMerge>\\n' + '</filter>\\n';\n    },\n\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns object representation of a shadow\n     * @return {Object} Object representation of a shadow instance\n     */\n    toObject: function toObject() {\n      if (this.includeDefaultValues) {\n        return {\n          color: this.color,\n          blur: this.blur,\n          offsetX: this.offsetX,\n          offsetY: this.offsetY,\n          affectStroke: this.affectStroke,\n          nonScaling: this.nonScaling\n        };\n      }\n\n      var obj = {},\n          proto = fabric.Shadow.prototype;\n      ['color', 'blur', 'offsetX', 'offsetY', 'affectStroke', 'nonScaling'].forEach(function (prop) {\n        if (this[prop] !== proto[prop]) {\n          obj[prop] = this[prop];\n        }\n      }, this);\n      return obj;\n    }\n  });\n  /**\n   * Regex matching shadow offsetX, offsetY and blur (ex: \"2px 2px 10px rgba(0,0,0,0.2)\", \"rgb(0,255,0) 2px 2px\")\n   * @static\n   * @field\n   * @memberOf fabric.Shadow\n   */\n  // eslint-disable-next-line max-len\n\n  fabric.Shadow.reOffsetsAndBlur = /(?:\\s|^)(-?\\d+(?:px)?(?:\\s?|$))?(-?\\d+(?:px)?(?:\\s?|$))?(\\d+(?:px)?)?(?:\\s?|$)(?:$|\\s)/;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function () {\n  'use strict';\n\n  if (fabric.StaticCanvas) {\n    fabric.warn('fabric.StaticCanvas is already defined.');\n    return;\n  } // aliases for faster resolution\n\n\n  var extend = fabric.util.object.extend,\n      getElementOffset = fabric.util.getElementOffset,\n      removeFromArray = fabric.util.removeFromArray,\n      toFixed = fabric.util.toFixed,\n      transformPoint = fabric.util.transformPoint,\n      invertTransform = fabric.util.invertTransform,\n      getNodeCanvas = fabric.util.getNodeCanvas,\n      createCanvasElement = fabric.util.createCanvasElement,\n      CANVAS_INIT_ERROR = new Error('Could not initialize `canvas` element');\n  /**\n   * Static canvas class\n   * @class fabric.StaticCanvas\n   * @mixes fabric.Collection\n   * @mixes fabric.Observable\n   * @see {@link http://fabricjs.com/static_canvas|StaticCanvas demo}\n   * @see {@link fabric.StaticCanvas#initialize} for constructor definition\n   * @fires before:render\n   * @fires after:render\n   * @fires canvas:cleared\n   * @fires object:added\n   * @fires object:removed\n   */\n\n  fabric.StaticCanvas = fabric.util.createClass(fabric.CommonMethods,\n  /** @lends fabric.StaticCanvas.prototype */\n  {\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function initialize(el, options) {\n      options || (options = {});\n      this.renderAndResetBound = this.renderAndReset.bind(this);\n      this.requestRenderAllBound = this.requestRenderAll.bind(this);\n\n      this._initStatic(el, options);\n    },\n\n    /**\n     * Background color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundColor}.\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    backgroundColor: '',\n\n    /**\n     * Background image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setBackgroundImage}.\n     * <b>Backwards incompatibility note:</b> The \"backgroundImageOpacity\"\n     * and \"backgroundImageStretch\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#opacity}, {@link fabric.Image#width} and {@link fabric.Image#height}.\n     * since 2.4.0 image caching is active, please when putting an image as background, add to the\n     * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\n     * vale. As an alternative you can disable image objectCaching\n     * @type fabric.Image\n     * @default\n     */\n    backgroundImage: null,\n\n    /**\n     * Overlay color of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayColor}\n     * @since 1.3.9\n     * @type {(String|fabric.Pattern)}\n     * @default\n     */\n    overlayColor: '',\n\n    /**\n     * Overlay image of canvas instance.\n     * Should be set via {@link fabric.StaticCanvas#setOverlayImage}.\n     * <b>Backwards incompatibility note:</b> The \"overlayImageLeft\"\n     * and \"overlayImageTop\" properties are deprecated since 1.3.9.\n     * Use {@link fabric.Image#left} and {@link fabric.Image#top}.\n     * since 2.4.0 image caching is active, please when putting an image as overlay, add to the\n     * canvas property a reference to the canvas it is on. Otherwise the image cannot detect the zoom\n     * vale. As an alternative you can disable image objectCaching\n     * @type fabric.Image\n     * @default\n     */\n    overlayImage: null,\n\n    /**\n     * Indicates whether toObject/toDatalessObject should include default values\n     * if set to false, takes precedence over the object value.\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Indicates whether objects' state should be saved\n     * @type Boolean\n     * @default\n     */\n    stateful: false,\n\n    /**\n     * Indicates whether {@link fabric.Collection.add}, {@link fabric.Collection.insertAt} and {@link fabric.Collection.remove},\n     * {@link fabric.StaticCanvas.moveTo}, {@link fabric.StaticCanvas.clear} and many more, should also re-render canvas.\n     * Disabling this option will not give a performance boost when adding/removing a lot of objects to/from canvas at once\n     * since the renders are quequed and executed one per frame.\n     * Disabling is suggested anyway and managing the renders of the app manually is not a big effort ( canvas.requestRenderAll() )\n     * Left default to true to do not break documentation and old app, fiddles.\n     * @type Boolean\n     * @default\n     */\n    renderOnAddRemove: true,\n\n    /**\n     * Function that determines clipping of entire canvas area\n     * Being passed context as first argument.\n     * If you are using code minification, ctx argument can be minified/manglied you should use\n     * as a workaround `var ctx = arguments[0];` in the function;\n     * See clipping canvas area in {@link https://github.com/kangax/fabric.js/wiki/FAQ}\n     * @deprecated since 2.0.0\n     * @type Function\n     * @default\n     */\n    clipTo: null,\n\n    /**\n     * Indicates whether object controls (borders/controls) are rendered above overlay image\n     * @type Boolean\n     * @default\n     */\n    controlsAboveOverlay: false,\n\n    /**\n     * Indicates whether the browser can be scrolled when using a touchscreen and dragging on the canvas\n     * @type Boolean\n     * @default\n     */\n    allowTouchScrolling: false,\n\n    /**\n     * Indicates whether this canvas will use image smoothing, this is on by default in browsers\n     * @type Boolean\n     * @default\n     */\n    imageSmoothingEnabled: true,\n\n    /**\n     * The transformation (in the format of Canvas transform) which focuses the viewport\n     * @type Array\n     * @default\n     */\n    viewportTransform: fabric.iMatrix.concat(),\n\n    /**\n     * if set to false background image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    backgroundVpt: true,\n\n    /**\n     * if set to false overlya image is not affected by viewport transform\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    overlayVpt: true,\n\n    /**\n     * Callback; invoked right before object is about to be scaled/rotated\n     * @deprecated since 2.3.0\n     * Use before:transform event\n     */\n    onBeforeScaleRotate: function onBeforeScaleRotate() {\n      /* NOOP */\n    },\n\n    /**\n     * When true, canvas is scaled by devicePixelRatio for better rendering on retina screens\n     * @type Boolean\n     * @default\n     */\n    enableRetinaScaling: true,\n\n    /**\n     * Describe canvas element extension over design\n     * properties are tl,tr,bl,br.\n     * if canvas is not zoomed/panned those points are the four corner of canvas\n     * if canvas is viewportTransformed you those points indicate the extension\n     * of canvas element in plain untrasformed coordinates\n     * The coordinates get updated with @method calcViewportBoundaries.\n     * @memberOf fabric.StaticCanvas.prototype\n     */\n    vptCoords: {},\n\n    /**\n     * Based on vptCoords and object.aCoords, skip rendering of objects that\n     * are not included in current viewport.\n     * May greatly help in applications with crowded canvas and use of zoom/pan\n     * If One of the corner of the bounding box of the object is on the canvas\n     * the objects get rendered.\n     * @memberOf fabric.StaticCanvas.prototype\n     * @type Boolean\n     * @default\n     */\n    skipOffscreen: true,\n\n    /**\n     * a fabricObject that, without stroke define a clipping area with their shape. filled in black\n     * the clipPath object gets used when the canvas has rendered, and the context is placed in the\n     * top left corner of the canvas.\n     * clipPath will clip away controls, if you do not want this to happen use controlsAboveOverlay = true\n     * @type fabric.Object\n     */\n    clipPath: undefined,\n\n    /**\n     * @private\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     */\n    _initStatic: function _initStatic(el, options) {\n      var cb = this.requestRenderAllBound;\n      this._objects = [];\n\n      this._createLowerCanvas(el);\n\n      this._initOptions(options);\n\n      this._setImageSmoothing(); // only initialize retina scaling once\n\n\n      if (!this.interactive) {\n        this._initRetinaScaling();\n      }\n\n      if (options.overlayImage) {\n        this.setOverlayImage(options.overlayImage, cb);\n      }\n\n      if (options.backgroundImage) {\n        this.setBackgroundImage(options.backgroundImage, cb);\n      }\n\n      if (options.backgroundColor) {\n        this.setBackgroundColor(options.backgroundColor, cb);\n      }\n\n      if (options.overlayColor) {\n        this.setOverlayColor(options.overlayColor, cb);\n      }\n\n      this.calcOffset();\n    },\n\n    /**\n     * @private\n     */\n    _isRetinaScaling: function _isRetinaScaling() {\n      return fabric.devicePixelRatio !== 1 && this.enableRetinaScaling;\n    },\n\n    /**\n     * @private\n     * @return {Number} retinaScaling if applied, otherwise 1;\n     */\n    getRetinaScaling: function getRetinaScaling() {\n      return this._isRetinaScaling() ? fabric.devicePixelRatio : 1;\n    },\n\n    /**\n     * @private\n     */\n    _initRetinaScaling: function _initRetinaScaling() {\n      if (!this._isRetinaScaling()) {\n        return;\n      }\n\n      this.lowerCanvasEl.setAttribute('width', this.width * fabric.devicePixelRatio);\n      this.lowerCanvasEl.setAttribute('height', this.height * fabric.devicePixelRatio);\n      this.contextContainer.scale(fabric.devicePixelRatio, fabric.devicePixelRatio);\n    },\n\n    /**\n     * Calculates canvas element offset relative to the document\n     * This method is also attached as \"resize\" event handler of window\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    calcOffset: function calcOffset() {\n      this._offset = getElementOffset(this.lowerCanvasEl);\n      return this;\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayImage|overlay image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set overlay to\n     * @param {Function} callback callback to invoke when image is loaded and set as an overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|overlay image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/MnzHT/|jsFiddle demo}\n     * @example <caption>Normal overlayImage with left/top = 0</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage with different properties</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched overlayImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/jail_cell_bars.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setOverlayImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched overlayImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position overlayImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>overlayImage loaded from cross-origin</caption>\n     * canvas.setOverlayImage('http://fabricjs.com/assets/jail_cell_bars.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    setOverlayImage: function setOverlayImage(image, callback, options) {\n      return this.__setBgOverlayImage('overlayImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundImage|background image} for this canvas\n     * @param {(fabric.Image|String)} image fabric.Image instance or URL of an image to set background to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|background image}.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/djnr8o7a/28/|jsFiddle demo}\n     * @example <caption>Normal backgroundImage with left/top = 0</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage with different properties</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>Stretched backgroundImage #1 - width/height correspond to canvas width/height</caption>\n     * fabric.Image.fromURL('http://fabricjs.com/assets/honey_im_subtle.png', function(img) {\n     *    img.set({width: canvas.width, height: canvas.height, originX: 'left', originY: 'top'});\n     *    canvas.setBackgroundImage(img, canvas.renderAll.bind(canvas));\n     * });\n     * @example <caption>Stretched backgroundImage #2 - width/height correspond to canvas width/height</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   width: canvas.width,\n     *   height: canvas.height,\n     *   // Needed to position backgroundImage at 0/0\n     *   originX: 'left',\n     *   originY: 'top'\n     * });\n     * @example <caption>backgroundImage loaded from cross-origin</caption>\n     * canvas.setBackgroundImage('http://fabricjs.com/assets/honey_im_subtle.png', canvas.renderAll.bind(canvas), {\n     *   opacity: 0.5,\n     *   angle: 45,\n     *   left: 400,\n     *   top: 400,\n     *   originX: 'left',\n     *   originY: 'top',\n     *   crossOrigin: 'anonymous'\n     * });\n     */\n    // TODO: fix stretched examples\n    setBackgroundImage: function setBackgroundImage(image, callback, options) {\n      return this.__setBgOverlayImage('backgroundImage', image, callback, options);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#overlayColor|foreground color} for this canvas\n     * @param {(String|fabric.Pattern)} overlayColor Color or pattern to set foreground color to\n     * @param {Function} callback Callback to invoke when foreground color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/pB55h/|jsFiddle demo}\n     * @example <caption>Normal overlayColor - color value</caption>\n     * canvas.setOverlayColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as overlayColor with repeat and offset</caption>\n     * canvas.setOverlayColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setOverlayColor: function setOverlayColor(overlayColor, callback) {\n      return this.__setBgOverlayColor('overlayColor', overlayColor, callback);\n    },\n\n    /**\n     * Sets {@link fabric.StaticCanvas#backgroundColor|background color} for this canvas\n     * @param {(String|fabric.Pattern)} backgroundColor Color or pattern to set background color to\n     * @param {Function} callback Callback to invoke when background color is set\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/hXzvk/|jsFiddle demo}\n     * @example <caption>Normal backgroundColor - color value</caption>\n     * canvas.setBackgroundColor('rgba(255, 73, 64, 0.6)', canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png'\n     * }, canvas.renderAll.bind(canvas));\n     * @example <caption>fabric.Pattern used as backgroundColor with repeat and offset</caption>\n     * canvas.setBackgroundColor({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat',\n     *   offsetX: 200,\n     *   offsetY: 100\n     * }, canvas.renderAll.bind(canvas));\n     */\n    setBackgroundColor: function setBackgroundColor(backgroundColor, callback) {\n      return this.__setBgOverlayColor('backgroundColor', backgroundColor, callback);\n    },\n\n    /**\n     * @private\n     * @see {@link http://www.whatwg.org/specs/web-apps/current-work/multipage/the-canvas-element.html#dom-context-2d-imagesmoothingenabled|WhatWG Canvas Standard}\n     */\n    _setImageSmoothing: function _setImageSmoothing() {\n      var ctx = this.getContext();\n      ctx.imageSmoothingEnabled = ctx.imageSmoothingEnabled || ctx.webkitImageSmoothingEnabled || ctx.mozImageSmoothingEnabled || ctx.msImageSmoothingEnabled || ctx.oImageSmoothingEnabled;\n      ctx.imageSmoothingEnabled = this.imageSmoothingEnabled;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundImage|backgroundImage}\n     * or {@link fabric.StaticCanvas#overlayImage|overlayImage})\n     * @param {(fabric.Image|String|null)} image fabric.Image instance, URL of an image or null to set background or overlay to\n     * @param {Function} callback Callback to invoke when image is loaded and set as background or overlay\n     * @param {Object} [options] Optional options to set for the {@link fabric.Image|image}.\n     */\n    __setBgOverlayImage: function __setBgOverlayImage(property, image, callback, options) {\n      if (typeof image === 'string') {\n        fabric.util.loadImage(image, function (img) {\n          if (img) {\n            var instance = new fabric.Image(img, options);\n            this[property] = instance;\n            instance.canvas = this;\n          }\n\n          callback && callback(img);\n        }, this, options && options.crossOrigin);\n      } else {\n        options && image.setOptions(options);\n        this[property] = image;\n        image && (image.canvas = this);\n        callback && callback(image);\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {String} property Property to set ({@link fabric.StaticCanvas#backgroundColor|backgroundColor}\n     * or {@link fabric.StaticCanvas#overlayColor|overlayColor})\n     * @param {(Object|String|null)} color Object with pattern information, color value or null\n     * @param {Function} [callback] Callback is invoked when color is set\n     */\n    __setBgOverlayColor: function __setBgOverlayColor(property, color, callback) {\n      this[property] = color;\n\n      this._initGradient(color, property);\n\n      this._initPattern(color, property, callback);\n\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _createCanvasElement: function _createCanvasElement() {\n      var element = createCanvasElement();\n\n      if (!element) {\n        throw CANVAS_INIT_ERROR;\n      }\n\n      if (!element.style) {\n        element.style = {};\n      }\n\n      if (typeof element.getContext === 'undefined') {\n        throw CANVAS_INIT_ERROR;\n      }\n\n      return element;\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initOptions: function _initOptions(options) {\n      var lowerCanvasEl = this.lowerCanvasEl;\n\n      this._setOptions(options);\n\n      this.width = this.width || parseInt(lowerCanvasEl.width, 10) || 0;\n      this.height = this.height || parseInt(lowerCanvasEl.height, 10) || 0;\n\n      if (!this.lowerCanvasEl.style) {\n        return;\n      }\n\n      lowerCanvasEl.width = this.width;\n      lowerCanvasEl.height = this.height;\n      lowerCanvasEl.style.width = this.width + 'px';\n      lowerCanvasEl.style.height = this.height + 'px';\n      this.viewportTransform = this.viewportTransform.slice();\n    },\n\n    /**\n     * Creates a bottom canvas\n     * @private\n     * @param {HTMLElement} [canvasEl]\n     */\n    _createLowerCanvas: function _createLowerCanvas(canvasEl) {\n      // canvasEl === 'HTMLCanvasElement' does not work on jsdom/node\n      if (canvasEl && canvasEl.getContext) {\n        this.lowerCanvasEl = canvasEl;\n      } else {\n        this.lowerCanvasEl = fabric.util.getById(canvasEl) || this._createCanvasElement();\n      }\n\n      fabric.util.addClass(this.lowerCanvasEl, 'lower-canvas');\n\n      if (this.interactive) {\n        this._applyCanvasStyle(this.lowerCanvasEl);\n      }\n\n      this.contextContainer = this.lowerCanvasEl.getContext('2d');\n    },\n\n    /**\n     * Returns canvas width (in px)\n     * @return {Number}\n     */\n    getWidth: function getWidth() {\n      return this.width;\n    },\n\n    /**\n     * Returns canvas height (in px)\n     * @return {Number}\n     */\n    getHeight: function getHeight() {\n      return this.height;\n    },\n\n    /**\n     * Sets width of this canvas instance\n     * @param {Number|String} value                         Value to set width to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setWidth: function setWidth(value, options) {\n      return this.setDimensions({\n        width: value\n      }, options);\n    },\n\n    /**\n     * Sets height of this canvas instance\n     * @param {Number|String} value                         Value to set height to\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setHeight: function setHeight(value, options) {\n      return this.setDimensions({\n        height: value\n      }, options);\n    },\n\n    /**\n     * Sets dimensions (width, height) of this canvas instance. when options.cssOnly flag active you should also supply the unit of measure (px/%/em)\n     * @param {Object}        dimensions                    Object with width/height properties\n     * @param {Number|String} [dimensions.width]            Width of canvas element\n     * @param {Number|String} [dimensions.height]           Height of canvas element\n     * @param {Object}        [options]                     Options object\n     * @param {Boolean}       [options.backstoreOnly=false] Set the given dimensions only as canvas backstore dimensions\n     * @param {Boolean}       [options.cssOnly=false]       Set the given dimensions only as css dimensions\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setDimensions: function setDimensions(dimensions, options) {\n      var cssValue;\n      options = options || {};\n\n      for (var prop in dimensions) {\n        cssValue = dimensions[prop];\n\n        if (!options.cssOnly) {\n          this._setBackstoreDimension(prop, dimensions[prop]);\n\n          cssValue += 'px';\n          this.hasLostContext = true;\n        }\n\n        if (!options.backstoreOnly) {\n          this._setCssDimension(prop, cssValue);\n        }\n      }\n\n      if (this._isCurrentlyDrawing) {\n        this.freeDrawingBrush && this.freeDrawingBrush._setBrushStyles();\n      }\n\n      this._initRetinaScaling();\n\n      this._setImageSmoothing();\n\n      this.calcOffset();\n\n      if (!options.cssOnly) {\n        this.requestRenderAll();\n      }\n\n      return this;\n    },\n\n    /**\n     * Helper for setting width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {Number} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setBackstoreDimension: function _setBackstoreDimension(prop, value) {\n      this.lowerCanvasEl[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl[prop] = value;\n      }\n\n      if (this.cacheCanvasEl) {\n        this.cacheCanvasEl[prop] = value;\n      }\n\n      this[prop] = value;\n      return this;\n    },\n\n    /**\n     * Helper for setting css width/height\n     * @private\n     * @param {String} prop property (width|height)\n     * @param {String} value value to set property to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    _setCssDimension: function _setCssDimension(prop, value) {\n      this.lowerCanvasEl.style[prop] = value;\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.style[prop] = value;\n      }\n\n      if (this.wrapperEl) {\n        this.wrapperEl.style[prop] = value;\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns canvas zoom level\n     * @return {Number}\n     */\n    getZoom: function getZoom() {\n      return this.viewportTransform[0];\n    },\n\n    /**\n     * Sets viewport transform of this canvas instance\n     * @param {Array} vpt the transform in the form of context.transform\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setViewportTransform: function setViewportTransform(vpt) {\n      var activeObject = this._activeObject,\n          object,\n          ignoreVpt = false,\n          skipAbsolute = true,\n          i,\n          len;\n      this.viewportTransform = vpt;\n\n      for (i = 0, len = this._objects.length; i < len; i++) {\n        object = this._objects[i];\n        object.group || object.setCoords(ignoreVpt, skipAbsolute);\n      }\n\n      if (activeObject && activeObject.type === 'activeSelection') {\n        activeObject.setCoords(ignoreVpt, skipAbsolute);\n      }\n\n      this.calcViewportBoundaries();\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Sets zoom level of this canvas instance, zoom centered around point\n     * @param {fabric.Point} point to zoom with respect to\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    zoomToPoint: function zoomToPoint(point, value) {\n      // TODO: just change the scale, preserve other transformations\n      var before = point,\n          vpt = this.viewportTransform.slice(0);\n      point = transformPoint(point, invertTransform(this.viewportTransform));\n      vpt[0] = value;\n      vpt[3] = value;\n      var after = transformPoint(point, vpt);\n      vpt[4] += before.x - after.x;\n      vpt[5] += before.y - after.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Sets zoom level of this canvas instance\n     * @param {Number} value to set zoom to, less than 1 zooms out\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    setZoom: function setZoom(value) {\n      this.zoomToPoint(new fabric.Point(0, 0), value);\n      return this;\n    },\n\n    /**\n     * Pan viewport so as to place point at top left corner of canvas\n     * @param {fabric.Point} point to move to\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    absolutePan: function absolutePan(point) {\n      var vpt = this.viewportTransform.slice(0);\n      vpt[4] = -point.x;\n      vpt[5] = -point.y;\n      return this.setViewportTransform(vpt);\n    },\n\n    /**\n     * Pans viewpoint relatively\n     * @param {fabric.Point} point (position vector) to move by\n     * @return {fabric.Canvas} instance\n     * @chainable true\n     */\n    relativePan: function relativePan(point) {\n      return this.absolutePan(new fabric.Point(-point.x - this.viewportTransform[4], -point.y - this.viewportTransform[5]));\n    },\n\n    /**\n     * Returns &lt;canvas> element corresponding to this instance\n     * @return {HTMLCanvasElement}\n     */\n    getElement: function getElement() {\n      return this.lowerCanvasEl;\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was added\n     */\n    _onObjectAdded: function _onObjectAdded(obj) {\n      this.stateful && obj.setupState();\n\n      obj._set('canvas', this);\n\n      obj.setCoords();\n      this.fire('object:added', {\n        target: obj\n      });\n      obj.fire('added');\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function _onObjectRemoved(obj) {\n      this.fire('object:removed', {\n        target: obj\n      });\n      obj.fire('removed');\n      delete obj.canvas;\n    },\n\n    /**\n     * Clears specified context of canvas element\n     * @param {CanvasRenderingContext2D} ctx Context to clear\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clearContext: function clearContext(ctx) {\n      ctx.clearRect(0, 0, this.width, this.height);\n      return this;\n    },\n\n    /**\n     * Returns context of canvas where objects are drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getContext: function getContext() {\n      return this.contextContainer;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function clear() {\n      this._objects.length = 0;\n      this.backgroundImage = null;\n      this.overlayImage = null;\n      this.backgroundColor = '';\n      this.overlayColor = '';\n\n      if (this._hasITextHandlers) {\n        this.off('mouse:up', this._mouseUpITextHandler);\n        this._iTextInstances = null;\n        this._hasITextHandlers = false;\n      }\n\n      this.clearContext(this.contextContainer);\n      this.fire('canvas:cleared');\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Renders the canvas\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function renderAll() {\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._objects);\n      return this;\n    },\n\n    /**\n     * Function created to be instance bound at initialization\n     * used in requestAnimationFrame rendering\n     * Let the fabricJS call it. If you call it manually you could have more\n     * animationFrame stacking on to of each other\n     * for an imperative rendering, use canvas.renderAll\n     * @private\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAndReset: function renderAndReset() {\n      this.isRendering = 0;\n      this.renderAll();\n    },\n\n    /**\n     * Append a renderAll request to next animation frame.\n     * unless one is already in progress, in that case nothing is done\n     * a boolean flag will avoid appending more.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    requestRenderAll: function requestRenderAll() {\n      if (!this.isRendering) {\n        this.isRendering = fabric.util.requestAnimFrame(this.renderAndResetBound);\n      }\n\n      return this;\n    },\n\n    /**\n     * Calculate the position of the 4 corner of canvas with current viewportTransform.\n     * helps to determinate when an object is in the current rendering viewport using\n     * object absolute coordinates ( aCoords )\n     * @return {Object} points.tl\n     * @chainable\n     */\n    calcViewportBoundaries: function calcViewportBoundaries() {\n      var points = {},\n          width = this.width,\n          height = this.height,\n          iVpt = invertTransform(this.viewportTransform);\n      points.tl = transformPoint({\n        x: 0,\n        y: 0\n      }, iVpt);\n      points.br = transformPoint({\n        x: width,\n        y: height\n      }, iVpt);\n      points.tr = new fabric.Point(points.br.x, points.tl.y);\n      points.bl = new fabric.Point(points.tl.x, points.br.y);\n      this.vptCoords = points;\n      return points;\n    },\n    cancelRequestedRender: function cancelRequestedRender() {\n      if (this.isRendering) {\n        fabric.util.cancelAnimFrame(this.isRendering);\n        this.isRendering = 0;\n      }\n    },\n\n    /**\n     * Renders background, objects, overlay and controls.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {Array} objects to render\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderCanvas: function renderCanvas(ctx, objects) {\n      var v = this.viewportTransform,\n          path = this.clipPath;\n      this.cancelRequestedRender();\n      this.calcViewportBoundaries();\n      this.clearContext(ctx);\n      this.fire('before:render', {\n        ctx: ctx\n      });\n\n      if (this.clipTo) {\n        fabric.util.clipContext(this, ctx);\n      }\n\n      this._renderBackground(ctx);\n\n      ctx.save(); //apply viewport transform once for all rendering process\n\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n\n      this._renderObjects(ctx, objects);\n\n      ctx.restore();\n\n      if (!this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n\n      if (this.clipTo) {\n        ctx.restore();\n      }\n\n      if (path) {\n        path.canvas = this; // needed to setup a couple of variables\n\n        path.shouldCache();\n        path._transformDone = true;\n        path.renderCache({\n          forClipping: true\n        });\n        this.drawClipPathOnCanvas(ctx);\n      }\n\n      this._renderOverlay(ctx);\n\n      if (this.controlsAboveOverlay && this.interactive) {\n        this.drawControls(ctx);\n      }\n\n      this.fire('after:render', {\n        ctx: ctx\n      });\n    },\n\n    /**\n     * Paint the cached clipPath on the lowerCanvasEl\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawClipPathOnCanvas: function drawClipPathOnCanvas(ctx) {\n      var v = this.viewportTransform,\n          path = this.clipPath;\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]); // DEBUG: uncomment this line, comment the following\n      // ctx.globalAlpha = 0.4;\n\n      ctx.globalCompositeOperation = 'destination-in';\n      path.transform(ctx);\n      ctx.scale(1 / path.zoomX, 1 / path.zoomY);\n      ctx.drawImage(path._cacheCanvas, -path.cacheTranslationX, -path.cacheTranslationY);\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Array} objects to render\n     */\n    _renderObjects: function _renderObjects(ctx, objects) {\n      var i, len;\n\n      for (i = 0, len = objects.length; i < len; ++i) {\n        objects[i] && objects[i].render(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {string} property 'background' or 'overlay'\n     */\n    _renderBackgroundOrOverlay: function _renderBackgroundOrOverlay(ctx, property) {\n      var fill = this[property + 'Color'],\n          object = this[property + 'Image'],\n          v = this.viewportTransform,\n          needsVpt = this[property + 'Vpt'];\n\n      if (!fill && !object) {\n        return;\n      }\n\n      if (fill) {\n        ctx.save();\n        ctx.beginPath();\n        ctx.moveTo(0, 0);\n        ctx.lineTo(this.width, 0);\n        ctx.lineTo(this.width, this.height);\n        ctx.lineTo(0, this.height);\n        ctx.closePath();\n        ctx.fillStyle = fill.toLive ? fill.toLive(ctx, this) : fill;\n\n        if (needsVpt) {\n          ctx.transform(v[0], v[1], v[2], v[3], v[4] + (fill.offsetX || 0), v[5] + (fill.offsetY || 0));\n        }\n\n        var m = fill.gradientTransform || fill.patternTransform;\n        m && ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n        ctx.fill();\n        ctx.restore();\n      }\n\n      if (object) {\n        ctx.save();\n\n        if (needsVpt) {\n          ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n        }\n\n        object.render(ctx);\n        ctx.restore();\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function _renderBackground(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'background');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderOverlay: function _renderOverlay(ctx) {\n      this._renderBackgroundOrOverlay(ctx, 'overlay');\n    },\n\n    /**\n     * Returns coordinates of a center of canvas.\n     * Returned value is an object with top and left properties\n     * @return {Object} object with \"top\" and \"left\" number values\n     */\n    getCenter: function getCenter() {\n      return {\n        top: this.height / 2,\n        left: this.width / 2\n      };\n    },\n\n    /**\n     * Centers object horizontally in the canvas\n     * @param {fabric.Object} object Object to center horizontally\n     * @return {fabric.Canvas} thisArg\n     */\n    centerObjectH: function centerObjectH(object) {\n      return this._centerObject(object, new fabric.Point(this.getCenter().left, object.getCenterPoint().y));\n    },\n\n    /**\n     * Centers object vertically in the canvas\n     * @param {fabric.Object} object Object to center vertically\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObjectV: function centerObjectV(object) {\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, this.getCenter().top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the canvas\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    centerObject: function centerObject(object) {\n      var center = this.getCenter();\n      return this._centerObject(object, new fabric.Point(center.left, center.top));\n    },\n\n    /**\n     * Centers object vertically and horizontally in the viewport\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObject: function viewportCenterObject(object) {\n      var vpCenter = this.getVpCenter();\n      return this._centerObject(object, vpCenter);\n    },\n\n    /**\n     * Centers object horizontally in the viewport, object.top is unchanged\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectH: function viewportCenterObjectH(object) {\n      var vpCenter = this.getVpCenter();\n\n      this._centerObject(object, new fabric.Point(vpCenter.x, object.getCenterPoint().y));\n\n      return this;\n    },\n\n    /**\n     * Centers object Vertically in the viewport, object.top is unchanged\n     * @param {fabric.Object} object Object to center vertically and horizontally\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    viewportCenterObjectV: function viewportCenterObjectV(object) {\n      var vpCenter = this.getVpCenter();\n      return this._centerObject(object, new fabric.Point(object.getCenterPoint().x, vpCenter.y));\n    },\n\n    /**\n     * Calculate the point in canvas that correspond to the center of actual viewport.\n     * @return {fabric.Point} vpCenter, viewport center\n     * @chainable\n     */\n    getVpCenter: function getVpCenter() {\n      var center = this.getCenter(),\n          iVpt = invertTransform(this.viewportTransform);\n      return transformPoint({\n        x: center.left,\n        y: center.top\n      }, iVpt);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} object Object to center\n     * @param {fabric.Point} center Center point\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    _centerObject: function _centerObject(object, center) {\n      object.setPositionByOrigin(center, 'center', 'center');\n      object.setCoords();\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Returs dataless JSON representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {String} json string\n     */\n    toDatalessJSON: function toDatalessJSON(propertiesToInclude) {\n      return this.toDatalessObject(propertiesToInclude);\n    },\n\n    /**\n     * Returns object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function toObject(propertiesToInclude) {\n      return this._toObjectMethod('toObject', propertiesToInclude);\n    },\n\n    /**\n     * Returns dataless object representation of canvas\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function toDatalessObject(propertiesToInclude) {\n      return this._toObjectMethod('toDatalessObject', propertiesToInclude);\n    },\n\n    /**\n     * @private\n     */\n    _toObjectMethod: function _toObjectMethod(methodName, propertiesToInclude) {\n      var clipPath = this.clipPath,\n          data = {\n        version: fabric.version,\n        objects: this._toObjects(methodName, propertiesToInclude)\n      };\n\n      if (clipPath) {\n        data.clipPath = this._toObject(this.clipPath, methodName, propertiesToInclude);\n      }\n\n      extend(data, this.__serializeBgOverlay(methodName, propertiesToInclude));\n      fabric.util.populateWithProperties(this, data, propertiesToInclude);\n      return data;\n    },\n\n    /**\n     * @private\n     */\n    _toObjects: function _toObjects(methodName, propertiesToInclude) {\n      return this._objects.filter(function (object) {\n        return !object.excludeFromExport;\n      }).map(function (instance) {\n        return this._toObject(instance, methodName, propertiesToInclude);\n      }, this);\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function _toObject(instance, methodName, propertiesToInclude) {\n      var originalValue;\n\n      if (!this.includeDefaultValues) {\n        originalValue = instance.includeDefaultValues;\n        instance.includeDefaultValues = false;\n      }\n\n      var object = instance[methodName](propertiesToInclude);\n\n      if (!this.includeDefaultValues) {\n        instance.includeDefaultValues = originalValue;\n      }\n\n      return object;\n    },\n\n    /**\n     * @private\n     */\n    __serializeBgOverlay: function __serializeBgOverlay(methodName, propertiesToInclude) {\n      var data = {},\n          bgImage = this.backgroundImage,\n          overlay = this.overlayImage;\n\n      if (this.backgroundColor) {\n        data.background = this.backgroundColor.toObject ? this.backgroundColor.toObject(propertiesToInclude) : this.backgroundColor;\n      }\n\n      if (this.overlayColor) {\n        data.overlay = this.overlayColor.toObject ? this.overlayColor.toObject(propertiesToInclude) : this.overlayColor;\n      }\n\n      if (bgImage && !bgImage.excludeFromExport) {\n        data.backgroundImage = this._toObject(bgImage, methodName, propertiesToInclude);\n      }\n\n      if (overlay && !overlay.excludeFromExport) {\n        data.overlayImage = this._toObject(overlay, methodName, propertiesToInclude);\n      }\n\n      return data;\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * When true, getSvgTransform() will apply the StaticCanvas.viewportTransform to the SVG transformation. When true,\n     * a zoomed canvas will then produce zoomed SVG output.\n     * @type Boolean\n     * @default\n     */\n    svgViewportTransformation: true,\n\n    /**\n     * Returns SVG representation of canvas\n     * @function\n     * @param {Object} [options] Options object for SVG output\n     * @param {Boolean} [options.suppressPreamble=false] If true xml tag is not included\n     * @param {Object} [options.viewBox] SVG viewbox object\n     * @param {Number} [options.viewBox.x] x-cooridnate of viewbox\n     * @param {Number} [options.viewBox.y] y-coordinate of viewbox\n     * @param {Number} [options.viewBox.width] Width of viewbox\n     * @param {Number} [options.viewBox.height] Height of viewbox\n     * @param {String} [options.encoding=UTF-8] Encoding of SVG output\n     * @param {String} [options.width] desired width of svg with or without units\n     * @param {String} [options.height] desired height of svg with or without units\n     * @param {Function} [reviver] Method for further parsing of svg elements, called after each fabric object converted into svg representation.\n     * @return {String} SVG string\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n     * @see {@link http://jsfiddle.net/fabricjs/jQ3ZZ/|jsFiddle demo}\n     * @example <caption>Normal SVG output</caption>\n     * var svg = canvas.toSVG();\n     * @example <caption>SVG output without preamble (without &lt;?xml ../>)</caption>\n     * var svg = canvas.toSVG({suppressPreamble: true});\n     * @example <caption>SVG output with viewBox attribute</caption>\n     * var svg = canvas.toSVG({\n     *   viewBox: {\n     *     x: 100,\n     *     y: 100,\n     *     width: 200,\n     *     height: 300\n     *   }\n     * });\n     * @example <caption>SVG output with different encoding (default: UTF-8)</caption>\n     * var svg = canvas.toSVG({encoding: 'ISO-8859-1'});\n     * @example <caption>Modify SVG output with reviver function</caption>\n     * var svg = canvas.toSVG(null, function(svg) {\n     *   return svg.replace('stroke-dasharray: ; stroke-linecap: butt; stroke-linejoin: miter; stroke-miterlimit: 10; ', '');\n     * });\n     */\n    toSVG: function toSVG(options, reviver) {\n      options || (options = {});\n      options.reviver = reviver;\n      var markup = [];\n\n      this._setSVGPreamble(markup, options);\n\n      this._setSVGHeader(markup, options);\n\n      if (this.clipPath) {\n        markup.push('<g clip-path=\"url(#' + this.clipPath.clipPathId + ')\" >\\n');\n      }\n\n      this._setSVGBgOverlayColor(markup, 'background');\n\n      this._setSVGBgOverlayImage(markup, 'backgroundImage', reviver);\n\n      this._setSVGObjects(markup, reviver);\n\n      if (this.clipPath) {\n        markup.push('</g>\\n');\n      }\n\n      this._setSVGBgOverlayColor(markup, 'overlay');\n\n      this._setSVGBgOverlayImage(markup, 'overlayImage', reviver);\n\n      markup.push('</svg>');\n      return markup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _setSVGPreamble: function _setSVGPreamble(markup, options) {\n      if (options.suppressPreamble) {\n        return;\n      }\n\n      markup.push('<?xml version=\"1.0\" encoding=\"', options.encoding || 'UTF-8', '\" standalone=\"no\" ?>\\n', '<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" ', '\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\\n');\n    },\n\n    /**\n     * @private\n     */\n    _setSVGHeader: function _setSVGHeader(markup, options) {\n      var width = options.width || this.width,\n          height = options.height || this.height,\n          vpt,\n          viewBox = 'viewBox=\"0 0 ' + this.width + ' ' + this.height + '\" ',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      if (options.viewBox) {\n        viewBox = 'viewBox=\"' + options.viewBox.x + ' ' + options.viewBox.y + ' ' + options.viewBox.width + ' ' + options.viewBox.height + '\" ';\n      } else {\n        if (this.svgViewportTransformation) {\n          vpt = this.viewportTransform;\n          viewBox = 'viewBox=\"' + toFixed(-vpt[4] / vpt[0], NUM_FRACTION_DIGITS) + ' ' + toFixed(-vpt[5] / vpt[3], NUM_FRACTION_DIGITS) + ' ' + toFixed(this.width / vpt[0], NUM_FRACTION_DIGITS) + ' ' + toFixed(this.height / vpt[3], NUM_FRACTION_DIGITS) + '\" ';\n        }\n      }\n\n      markup.push('<svg ', 'xmlns=\"http://www.w3.org/2000/svg\" ', 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ', 'version=\"1.1\" ', 'width=\"', width, '\" ', 'height=\"', height, '\" ', viewBox, 'xml:space=\"preserve\">\\n', '<desc>Created with Fabric.js ', fabric.version, '</desc>\\n', '<defs>\\n', this.createSVGFontFacesMarkup(), this.createSVGRefElementsMarkup(), this.createSVGClipPathMarkup(options), '</defs>\\n');\n    },\n    createSVGClipPathMarkup: function createSVGClipPathMarkup(options) {\n      var clipPath = this.clipPath;\n\n      if (clipPath) {\n        clipPath.clipPathId = 'CLIPPATH_' + fabric.Object.__uid++;\n        return '<clipPath id=\"' + clipPath.clipPathId + '\" >\\n' + this.clipPath.toClipPathSVG(options.reviver) + '</clipPath>\\n';\n      }\n\n      return '';\n    },\n\n    /**\n     * Creates markup containing SVG referenced elements like patterns, gradients etc.\n     * @return {String}\n     */\n    createSVGRefElementsMarkup: function createSVGRefElementsMarkup() {\n      var _this = this,\n          markup = ['background', 'overlay'].map(function (prop) {\n        var fill = _this[prop + 'Color'];\n\n        if (fill && fill.toLive) {\n          var shouldTransform = _this[prop + 'Vpt'],\n              vpt = _this.viewportTransform,\n              object = {\n            width: _this.width / (shouldTransform ? vpt[0] : 1),\n            height: _this.height / (shouldTransform ? vpt[3] : 1)\n          };\n          return fill.toSVG(object, {\n            additionalTransform: shouldTransform ? fabric.util.matrixToSVG(vpt) : ''\n          });\n        }\n      });\n\n      return markup.join('');\n    },\n\n    /**\n     * Creates markup containing SVG font faces,\n     * font URLs for font faces must be collected by developers\n     * and are not extracted from the DOM by fabricjs\n     * @param {Array} objects Array of fabric objects\n     * @return {String}\n     */\n    createSVGFontFacesMarkup: function createSVGFontFacesMarkup() {\n      var markup = '',\n          fontList = {},\n          obj,\n          fontFamily,\n          style,\n          row,\n          rowIndex,\n          _char,\n          charIndex,\n          i,\n          len,\n          fontPaths = fabric.fontPaths,\n          objects = this._objects;\n\n      for (i = 0, len = objects.length; i < len; i++) {\n        obj = objects[i];\n        fontFamily = obj.fontFamily;\n\n        if (obj.type.indexOf('text') === -1 || fontList[fontFamily] || !fontPaths[fontFamily]) {\n          continue;\n        }\n\n        fontList[fontFamily] = true;\n\n        if (!obj.styles) {\n          continue;\n        }\n\n        style = obj.styles;\n\n        for (rowIndex in style) {\n          row = style[rowIndex];\n\n          for (charIndex in row) {\n            _char = row[charIndex];\n            fontFamily = _char.fontFamily;\n\n            if (!fontList[fontFamily] && fontPaths[fontFamily]) {\n              fontList[fontFamily] = true;\n            }\n          }\n        }\n      }\n\n      for (var j in fontList) {\n        markup += ['\\t\\t@font-face {\\n', '\\t\\t\\tfont-family: \\'', j, '\\';\\n', '\\t\\t\\tsrc: url(\\'', fontPaths[j], '\\');\\n', '\\t\\t}\\n'].join('');\n      }\n\n      if (markup) {\n        markup = ['\\t<style type=\"text/css\">', '<![CDATA[\\n', markup, ']]>', '</style>\\n'].join('');\n      }\n\n      return markup;\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObjects: function _setSVGObjects(markup, reviver) {\n      var instance,\n          i,\n          len,\n          objects = this._objects;\n\n      for (i = 0, len = objects.length; i < len; i++) {\n        instance = objects[i];\n\n        if (instance.excludeFromExport) {\n          continue;\n        }\n\n        this._setSVGObject(markup, instance, reviver);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function _setSVGObject(markup, instance, reviver) {\n      markup.push(instance.toSVG(reviver));\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayImage: function _setSVGBgOverlayImage(markup, property, reviver) {\n      if (this[property] && !this[property].excludeFromExport && this[property].toSVG) {\n        markup.push(this[property].toSVG(reviver));\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGBgOverlayColor: function _setSVGBgOverlayColor(markup, property) {\n      var filler = this[property + 'Color'],\n          vpt = this.viewportTransform,\n          finalWidth = this.width,\n          finalHeight = this.height;\n\n      if (!filler) {\n        return;\n      }\n\n      if (filler.toLive) {\n        var repeat = filler.repeat,\n            iVpt = fabric.util.invertTransform(vpt),\n            shouldInvert = this[property + 'Vpt'],\n            additionalTransform = shouldInvert ? fabric.util.matrixToSVG(iVpt) : '';\n        markup.push('<rect transform=\"' + additionalTransform + ' translate(', finalWidth / 2, ',', finalHeight / 2, ')\"', ' x=\"', filler.offsetX - finalWidth / 2, '\" y=\"', filler.offsetY - finalHeight / 2, '\" ', 'width=\"', repeat === 'repeat-y' || repeat === 'no-repeat' ? filler.source.width : finalWidth, '\" height=\"', repeat === 'repeat-x' || repeat === 'no-repeat' ? filler.source.height : finalHeight, '\" fill=\"url(#SVGID_' + filler.id + ')\"', '></rect>\\n');\n      } else {\n        markup.push('<rect x=\"0\" y=\"0\" width=\"100%\" height=\"100%\" ', 'fill=\"', filler, '\"', '></rect>\\n');\n      }\n    },\n\n    /* _TO_SVG_END_ */\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the bottom of the stack of drawn objects\n     * @param {fabric.Object} object Object to send to back\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendToBack: function sendToBack(object) {\n      if (!object) {\n        return this;\n      }\n\n      var activeSelection = this._activeObject,\n          i,\n          obj,\n          objs;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n\n          this._objects.unshift(obj);\n        }\n      } else {\n        removeFromArray(this._objects, object);\n\n        this._objects.unshift(object);\n      }\n\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Moves an object or the objects of a multiple selection\n     * to the top of the stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringToFront: function bringToFront(object) {\n      if (!object) {\n        return this;\n      }\n\n      var activeSelection = this._activeObject,\n          i,\n          obj,\n          objs;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          removeFromArray(this._objects, obj);\n\n          this._objects.push(obj);\n        }\n      } else {\n        removeFromArray(this._objects, object);\n\n        this._objects.push(object);\n      }\n\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * Moves an object or a selection down in stack of drawn objects\n     * An optional paramter, intersecting allowes to move the object in behind\n     * the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    sendBackwards: function sendBackwards(object, intersecting) {\n      if (!object) {\n        return this;\n      }\n\n      var activeSelection = this._activeObject,\n          i,\n          obj,\n          idx,\n          newIdx,\n          objs,\n          objsMoved = 0;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n\n        for (i = 0; i < objs.length; i++) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n\n          if (idx > 0 + objsMoved) {\n            newIdx = idx - 1;\n            removeFromArray(this._objects, obj);\n\n            this._objects.splice(newIdx, 0, obj);\n          }\n\n          objsMoved++;\n        }\n      } else {\n        idx = this._objects.indexOf(object);\n\n        if (idx !== 0) {\n          // if object is not on the bottom of stack\n          newIdx = this._findNewLowerIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewLowerIndex: function _findNewLowerIndex(object, idx, intersecting) {\n      var newIdx, i;\n\n      if (intersecting) {\n        newIdx = idx; // traverse down the stack looking for the nearest intersecting object\n\n        for (i = idx - 1; i >= 0; --i) {\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) || object.isContainedWithinObject(this._objects[i]) || this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      } else {\n        newIdx = idx - 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object or a selection up in stack of drawn objects\n     * An optional paramter, intersecting allowes to move the object in front\n     * of the first intersecting object. Where intersection is calculated with\n     * bounding box. If no intersection is found, there will not be change in the\n     * stack.\n     * @param {fabric.Object} object Object to send\n     * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    bringForward: function bringForward(object, intersecting) {\n      if (!object) {\n        return this;\n      }\n\n      var activeSelection = this._activeObject,\n          i,\n          obj,\n          idx,\n          newIdx,\n          objs,\n          objsMoved = 0;\n\n      if (object === activeSelection && object.type === 'activeSelection') {\n        objs = activeSelection._objects;\n\n        for (i = objs.length; i--;) {\n          obj = objs[i];\n          idx = this._objects.indexOf(obj);\n\n          if (idx < this._objects.length - 1 - objsMoved) {\n            newIdx = idx + 1;\n            removeFromArray(this._objects, obj);\n\n            this._objects.splice(newIdx, 0, obj);\n          }\n\n          objsMoved++;\n        }\n      } else {\n        idx = this._objects.indexOf(object);\n\n        if (idx !== this._objects.length - 1) {\n          // if object is not on top of stack (last item in an array)\n          newIdx = this._findNewUpperIndex(object, idx, intersecting);\n          removeFromArray(this._objects, object);\n\n          this._objects.splice(newIdx, 0, object);\n        }\n      }\n\n      this.renderOnAddRemove && this.requestRenderAll();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _findNewUpperIndex: function _findNewUpperIndex(object, idx, intersecting) {\n      var newIdx, i, len;\n\n      if (intersecting) {\n        newIdx = idx; // traverse up the stack looking for the nearest intersecting object\n\n        for (i = idx + 1, len = this._objects.length; i < len; ++i) {\n          var isIntersecting = object.intersectsWithObject(this._objects[i]) || object.isContainedWithinObject(this._objects[i]) || this._objects[i].isContainedWithinObject(object);\n\n          if (isIntersecting) {\n            newIdx = i;\n            break;\n          }\n        }\n      } else {\n        newIdx = idx + 1;\n      }\n\n      return newIdx;\n    },\n\n    /**\n     * Moves an object to specified level in stack of drawn objects\n     * @param {fabric.Object} object Object to send\n     * @param {Number} index Position to move to\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    moveTo: function moveTo(object, index) {\n      removeFromArray(this._objects, object);\n\n      this._objects.splice(index, 0, object);\n\n      return this.renderOnAddRemove && this.requestRenderAll();\n    },\n\n    /**\n     * Clears a canvas element and dispose objects\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function dispose() {\n      // cancel eventually ongoing renders\n      if (this.isRendering) {\n        fabric.util.cancelAnimFrame(this.isRendering);\n        this.isRendering = 0;\n      }\n\n      this.forEachObject(function (object) {\n        object.dispose && object.dispose();\n      });\n      this._objects = [];\n\n      if (this.backgroundImage && this.backgroundImage.dispose) {\n        this.backgroundImage.dispose();\n      }\n\n      this.backgroundImage = null;\n\n      if (this.overlayImage && this.overlayImage.dispose) {\n        this.overlayImage.dispose();\n      }\n\n      this.overlayImage = null;\n      this._iTextInstances = null;\n      this.contextContainer = null;\n      fabric.util.cleanUpJsdomNode(this.lowerCanvasEl);\n      this.lowerCanvasEl = undefined;\n      return this;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function toString() {\n      return '#<fabric.Canvas (' + this.complexity() + '): ' + '{ objects: ' + this._objects.length + ' }>';\n    }\n  });\n  extend(fabric.StaticCanvas.prototype, fabric.Observable);\n  extend(fabric.StaticCanvas.prototype, fabric.Collection);\n  extend(fabric.StaticCanvas.prototype, fabric.DataURLExporter);\n  extend(fabric.StaticCanvas,\n  /** @lends fabric.StaticCanvas */\n  {\n    /**\n     * @static\n     * @type String\n     * @default\n     */\n    EMPTY_JSON: '{\"objects\": [], \"background\": \"white\"}',\n\n    /**\n     * Provides a way to check support of some of the canvas methods\n     * (either those of HTMLCanvasElement itself, or rendering context)\n     *\n     * @param {String} methodName Method to check support for;\n     *                            Could be one of \"setLineDash\"\n     * @return {Boolean | null} `true` if method is supported (or at least exists),\n     *                          `null` if canvas element or context can not be initialized\n     */\n    supports: function supports(methodName) {\n      var el = createCanvasElement();\n\n      if (!el || !el.getContext) {\n        return null;\n      }\n\n      var ctx = el.getContext('2d');\n\n      if (!ctx) {\n        return null;\n      }\n\n      switch (methodName) {\n        case 'setLineDash':\n          return typeof ctx.setLineDash !== 'undefined';\n\n        default:\n          return null;\n      }\n    }\n  });\n  /**\n   * Returns JSON representation of canvas\n   * @function\n   * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n   * @return {String} JSON string\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#serialization}\n   * @see {@link http://jsfiddle.net/fabricjs/pec86/|jsFiddle demo}\n   * @example <caption>JSON without additional properties</caption>\n   * var json = canvas.toJSON();\n   * @example <caption>JSON with additional properties included</caption>\n   * var json = canvas.toJSON(['lockMovementX', 'lockMovementY', 'lockRotation', 'lockScalingX', 'lockScalingY', 'lockUniScaling']);\n   * @example <caption>JSON without default values</caption>\n   * canvas.includeDefaultValues = false;\n   * var json = canvas.toJSON();\n   */\n\n  fabric.StaticCanvas.prototype.toJSON = fabric.StaticCanvas.prototype.toObject;\n\n  if (fabric.isLikelyNode) {\n    fabric.StaticCanvas.prototype.createPNGStream = function () {\n      var impl = getNodeCanvas(this.lowerCanvasEl);\n      return impl && impl.createPNGStream();\n    };\n\n    fabric.StaticCanvas.prototype.createJPEGStream = function (opts) {\n      var impl = getNodeCanvas(this.lowerCanvasEl);\n      return impl && impl.createJPEGStream(opts);\n    };\n  }\n})();\n/**\n * BaseBrush class\n * @class fabric.BaseBrush\n * @see {@link http://fabricjs.com/freedrawing|Freedrawing demo}\n */\n\n\nfabric.BaseBrush = fabric.util.createClass(\n/** @lends fabric.BaseBrush.prototype */\n{\n  /**\n   * Color of a brush\n   * @type String\n   * @default\n   */\n  color: 'rgb(0, 0, 0)',\n\n  /**\n   * Width of a brush, has to be a Number, no string literals\n   * @type Number\n   * @default\n   */\n  width: 1,\n\n  /**\n   * Shadow object representing shadow of this shape.\n   * <b>Backwards incompatibility note:</b> This property replaces \"shadowColor\" (String), \"shadowOffsetX\" (Number),\n   * \"shadowOffsetY\" (Number) and \"shadowBlur\" (Number) since v1.2.12\n   * @type fabric.Shadow\n   * @default\n   */\n  shadow: null,\n\n  /**\n   * Line endings style of a brush (one of \"butt\", \"round\", \"square\")\n   * @type String\n   * @default\n   */\n  strokeLineCap: 'round',\n\n  /**\n   * Corner style of a brush (one of \"bevel\", \"round\", \"miter\")\n   * @type String\n   * @default\n   */\n  strokeLineJoin: 'round',\n\n  /**\n   * Maximum miter length (used for strokeLineJoin = \"miter\") of a brush's\n   * @type Number\n   * @default\n   */\n  strokeMiterLimit: 10,\n\n  /**\n   * Stroke Dash Array.\n   * @type Array\n   * @default\n   */\n  strokeDashArray: null,\n\n  /**\n   * Sets shadow of an object\n   * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  setShadow: function setShadow(options) {\n    this.shadow = new fabric.Shadow(options);\n    return this;\n  },\n\n  /**\n   * Sets brush styles\n   * @private\n   */\n  _setBrushStyles: function _setBrushStyles() {\n    var ctx = this.canvas.contextTop;\n    ctx.strokeStyle = this.color;\n    ctx.lineWidth = this.width;\n    ctx.lineCap = this.strokeLineCap;\n    ctx.miterLimit = this.strokeMiterLimit;\n    ctx.lineJoin = this.strokeLineJoin;\n\n    if (fabric.StaticCanvas.supports('setLineDash')) {\n      ctx.setLineDash(this.strokeDashArray || []);\n    }\n  },\n\n  /**\n   * Sets the transformation on given context\n   * @param {RenderingContext2d} ctx context to render on\n   * @private\n   */\n  _saveAndTransform: function _saveAndTransform(ctx) {\n    var v = this.canvas.viewportTransform;\n    ctx.save();\n    ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n  },\n\n  /**\n   * Sets brush shadow styles\n   * @private\n   */\n  _setShadow: function _setShadow() {\n    if (!this.shadow) {\n      return;\n    }\n\n    var ctx = this.canvas.contextTop,\n        zoom = this.canvas.getZoom();\n    ctx.shadowColor = this.shadow.color;\n    ctx.shadowBlur = this.shadow.blur * zoom;\n    ctx.shadowOffsetX = this.shadow.offsetX * zoom;\n    ctx.shadowOffsetY = this.shadow.offsetY * zoom;\n  },\n  needsFullRender: function needsFullRender() {\n    var color = new fabric.Color(this.color);\n    return color.getAlpha() < 1 || !!this.shadow;\n  },\n\n  /**\n   * Removes brush shadow styles\n   * @private\n   */\n  _resetShadow: function _resetShadow() {\n    var ctx = this.canvas.contextTop;\n    ctx.shadowColor = '';\n    ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n  }\n});\n\n(function () {\n  /**\n   * PencilBrush class\n   * @class fabric.PencilBrush\n   * @extends fabric.BaseBrush\n   */\n  fabric.PencilBrush = fabric.util.createClass(fabric.BaseBrush,\n  /** @lends fabric.PencilBrush.prototype */\n  {\n    /**\n     * Discard points that are less than `decimate` pixel distant from each other\n     * @type Number\n     * @default 0.4\n     */\n    decimate: 0.4,\n\n    /**\n     * Constructor\n     * @param {fabric.Canvas} canvas\n     * @return {fabric.PencilBrush} Instance of a pencil brush\n     */\n    initialize: function initialize(canvas) {\n      this.canvas = canvas;\n      this._points = [];\n    },\n\n    /**\n     * Invoked inside on mouse down and mouse move\n     * @param {Object} pointer\n     */\n    _drawSegment: function _drawSegment(ctx, p1, p2) {\n      var midPoint = p1.midPointFrom(p2);\n      ctx.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n      return midPoint;\n    },\n\n    /**\n     * Inovoked on mouse down\n     * @param {Object} pointer\n     */\n    onMouseDown: function onMouseDown(pointer) {\n      this._prepareForDrawing(pointer); // capture coordinates immediately\n      // this allows to draw dots (when movement never occurs)\n\n\n      this._captureDrawingPath(pointer);\n\n      this._render();\n    },\n\n    /**\n     * Inovoked on mouse move\n     * @param {Object} pointer\n     */\n    onMouseMove: function onMouseMove(pointer) {\n      if (this._captureDrawingPath(pointer) && this._points.length > 1) {\n        if (this.needsFullRender()) {\n          // redraw curve\n          // clear top canvas\n          this.canvas.clearContext(this.canvas.contextTop);\n\n          this._render();\n        } else {\n          var points = this._points,\n              length = points.length,\n              ctx = this.canvas.contextTop; // draw the curve update\n\n          this._saveAndTransform(ctx);\n\n          if (this.oldEnd) {\n            ctx.beginPath();\n            ctx.moveTo(this.oldEnd.x, this.oldEnd.y);\n          }\n\n          this.oldEnd = this._drawSegment(ctx, points[length - 2], points[length - 1], true);\n          ctx.stroke();\n          ctx.restore();\n        }\n      }\n    },\n\n    /**\n     * Invoked on mouse up\n     */\n    onMouseUp: function onMouseUp() {\n      this.oldEnd = undefined;\n\n      this._finalizeAndAddPath();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _prepareForDrawing: function _prepareForDrawing(pointer) {\n      var p = new fabric.Point(pointer.x, pointer.y);\n\n      this._reset();\n\n      this._addPoint(p);\n\n      this.canvas.contextTop.moveTo(p.x, p.y);\n    },\n\n    /**\n     * @private\n     * @param {fabric.Point} point Point to be added to points array\n     */\n    _addPoint: function _addPoint(point) {\n      if (this._points.length > 1 && point.eq(this._points[this._points.length - 1])) {\n        return false;\n      }\n\n      this._points.push(point);\n\n      return true;\n    },\n\n    /**\n     * Clear points array and set contextTop canvas style.\n     * @private\n     */\n    _reset: function _reset() {\n      this._points.length = 0;\n\n      this._setBrushStyles();\n\n      this._setShadow();\n    },\n\n    /**\n     * @private\n     * @param {Object} pointer Actual mouse position related to the canvas.\n     */\n    _captureDrawingPath: function _captureDrawingPath(pointer) {\n      var pointerPoint = new fabric.Point(pointer.x, pointer.y);\n      return this._addPoint(pointerPoint);\n    },\n\n    /**\n     * Draw a smooth path on the topCanvas using quadraticCurveTo\n     * @private\n     */\n    _render: function _render() {\n      var ctx = this.canvas.contextTop,\n          i,\n          len,\n          p1 = this._points[0],\n          p2 = this._points[1];\n\n      this._saveAndTransform(ctx);\n\n      ctx.beginPath(); //if we only have 2 points in the path and they are the same\n      //it means that the user only clicked the canvas without moving the mouse\n      //then we should be drawing a dot. A path isn't drawn between two identical dots\n      //that's why we set them apart a bit\n\n      if (this._points.length === 2 && p1.x === p2.x && p1.y === p2.y) {\n        var width = this.width / 1000;\n        p1 = new fabric.Point(p1.x, p1.y);\n        p2 = new fabric.Point(p2.x, p2.y);\n        p1.x -= width;\n        p2.x += width;\n      }\n\n      ctx.moveTo(p1.x, p1.y);\n\n      for (i = 1, len = this._points.length; i < len; i++) {\n        // we pick the point between pi + 1 & pi + 2 as the\n        // end point and p1 as our control point.\n        this._drawSegment(ctx, p1, p2);\n\n        p1 = this._points[i];\n        p2 = this._points[i + 1];\n      } // Draw last line as a straight line while\n      // we wait for the next point to be able to calculate\n      // the bezier control point\n\n\n      ctx.lineTo(p1.x, p1.y);\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * Converts points to SVG path\n     * @param {Array} points Array of points\n     * @return {String} SVG path\n     */\n    convertPointsToSVGPath: function convertPointsToSVGPath(points) {\n      var path = [],\n          i,\n          width = this.width / 1000,\n          p1 = new fabric.Point(points[0].x, points[0].y),\n          p2 = new fabric.Point(points[1].x, points[1].y),\n          len = points.length,\n          multSignX = 1,\n          multSignY = 0,\n          manyPoints = len > 2;\n\n      if (manyPoints) {\n        multSignX = points[2].x < p2.x ? -1 : points[2].x === p2.x ? 0 : 1;\n        multSignY = points[2].y < p2.y ? -1 : points[2].y === p2.y ? 0 : 1;\n      }\n\n      path.push('M ', p1.x - multSignX * width, ' ', p1.y - multSignY * width, ' ');\n\n      for (i = 1; i < len; i++) {\n        if (!p1.eq(p2)) {\n          var midPoint = p1.midPointFrom(p2); // p1 is our bezier control point\n          // midpoint is our endpoint\n          // start point is p(i-1) value.\n\n          path.push('Q ', p1.x, ' ', p1.y, ' ', midPoint.x, ' ', midPoint.y, ' ');\n        }\n\n        p1 = points[i];\n\n        if (i + 1 < points.length) {\n          p2 = points[i + 1];\n        }\n      }\n\n      if (manyPoints) {\n        multSignX = p1.x > points[i - 2].x ? 1 : p1.x === points[i - 2].x ? 0 : -1;\n        multSignY = p1.y > points[i - 2].y ? 1 : p1.y === points[i - 2].y ? 0 : -1;\n      }\n\n      path.push('L ', p1.x + multSignX * width, ' ', p1.y + multSignY * width);\n      return path;\n    },\n\n    /**\n     * Creates fabric.Path object to add on canvas\n     * @param {String} pathData Path data\n     * @return {fabric.Path} Path to add on canvas\n     */\n    createPath: function createPath(pathData) {\n      var path = new fabric.Path(pathData, {\n        fill: null,\n        stroke: this.color,\n        strokeWidth: this.width,\n        strokeLineCap: this.strokeLineCap,\n        strokeMiterLimit: this.strokeMiterLimit,\n        strokeLineJoin: this.strokeLineJoin,\n        strokeDashArray: this.strokeDashArray\n      });\n\n      if (this.shadow) {\n        this.shadow.affectStroke = true;\n        path.setShadow(this.shadow);\n      }\n\n      return path;\n    },\n\n    /**\n     * Decimate poins array with the decimate value\n     */\n    decimatePoints: function decimatePoints(points, distance) {\n      if (points.length <= 2) {\n        return points;\n      }\n\n      var zoom = this.canvas.getZoom(),\n          adjustedDistance = Math.pow(distance / zoom, 2),\n          i,\n          l = points.length - 1,\n          lastPoint = points[0],\n          newPoints = [lastPoint],\n          cDistance;\n\n      for (i = 1; i < l; i++) {\n        cDistance = Math.pow(lastPoint.x - points[i].x, 2) + Math.pow(lastPoint.y - points[i].y, 2);\n\n        if (cDistance >= adjustedDistance) {\n          lastPoint = points[i];\n          newPoints.push(lastPoint);\n        }\n      }\n\n      return newPoints;\n    },\n\n    /**\n     * On mouseup after drawing the path on contextTop canvas\n     * we use the points captured to create an new fabric path object\n     * and add it to the fabric canvas.\n     */\n    _finalizeAndAddPath: function _finalizeAndAddPath() {\n      var ctx = this.canvas.contextTop;\n      ctx.closePath();\n\n      if (this.decimate) {\n        this._points = this.decimatePoints(this._points, this.decimate);\n      }\n\n      var pathData = this.convertPointsToSVGPath(this._points).join('');\n\n      if (pathData === 'M 0 0 Q 0 0 0 0 L 0 0') {\n        // do not create 0 width/height paths, as they are\n        // rendered inconsistently across browsers\n        // Firefox 4, for example, renders a dot,\n        // whereas Chrome 10 renders nothing\n        this.canvas.requestRenderAll();\n        return;\n      }\n\n      var path = this.createPath(pathData);\n      this.canvas.clearContext(this.canvas.contextTop);\n      this.canvas.add(path);\n      this.canvas.renderAll();\n      path.setCoords();\n\n      this._resetShadow(); // fire event 'path' created\n\n\n      this.canvas.fire('path:created', {\n        path: path\n      });\n    }\n  });\n})();\n/**\n * CircleBrush class\n * @class fabric.CircleBrush\n */\n\n\nfabric.CircleBrush = fabric.util.createClass(fabric.BaseBrush,\n/** @lends fabric.CircleBrush.prototype */\n{\n  /**\n   * Width of a brush\n   * @type Number\n   * @default\n   */\n  width: 10,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.CircleBrush} Instance of a circle brush\n   */\n  initialize: function initialize(canvas) {\n    this.canvas = canvas;\n    this.points = [];\n  },\n\n  /**\n   * Invoked inside on mouse down and mouse move\n   * @param {Object} pointer\n   */\n  drawDot: function drawDot(pointer) {\n    var point = this.addPoint(pointer),\n        ctx = this.canvas.contextTop;\n\n    this._saveAndTransform(ctx);\n\n    this.dot(ctx, point);\n    ctx.restore();\n  },\n  dot: function dot(ctx, point) {\n    ctx.fillStyle = point.fill;\n    ctx.beginPath();\n    ctx.arc(point.x, point.y, point.radius, 0, Math.PI * 2, false);\n    ctx.closePath();\n    ctx.fill();\n  },\n\n  /**\n   * Invoked on mouse down\n   */\n  onMouseDown: function onMouseDown(pointer) {\n    this.points.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n\n    this._setShadow();\n\n    this.drawDot(pointer);\n  },\n\n  /**\n   * Render the full state of the brush\n   * @private\n   */\n  _render: function _render() {\n    var ctx = this.canvas.contextTop,\n        i,\n        len,\n        points = this.points;\n\n    this._saveAndTransform(ctx);\n\n    for (i = 0, len = points.length; i < len; i++) {\n      this.dot(ctx, points[i]);\n    }\n\n    ctx.restore();\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function onMouseMove(pointer) {\n    if (this.needsFullRender()) {\n      this.canvas.clearContext(this.canvas.contextTop);\n      this.addPoint(pointer);\n\n      this._render();\n    } else {\n      this.drawDot(pointer);\n    }\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function onMouseUp() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove,\n        i,\n        len;\n    this.canvas.renderOnAddRemove = false;\n    var circles = [];\n\n    for (i = 0, len = this.points.length; i < len; i++) {\n      var point = this.points[i],\n          circle = new fabric.Circle({\n        radius: point.radius,\n        left: point.x,\n        top: point.y,\n        originX: 'center',\n        originY: 'center',\n        fill: point.fill\n      });\n      this.shadow && circle.setShadow(this.shadow);\n      circles.push(circle);\n    }\n\n    var group = new fabric.Group(circles);\n    group.canvas = this.canvas;\n    this.canvas.add(group);\n    this.canvas.fire('path:created', {\n      path: group\n    });\n    this.canvas.clearContext(this.canvas.contextTop);\n\n    this._resetShadow();\n\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  },\n\n  /**\n   * @param {Object} pointer\n   * @return {fabric.Point} Just added pointer point\n   */\n  addPoint: function addPoint(pointer) {\n    var pointerPoint = new fabric.Point(pointer.x, pointer.y),\n        circleRadius = fabric.util.getRandomInt(Math.max(0, this.width - 20), this.width + 20) / 2,\n        circleColor = new fabric.Color(this.color).setAlpha(fabric.util.getRandomInt(0, 100) / 100).toRgba();\n    pointerPoint.radius = circleRadius;\n    pointerPoint.fill = circleColor;\n    this.points.push(pointerPoint);\n    return pointerPoint;\n  }\n});\n/**\n * SprayBrush class\n * @class fabric.SprayBrush\n */\n\nfabric.SprayBrush = fabric.util.createClass(fabric.BaseBrush,\n/** @lends fabric.SprayBrush.prototype */\n{\n  /**\n   * Width of a spray\n   * @type Number\n   * @default\n   */\n  width: 10,\n\n  /**\n   * Density of a spray (number of dots per chunk)\n   * @type Number\n   * @default\n   */\n  density: 20,\n\n  /**\n   * Width of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidth: 1,\n\n  /**\n   * Width variance of spray dots\n   * @type Number\n   * @default\n   */\n  dotWidthVariance: 1,\n\n  /**\n   * Whether opacity of a dot should be random\n   * @type Boolean\n   * @default\n   */\n  randomOpacity: false,\n\n  /**\n   * Whether overlapping dots (rectangles) should be removed (for performance reasons)\n   * @type Boolean\n   * @default\n   */\n  optimizeOverlapping: true,\n\n  /**\n   * Constructor\n   * @param {fabric.Canvas} canvas\n   * @return {fabric.SprayBrush} Instance of a spray brush\n   */\n  initialize: function initialize(canvas) {\n    this.canvas = canvas;\n    this.sprayChunks = [];\n  },\n\n  /**\n   * Invoked on mouse down\n   * @param {Object} pointer\n   */\n  onMouseDown: function onMouseDown(pointer) {\n    this.sprayChunks.length = 0;\n    this.canvas.clearContext(this.canvas.contextTop);\n\n    this._setShadow();\n\n    this.addSprayChunk(pointer);\n    this.render(this.sprayChunkPoints);\n  },\n\n  /**\n   * Invoked on mouse move\n   * @param {Object} pointer\n   */\n  onMouseMove: function onMouseMove(pointer) {\n    this.addSprayChunk(pointer);\n    this.render(this.sprayChunkPoints);\n  },\n\n  /**\n   * Invoked on mouse up\n   */\n  onMouseUp: function onMouseUp() {\n    var originalRenderOnAddRemove = this.canvas.renderOnAddRemove;\n    this.canvas.renderOnAddRemove = false;\n    var rects = [];\n\n    for (var i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      var sprayChunk = this.sprayChunks[i];\n\n      for (var j = 0, jlen = sprayChunk.length; j < jlen; j++) {\n        var rect = new fabric.Rect({\n          width: sprayChunk[j].width,\n          height: sprayChunk[j].width,\n          left: sprayChunk[j].x + 1,\n          top: sprayChunk[j].y + 1,\n          originX: 'center',\n          originY: 'center',\n          fill: this.color\n        });\n        rects.push(rect);\n      }\n    }\n\n    if (this.optimizeOverlapping) {\n      rects = this._getOptimizedRects(rects);\n    }\n\n    var group = new fabric.Group(rects);\n    this.shadow && group.setShadow(this.shadow);\n    this.canvas.add(group);\n    this.canvas.fire('path:created', {\n      path: group\n    });\n    this.canvas.clearContext(this.canvas.contextTop);\n\n    this._resetShadow();\n\n    this.canvas.renderOnAddRemove = originalRenderOnAddRemove;\n    this.canvas.requestRenderAll();\n  },\n\n  /**\n   * @private\n   * @param {Array} rects\n   */\n  _getOptimizedRects: function _getOptimizedRects(rects) {\n    // avoid creating duplicate rects at the same coordinates\n    var uniqueRects = {},\n        key,\n        i,\n        len;\n\n    for (i = 0, len = rects.length; i < len; i++) {\n      key = rects[i].left + '' + rects[i].top;\n\n      if (!uniqueRects[key]) {\n        uniqueRects[key] = rects[i];\n      }\n    }\n\n    var uniqueRectsArray = [];\n\n    for (key in uniqueRects) {\n      uniqueRectsArray.push(uniqueRects[key]);\n    }\n\n    return uniqueRectsArray;\n  },\n\n  /**\n   * Render new chunk of spray brush\n   */\n  render: function render(sprayChunk) {\n    var ctx = this.canvas.contextTop,\n        i,\n        len;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (i = 0, len = sprayChunk.length; i < len; i++) {\n      var point = sprayChunk[i];\n\n      if (typeof point.opacity !== 'undefined') {\n        ctx.globalAlpha = point.opacity;\n      }\n\n      ctx.fillRect(point.x, point.y, point.width, point.width);\n    }\n\n    ctx.restore();\n  },\n\n  /**\n   * Render all spray chunks\n   */\n  _render: function _render() {\n    var ctx = this.canvas.contextTop,\n        i,\n        ilen;\n    ctx.fillStyle = this.color;\n\n    this._saveAndTransform(ctx);\n\n    for (i = 0, ilen = this.sprayChunks.length; i < ilen; i++) {\n      this.render(this.sprayChunks[i]);\n    }\n\n    ctx.restore();\n  },\n\n  /**\n   * @param {Object} pointer\n   */\n  addSprayChunk: function addSprayChunk(pointer) {\n    this.sprayChunkPoints = [];\n    var x,\n        y,\n        width,\n        radius = this.width / 2,\n        i;\n\n    for (i = 0; i < this.density; i++) {\n      x = fabric.util.getRandomInt(pointer.x - radius, pointer.x + radius);\n      y = fabric.util.getRandomInt(pointer.y - radius, pointer.y + radius);\n\n      if (this.dotWidthVariance) {\n        width = fabric.util.getRandomInt( // bottom clamp width to 1\n        Math.max(1, this.dotWidth - this.dotWidthVariance), this.dotWidth + this.dotWidthVariance);\n      } else {\n        width = this.dotWidth;\n      }\n\n      var point = new fabric.Point(x, y);\n      point.width = width;\n\n      if (this.randomOpacity) {\n        point.opacity = fabric.util.getRandomInt(0, 100) / 100;\n      }\n\n      this.sprayChunkPoints.push(point);\n    }\n\n    this.sprayChunks.push(this.sprayChunkPoints);\n  }\n});\n/**\n * PatternBrush class\n * @class fabric.PatternBrush\n * @extends fabric.BaseBrush\n */\n\nfabric.PatternBrush = fabric.util.createClass(fabric.PencilBrush,\n/** @lends fabric.PatternBrush.prototype */\n{\n  getPatternSrc: function getPatternSrc() {\n    var dotWidth = 20,\n        dotDistance = 5,\n        patternCanvas = fabric.util.createCanvasElement(),\n        patternCtx = patternCanvas.getContext('2d');\n    patternCanvas.width = patternCanvas.height = dotWidth + dotDistance;\n    patternCtx.fillStyle = this.color;\n    patternCtx.beginPath();\n    patternCtx.arc(dotWidth / 2, dotWidth / 2, dotWidth / 2, 0, Math.PI * 2, false);\n    patternCtx.closePath();\n    patternCtx.fill();\n    return patternCanvas;\n  },\n  getPatternSrcFunction: function getPatternSrcFunction() {\n    return String(this.getPatternSrc).replace('this.color', '\"' + this.color + '\"');\n  },\n\n  /**\n   * Creates \"pattern\" instance property\n   */\n  getPattern: function getPattern() {\n    return this.canvas.contextTop.createPattern(this.source || this.getPatternSrc(), 'repeat');\n  },\n\n  /**\n   * Sets brush styles\n   */\n  _setBrushStyles: function _setBrushStyles() {\n    this.callSuper('_setBrushStyles');\n    this.canvas.contextTop.strokeStyle = this.getPattern();\n  },\n\n  /**\n   * Creates path\n   */\n  createPath: function createPath(pathData) {\n    var path = this.callSuper('createPath', pathData),\n        topLeft = path._getLeftTopCoords().scalarAdd(path.strokeWidth / 2);\n\n    path.stroke = new fabric.Pattern({\n      source: this.source || this.getPatternSrcFunction(),\n      offsetX: -topLeft.x,\n      offsetY: -topLeft.y\n    });\n    return path;\n  }\n});\n\n(function () {\n  var _getPointer2 = fabric.util.getPointer,\n      degreesToRadians = fabric.util.degreesToRadians,\n      radiansToDegrees = fabric.util.radiansToDegrees,\n      atan2 = Math.atan2,\n      abs = Math.abs,\n      supportLineDash = fabric.StaticCanvas.supports('setLineDash'),\n      STROKE_OFFSET = 0.5;\n  /**\n   * Canvas class\n   * @class fabric.Canvas\n   * @extends fabric.StaticCanvas\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#canvas}\n   * @see {@link fabric.Canvas#initialize} for constructor definition\n   *\n   * @fires object:modified\n   * @fires object:rotated\n   * @fires object:scaled\n   * @fires object:moved\n   * @fires object:skewed\n   * @fires object:rotating\n   * @fires object:scaling\n   * @fires object:moving\n   * @fires object:skewing\n   * @fires object:selected this event is deprecated. use selection:created\n   *\n   * @fires before:transform\n   * @fires before:selection:cleared\n   * @fires selection:cleared\n   * @fires selection:updated\n   * @fires selection:created\n   *\n   * @fires path:created\n   * @fires mouse:down\n   * @fires mouse:move\n   * @fires mouse:up\n   * @fires mouse:down:before\n   * @fires mouse:move:before\n   * @fires mouse:up:before\n   * @fires mouse:over\n   * @fires mouse:out\n   * @fires mouse:dblclick\n   *\n   * @fires dragover\n   * @fires dragenter\n   * @fires dragleave\n   * @fires drop\n   *\n   */\n\n  fabric.Canvas = fabric.util.createClass(fabric.StaticCanvas,\n  /** @lends fabric.Canvas.prototype */\n  {\n    /**\n     * Constructor\n     * @param {HTMLElement | String} el &lt;canvas> element to initialize instance on\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function initialize(el, options) {\n      options || (options = {});\n      this.renderAndResetBound = this.renderAndReset.bind(this);\n      this.requestRenderAllBound = this.requestRenderAll.bind(this);\n\n      this._initStatic(el, options);\n\n      this._initInteractive();\n\n      this._createCacheCanvas();\n    },\n\n    /**\n     * When true, objects can be transformed by one side (unproportionally)\n     * @type Boolean\n     * @default\n     */\n    uniScaleTransform: false,\n\n    /**\n     * Indicates which key enable unproportional scaling\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    uniScaleKey: 'shiftKey',\n\n    /**\n     * When true, objects use center point as the origin of scale transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling: false,\n\n    /**\n     * When true, objects use center point as the origin of rotate transformation.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation: false,\n\n    /**\n     * Indicates which key enable centered Transform\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    centeredKey: 'altKey',\n\n    /**\n     * Indicates which key enable alternate action on corner\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled feature disabled.\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    altActionKey: 'shiftKey',\n\n    /**\n     * Indicates that canvas is interactive. This property should not be changed.\n     * @type Boolean\n     * @default\n     */\n    interactive: true,\n\n    /**\n     * Indicates whether group selection should be enabled\n     * @type Boolean\n     * @default\n     */\n    selection: true,\n\n    /**\n     * Indicates which key or keys enable multiple click selection\n     * Pass value as a string or array of strings\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * If `null` or empty or containing any other string that is not a modifier key\n     * feature is disabled.\n     * @since 1.6.2\n     * @type String|Array\n     * @default\n     */\n    selectionKey: 'shiftKey',\n\n    /**\n     * Indicates which key enable alternative selection\n     * in case of target overlapping with active object\n     * values: 'altKey', 'shiftKey', 'ctrlKey'.\n     * For a series of reason that come from the general expectations on how\n     * things should work, this feature works only for preserveObjectStacking true.\n     * If `null` or 'none' or any other string that is not a modifier key\n     * feature is disabled.\n     * @since 1.6.5\n     * @type null|String\n     * @default\n     */\n    altSelectionKey: null,\n\n    /**\n     * Color of selection\n     * @type String\n     * @default\n     */\n    selectionColor: 'rgba(100, 100, 255, 0.3)',\n    // blue\n\n    /**\n     * Default dash array pattern\n     * If not empty the selection border is dashed\n     * @type Array\n     */\n    selectionDashArray: [],\n\n    /**\n     * Color of the border of selection (usually slightly darker than color of selection itself)\n     * @type String\n     * @default\n     */\n    selectionBorderColor: 'rgba(255, 255, 255, 0.3)',\n\n    /**\n     * Width of a line used in object/group selection\n     * @type Number\n     * @default\n     */\n    selectionLineWidth: 1,\n\n    /**\n     * Select only shapes that are fully contained in the dragged selection rectangle.\n     * @type Boolean\n     * @default\n     */\n    selectionFullyContained: false,\n\n    /**\n     * Default cursor value used when hovering over an object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor: 'move',\n\n    /**\n     * Default cursor value used when moving an object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor: 'move',\n\n    /**\n     * Default cursor value used for the entire canvas\n     * @type String\n     * @default\n     */\n    defaultCursor: 'default',\n\n    /**\n     * Cursor value used during free drawing\n     * @type String\n     * @default\n     */\n    freeDrawingCursor: 'crosshair',\n\n    /**\n     * Cursor value used for rotation point\n     * @type String\n     * @default\n     */\n    rotationCursor: 'crosshair',\n\n    /**\n     * Cursor value used for disabled elements ( corners with disabled action )\n     * @type String\n     * @since 2.0.0\n     * @default\n     */\n    notAllowedCursor: 'not-allowed',\n\n    /**\n     * Default element class that's given to wrapper (div) element of canvas\n     * @type String\n     * @default\n     */\n    containerClass: 'canvas-container',\n\n    /**\n     * When true, object detection happens on per-pixel basis rather than on per-bounding-box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind: false,\n\n    /**\n     * Number of pixels around target pixel to tolerate (consider active) during object detection\n     * @type Number\n     * @default\n     */\n    targetFindTolerance: 0,\n\n    /**\n     * When true, target detection is skipped when hovering over canvas. This can be used to improve performance.\n     * @type Boolean\n     * @default\n     */\n    skipTargetFind: false,\n\n    /**\n     * When true, mouse events on canvas (mousedown/mousemove/mouseup) result in free drawing.\n     * After mousedown, mousemove creates a shape,\n     * and then mouseup finalizes it and adds an instance of `fabric.Path` onto canvas.\n     * @tutorial {@link http://fabricjs.com/fabric-intro-part-4#free_drawing}\n     * @type Boolean\n     * @default\n     */\n    isDrawingMode: false,\n\n    /**\n     * Indicates whether objects should remain in current stack position when selected.\n     * When false objects are brought to top and rendered as part of the selection group\n     * @type Boolean\n     * @default\n     */\n    preserveObjectStacking: false,\n\n    /**\n     * Indicates the angle that an object will lock to while rotating.\n     * @type Number\n     * @since 1.6.7\n     * @default\n     */\n    snapAngle: 0,\n\n    /**\n     * Indicates the distance from the snapAngle the rotation will lock to the snapAngle.\n     * When `null`, the snapThreshold will default to the snapAngle.\n     * @type null|Number\n     * @since 1.6.7\n     * @default\n     */\n    snapThreshold: null,\n\n    /**\n     * Indicates if the right click on canvas can output the context menu or not\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    stopContextMenu: false,\n\n    /**\n     * Indicates if the canvas can fire right click events\n     * @type Boolean\n     * @since 1.6.5\n     * @default\n     */\n    fireRightClick: false,\n\n    /**\n     * Indicates if the canvas can fire middle click events\n     * @type Boolean\n     * @since 1.7.8\n     * @default\n     */\n    fireMiddleClick: false,\n\n    /**\n     * @private\n     */\n    _initInteractive: function _initInteractive() {\n      this._currentTransform = null;\n      this._groupSelector = null;\n\n      this._initWrapperElement();\n\n      this._createUpperCanvas();\n\n      this._initEventListeners();\n\n      this._initRetinaScaling();\n\n      this.freeDrawingBrush = fabric.PencilBrush && new fabric.PencilBrush(this);\n      this.calcOffset();\n    },\n\n    /**\n     * Divides objects in two groups, one to render immediately\n     * and one to render as activeGroup.\n     * @return {Array} objects to render immediately and pushes the other in the activeGroup.\n     */\n    _chooseObjectsToRender: function _chooseObjectsToRender() {\n      var activeObjects = this.getActiveObjects(),\n          object,\n          objsToRender,\n          activeGroupObjects;\n\n      if (activeObjects.length > 0 && !this.preserveObjectStacking) {\n        objsToRender = [];\n        activeGroupObjects = [];\n\n        for (var i = 0, length = this._objects.length; i < length; i++) {\n          object = this._objects[i];\n\n          if (activeObjects.indexOf(object) === -1) {\n            objsToRender.push(object);\n          } else {\n            activeGroupObjects.push(object);\n          }\n        }\n\n        if (activeObjects.length > 1) {\n          this._activeObject._objects = activeGroupObjects;\n        }\n\n        objsToRender.push.apply(objsToRender, activeGroupObjects);\n      } else {\n        objsToRender = this._objects;\n      }\n\n      return objsToRender;\n    },\n\n    /**\n     * Renders both the top canvas and the secondary container canvas.\n     * @return {fabric.Canvas} instance\n     * @chainable\n     */\n    renderAll: function renderAll() {\n      if (this.contextTopDirty && !this._groupSelector && !this.isDrawingMode) {\n        this.clearContext(this.contextTop);\n        this.contextTopDirty = false;\n      }\n\n      if (this.hasLostContext) {\n        this.renderTopLayer(this.contextTop);\n      }\n\n      var canvasToDrawOn = this.contextContainer;\n      this.renderCanvas(canvasToDrawOn, this._chooseObjectsToRender());\n      return this;\n    },\n    renderTopLayer: function renderTopLayer(ctx) {\n      ctx.save();\n\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this.freeDrawingBrush && this.freeDrawingBrush._render();\n        this.contextTopDirty = true;\n      } // we render the top context - last object\n\n\n      if (this.selection && this._groupSelector) {\n        this._drawSelection(ctx);\n\n        this.contextTopDirty = true;\n      }\n\n      ctx.restore();\n    },\n\n    /**\n     * Method to render only the top canvas.\n     * Also used to render the group selection box.\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    renderTop: function renderTop() {\n      var ctx = this.contextTop;\n      this.clearContext(ctx);\n      this.renderTopLayer(ctx);\n      this.fire('after:render');\n      return this;\n    },\n\n    /**\n     * Resets the current transform to its original values and chooses the type of resizing based on the event\n     * @private\n     */\n    _resetCurrentTransform: function _resetCurrentTransform() {\n      var t = this._currentTransform;\n      t.target.set({\n        scaleX: t.original.scaleX,\n        scaleY: t.original.scaleY,\n        skewX: t.original.skewX,\n        skewY: t.original.skewY,\n        left: t.original.left,\n        top: t.original.top\n      });\n\n      if (this._shouldCenterTransform(t.target)) {\n        if (t.originX !== 'center') {\n          if (t.originX === 'right') {\n            t.mouseXSign = -1;\n          } else {\n            t.mouseXSign = 1;\n          }\n        }\n\n        if (t.originY !== 'center') {\n          if (t.originY === 'bottom') {\n            t.mouseYSign = -1;\n          } else {\n            t.mouseYSign = 1;\n          }\n        }\n\n        t.originX = 'center';\n        t.originY = 'center';\n      } else {\n        t.originX = t.original.originX;\n        t.originY = t.original.originY;\n      }\n    },\n\n    /**\n     * Checks if point is contained within an area of given object\n     * @param {Event} e Event object\n     * @param {fabric.Object} target Object to test against\n     * @param {Object} [point] x,y object of point coordinates we want to check.\n     * @return {Boolean} true if point is contained within an area of given object\n     */\n    containsPoint: function containsPoint(e, target, point) {\n      var ignoreZoom = true,\n          pointer = point || this.getPointer(e, ignoreZoom),\n          xy;\n\n      if (target.group && target.group === this._activeObject && target.group.type === 'activeSelection') {\n        xy = this._normalizePointer(target.group, pointer);\n      } else {\n        xy = {\n          x: pointer.x,\n          y: pointer.y\n        };\n      } // http://www.geog.ubc.ca/courses/klink/gis.notes/ncgia/u32.html\n      // http://idav.ucdavis.edu/~okreylos/TAship/Spring2000/PointInPolygon.html\n\n\n      return target.containsPoint(xy) || target._findTargetCorner(pointer);\n    },\n\n    /**\n     * @private\n     */\n    _normalizePointer: function _normalizePointer(object, pointer) {\n      var m = object.calcTransformMatrix(),\n          invertedM = fabric.util.invertTransform(m),\n          vptPointer = this.restorePointerVpt(pointer);\n      return fabric.util.transformPoint(vptPointer, invertedM);\n    },\n\n    /**\n     * Returns true if object is transparent at a certain location\n     * @param {fabric.Object} target Object to check\n     * @param {Number} x Left coordinate\n     * @param {Number} y Top coordinate\n     * @return {Boolean}\n     */\n    isTargetTransparent: function isTargetTransparent(target, x, y) {\n      // in case the target is the activeObject, we cannot execute this optimization\n      // because we need to draw controls too.\n      if (target.shouldCache() && target._cacheCanvas && target !== this._activeObject) {\n        var normalizedPointer = this._normalizePointer(target, {\n          x: x,\n          y: y\n        }),\n            targetRelativeX = Math.max(target.cacheTranslationX + normalizedPointer.x * target.zoomX, 0),\n            targetRelativeY = Math.max(target.cacheTranslationY + normalizedPointer.y * target.zoomY, 0);\n\n        var isTransparent = fabric.util.isTransparent(target._cacheContext, Math.round(targetRelativeX), Math.round(targetRelativeY), this.targetFindTolerance);\n        return isTransparent;\n      }\n\n      var ctx = this.contextCache,\n          originalColor = target.selectionBackgroundColor,\n          v = this.viewportTransform;\n      target.selectionBackgroundColor = '';\n      this.clearContext(ctx);\n      ctx.save();\n      ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n      target.render(ctx);\n      ctx.restore();\n      target === this._activeObject && target._renderControls(ctx, {\n        hasBorders: false,\n        transparentCorners: false\n      }, {\n        hasBorders: false\n      });\n      target.selectionBackgroundColor = originalColor;\n      var isTransparent = fabric.util.isTransparent(ctx, x, y, this.targetFindTolerance);\n      return isTransparent;\n    },\n\n    /**\n     * takes an event and determins if selection key has been pressed\n     * @private\n     * @param {Event} e Event object\n     */\n    _isSelectionKeyPressed: function _isSelectionKeyPressed(e) {\n      var selectionKeyPressed = false;\n\n      if (Object.prototype.toString.call(this.selectionKey) === '[object Array]') {\n        selectionKeyPressed = !!this.selectionKey.find(function (key) {\n          return e[key] === true;\n        });\n      } else {\n        selectionKeyPressed = e[this.selectionKey];\n      }\n\n      return selectionKeyPressed;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _shouldClearSelection: function _shouldClearSelection(e, target) {\n      var activeObjects = this.getActiveObjects(),\n          activeObject = this._activeObject;\n      return !target || target && activeObject && activeObjects.length > 1 && activeObjects.indexOf(target) === -1 && activeObject !== target && !this._isSelectionKeyPressed(e) || target && !target.evented || target && !target.selectable && activeObject && activeObject !== target;\n    },\n\n    /**\n     * centeredScaling from object can't override centeredScaling from canvas.\n     * this should be fixed, since object setting should take precedence over canvas.\n     * @private\n     * @param {fabric.Object} target\n     */\n    _shouldCenterTransform: function _shouldCenterTransform(target) {\n      if (!target) {\n        return;\n      }\n\n      var t = this._currentTransform,\n          centerTransform;\n\n      if (t.action === 'scale' || t.action === 'scaleX' || t.action === 'scaleY') {\n        centerTransform = this.centeredScaling || target.centeredScaling;\n      } else if (t.action === 'rotate') {\n        centerTransform = this.centeredRotation || target.centeredRotation;\n      }\n\n      return centerTransform ? !t.altKey : t.altKey;\n    },\n\n    /**\n     * @private\n     */\n    _getOriginFromCorner: function _getOriginFromCorner(target, corner) {\n      var origin = {\n        x: target.originX,\n        y: target.originY\n      };\n\n      if (corner === 'ml' || corner === 'tl' || corner === 'bl') {\n        origin.x = 'right';\n      } else if (corner === 'mr' || corner === 'tr' || corner === 'br') {\n        origin.x = 'left';\n      }\n\n      if (corner === 'tl' || corner === 'mt' || corner === 'tr') {\n        origin.y = 'bottom';\n      } else if (corner === 'bl' || corner === 'mb' || corner === 'br') {\n        origin.y = 'top';\n      }\n\n      return origin;\n    },\n\n    /**\n     * @private\n     * @param {Boolean} alreadySelected true if target is already selected\n     * @param {String} corner a string representing the corner ml, mr, tl ...\n     * @param {Event} e Event object\n     * @param {fabric.Object} [target] inserted back to help overriding. Unused\n     */\n    _getActionFromCorner: function _getActionFromCorner(alreadySelected, corner, e\n    /* target */\n    ) {\n      if (!corner || !alreadySelected) {\n        return 'drag';\n      }\n\n      switch (corner) {\n        case 'mtr':\n          return 'rotate';\n\n        case 'ml':\n        case 'mr':\n          return e[this.altActionKey] ? 'skewY' : 'scaleX';\n\n        case 'mt':\n        case 'mb':\n          return e[this.altActionKey] ? 'skewX' : 'scaleY';\n\n        default:\n          return 'scale';\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _setupCurrentTransform: function _setupCurrentTransform(e, target, alreadySelected) {\n      if (!target) {\n        return;\n      }\n\n      var pointer = this.getPointer(e),\n          corner = target._findTargetCorner(this.getPointer(e, true)),\n          action = this._getActionFromCorner(alreadySelected, corner, e, target),\n          origin = this._getOriginFromCorner(target, corner);\n\n      this._currentTransform = {\n        target: target,\n        action: action,\n        corner: corner,\n        scaleX: target.scaleX,\n        scaleY: target.scaleY,\n        skewX: target.skewX,\n        skewY: target.skewY,\n        // used by transation\n        offsetX: pointer.x - target.left,\n        offsetY: pointer.y - target.top,\n        originX: origin.x,\n        originY: origin.y,\n        ex: pointer.x,\n        ey: pointer.y,\n        lastX: pointer.x,\n        lastY: pointer.y,\n        // unsure they are usefull anymore.\n        // left: target.left,\n        // top: target.top,\n        theta: degreesToRadians(target.angle),\n        // end of unsure\n        width: target.width * target.scaleX,\n        mouseXSign: 1,\n        mouseYSign: 1,\n        shiftKey: e.shiftKey,\n        altKey: e[this.centeredKey],\n        original: fabric.util.saveObjectTransform(target)\n      };\n      this._currentTransform.original.originX = origin.x;\n      this._currentTransform.original.originY = origin.y;\n\n      this._resetCurrentTransform();\n\n      this._beforeTransform(e);\n    },\n\n    /**\n     * Translates object by \"setting\" its left/top\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the translation occurred\n     */\n    _translateObject: function _translateObject(x, y) {\n      var transform = this._currentTransform,\n          target = transform.target,\n          newLeft = x - transform.offsetX,\n          newTop = y - transform.offsetY,\n          moveX = !target.get('lockMovementX') && target.left !== newLeft,\n          moveY = !target.get('lockMovementY') && target.top !== newTop;\n      moveX && target.set('left', newLeft);\n      moveY && target.set('top', newTop);\n      return moveX || moveY;\n    },\n\n    /**\n     * Check if we are increasing a positive skew or lower it,\n     * checking mouse direction and pressed corner.\n     * @private\n     */\n    _changeSkewTransformOrigin: function _changeSkewTransformOrigin(mouseMove, t, by) {\n      var property = 'originX',\n          origins = {\n        0: 'center'\n      },\n          skew = t.target.skewX,\n          originA = 'left',\n          originB = 'right',\n          corner = t.corner === 'mt' || t.corner === 'ml' ? 1 : -1,\n          flipSign = 1;\n      mouseMove = mouseMove > 0 ? 1 : -1;\n\n      if (by === 'y') {\n        skew = t.target.skewY;\n        originA = 'top';\n        originB = 'bottom';\n        property = 'originY';\n      }\n\n      origins[-1] = originA;\n      origins[1] = originB;\n      t.target.flipX && (flipSign *= -1);\n      t.target.flipY && (flipSign *= -1);\n\n      if (skew === 0) {\n        t.skewSign = -corner * mouseMove * flipSign;\n        t[property] = origins[-mouseMove];\n      } else {\n        skew = skew > 0 ? 1 : -1;\n        t.skewSign = skew;\n        t[property] = origins[skew * corner * flipSign];\n      }\n    },\n\n    /**\n     * Skew object by mouse events\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y'\n     * @return {Boolean} true if the skewing occurred\n     */\n    _skewObject: function _skewObject(x, y, by) {\n      var t = this._currentTransform,\n          target = t.target,\n          skewed = false,\n          lockSkewingX = target.get('lockSkewingX'),\n          lockSkewingY = target.get('lockSkewingY');\n\n      if (lockSkewingX && by === 'x' || lockSkewingY && by === 'y') {\n        return false;\n      } // Get the constraint point\n\n\n      var center = target.getCenterPoint(),\n          actualMouseByCenter = target.toLocalPoint(new fabric.Point(x, y), 'center', 'center')[by],\n          lastMouseByCenter = target.toLocalPoint(new fabric.Point(t.lastX, t.lastY), 'center', 'center')[by],\n          actualMouseByOrigin,\n          constraintPosition,\n          dim = target._getTransformedDimensions();\n\n      this._changeSkewTransformOrigin(actualMouseByCenter - lastMouseByCenter, t, by);\n\n      actualMouseByOrigin = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY)[by];\n      constraintPosition = target.translateToOriginPoint(center, t.originX, t.originY); // Actually skew the object\n\n      skewed = this._setObjectSkew(actualMouseByOrigin, t, by, dim);\n      t.lastX = x;\n      t.lastY = y; // Make sure the constraints apply\n\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return skewed;\n    },\n\n    /**\n     * Set object skew\n     * @private\n     * @return {Boolean} true if the skewing occurred\n     */\n    _setObjectSkew: function _setObjectSkew(localMouse, transform, by, _dim) {\n      var target = transform.target,\n          newValue,\n          skewed = false,\n          skewSign = transform.skewSign,\n          newDim,\n          dimNoSkew,\n          otherBy,\n          _otherBy,\n          _by,\n          newDimMouse,\n          skewX,\n          skewY;\n\n      if (by === 'x') {\n        otherBy = 'y';\n        _otherBy = 'Y';\n        _by = 'X';\n        skewX = 0;\n        skewY = target.skewY;\n      } else {\n        otherBy = 'x';\n        _otherBy = 'X';\n        _by = 'Y';\n        skewX = target.skewX;\n        skewY = 0;\n      }\n\n      dimNoSkew = target._getTransformedDimensions(skewX, skewY);\n      newDimMouse = 2 * Math.abs(localMouse) - dimNoSkew[by];\n\n      if (newDimMouse <= 2) {\n        newValue = 0;\n      } else {\n        newValue = skewSign * Math.atan(newDimMouse / target['scale' + _by] / (dimNoSkew[otherBy] / target['scale' + _otherBy]));\n        newValue = fabric.util.radiansToDegrees(newValue);\n      }\n\n      skewed = target['skew' + _by] !== newValue;\n      target.set('skew' + _by, newValue);\n\n      if (target['skew' + _otherBy] !== 0) {\n        newDim = target._getTransformedDimensions();\n        newValue = _dim[otherBy] / newDim[otherBy] * target['scale' + _otherBy];\n        target.set('scale' + _otherBy, newValue);\n      }\n\n      return skewed;\n    },\n\n    /**\n     * Scales object by invoking its scaleX/scaleY methods\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @param {String} by Either 'x' or 'y' - specifies dimension constraint by which to scale an object.\n     *                    When not provided, an object is scaled by both dimensions equally\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObject: function _scaleObject(x, y, by) {\n      var t = this._currentTransform,\n          target = t.target,\n          lockScalingX = target.lockScalingX,\n          lockScalingY = target.lockScalingY,\n          lockScalingFlip = target.lockScalingFlip;\n\n      if (lockScalingX && lockScalingY) {\n        return false;\n      } // Get the constraint point\n\n\n      var constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY),\n          localMouse = target.toLocalPoint(new fabric.Point(x, y), t.originX, t.originY),\n          dim = target._getTransformedDimensions(),\n          scaled = false;\n\n      this._setLocalMouse(localMouse, t); // Actually scale the object\n\n\n      scaled = this._setObjectScale(localMouse, t, lockScalingX, lockScalingY, by, lockScalingFlip, dim); // Make sure the constraints apply\n\n      target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _setObjectScale: function _setObjectScale(localMouse, transform, lockScalingX, lockScalingY, by, lockScalingFlip, _dim) {\n      var target = transform.target,\n          forbidScalingX = false,\n          forbidScalingY = false,\n          scaled = false,\n          scaleX = localMouse.x * target.scaleX / _dim.x,\n          scaleY = localMouse.y * target.scaleY / _dim.y,\n          changeX = target.scaleX !== scaleX,\n          changeY = target.scaleY !== scaleY;\n      transform.newScaleX = scaleX;\n      transform.newScaleY = scaleY;\n\n      if (by === 'x' && target instanceof fabric.Textbox) {\n        var w = target.width * (localMouse.x / _dim.x);\n\n        if (w >= target.getMinWidth()) {\n          scaled = w !== target.width;\n          target.set('width', w);\n          return scaled;\n        }\n\n        return false;\n      }\n\n      if (lockScalingFlip && scaleX <= 0 && scaleX < target.scaleX) {\n        forbidScalingX = true;\n        localMouse.x = 0;\n      }\n\n      if (lockScalingFlip && scaleY <= 0 && scaleY < target.scaleY) {\n        forbidScalingY = true;\n        localMouse.y = 0;\n      }\n\n      if (by === 'equally' && !lockScalingX && !lockScalingY) {\n        scaled = this._scaleObjectEqually(localMouse, target, transform, _dim);\n      } else if (!by) {\n        forbidScalingX || lockScalingX || target.set('scaleX', scaleX) && (scaled = scaled || changeX);\n        forbidScalingY || lockScalingY || target.set('scaleY', scaleY) && (scaled = scaled || changeY);\n      } else if (by === 'x' && !target.get('lockUniScaling')) {\n        forbidScalingX || lockScalingX || target.set('scaleX', scaleX) && (scaled = changeX);\n      } else if (by === 'y' && !target.get('lockUniScaling')) {\n        forbidScalingY || lockScalingY || target.set('scaleY', scaleY) && (scaled = changeY);\n      }\n\n      forbidScalingX || forbidScalingY || this._flipObject(transform, by);\n      return scaled;\n    },\n\n    /**\n     * @private\n     * @return {Boolean} true if the scaling occurred\n     */\n    _scaleObjectEqually: function _scaleObjectEqually(localMouse, target, transform, _dim) {\n      var dist = localMouse.y + localMouse.x,\n          lastDist = _dim.y * transform.original.scaleY / target.scaleY + _dim.x * transform.original.scaleX / target.scaleX,\n          scaled,\n          signX = localMouse.x < 0 ? -1 : 1,\n          signY = localMouse.y < 0 ? -1 : 1,\n          newScaleX,\n          newScaleY; // We use transform.scaleX/Y instead of target.scaleX/Y\n      // because the object may have a min scale and we'll loose the proportions\n\n      newScaleX = signX * Math.abs(transform.original.scaleX * dist / lastDist);\n      newScaleY = signY * Math.abs(transform.original.scaleY * dist / lastDist);\n      scaled = newScaleX !== target.scaleX || newScaleY !== target.scaleY;\n      target.set('scaleX', newScaleX);\n      target.set('scaleY', newScaleY);\n      return scaled;\n    },\n\n    /**\n     * @private\n     */\n    _flipObject: function _flipObject(transform, by) {\n      if (transform.newScaleX < 0 && by !== 'y') {\n        if (transform.originX === 'left') {\n          transform.originX = 'right';\n        } else if (transform.originX === 'right') {\n          transform.originX = 'left';\n        }\n      }\n\n      if (transform.newScaleY < 0 && by !== 'x') {\n        if (transform.originY === 'top') {\n          transform.originY = 'bottom';\n        } else if (transform.originY === 'bottom') {\n          transform.originY = 'top';\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setLocalMouse: function _setLocalMouse(localMouse, t) {\n      var target = t.target,\n          zoom = this.getZoom(),\n          padding = target.padding / zoom;\n\n      if (t.originX === 'right') {\n        localMouse.x *= -1;\n      } else if (t.originX === 'center') {\n        localMouse.x *= t.mouseXSign * 2;\n\n        if (localMouse.x < 0) {\n          t.mouseXSign = -t.mouseXSign;\n        }\n      }\n\n      if (t.originY === 'bottom') {\n        localMouse.y *= -1;\n      } else if (t.originY === 'center') {\n        localMouse.y *= t.mouseYSign * 2;\n\n        if (localMouse.y < 0) {\n          t.mouseYSign = -t.mouseYSign;\n        }\n      } // adjust the mouse coordinates when dealing with padding\n\n\n      if (abs(localMouse.x) > padding) {\n        if (localMouse.x < 0) {\n          localMouse.x += padding;\n        } else {\n          localMouse.x -= padding;\n        }\n      } else {\n        // mouse is within the padding, set to 0\n        localMouse.x = 0;\n      }\n\n      if (abs(localMouse.y) > padding) {\n        if (localMouse.y < 0) {\n          localMouse.y += padding;\n        } else {\n          localMouse.y -= padding;\n        }\n      } else {\n        localMouse.y = 0;\n      }\n    },\n\n    /**\n     * Rotates object by invoking its rotate method\n     * @private\n     * @param {Number} x pointer's x coordinate\n     * @param {Number} y pointer's y coordinate\n     * @return {Boolean} true if the rotation occurred\n     */\n    _rotateObject: function _rotateObject(x, y) {\n      var t = this._currentTransform,\n          target = t.target,\n          constraintPosition,\n          constraintPosition = target.translateToOriginPoint(target.getCenterPoint(), t.originX, t.originY);\n\n      if (target.lockRotation) {\n        return false;\n      }\n\n      var lastAngle = atan2(t.ey - constraintPosition.y, t.ex - constraintPosition.x),\n          curAngle = atan2(y - constraintPosition.y, x - constraintPosition.x),\n          angle = radiansToDegrees(curAngle - lastAngle + t.theta),\n          hasRotated = true;\n\n      if (target.snapAngle > 0) {\n        var snapAngle = target.snapAngle,\n            snapThreshold = target.snapThreshold || snapAngle,\n            rightAngleLocked = Math.ceil(angle / snapAngle) * snapAngle,\n            leftAngleLocked = Math.floor(angle / snapAngle) * snapAngle;\n\n        if (Math.abs(angle - leftAngleLocked) < snapThreshold) {\n          angle = leftAngleLocked;\n        } else if (Math.abs(angle - rightAngleLocked) < snapThreshold) {\n          angle = rightAngleLocked;\n        }\n      } // normalize angle to positive value\n\n\n      if (angle < 0) {\n        angle = 360 + angle;\n      }\n\n      angle %= 360;\n\n      if (target.angle === angle) {\n        hasRotated = false;\n      } else {\n        // rotation only happen here\n        target.angle = angle; // Make sure the constraints apply\n\n        target.setPositionByOrigin(constraintPosition, t.originX, t.originY);\n      }\n\n      return hasRotated;\n    },\n\n    /**\n     * Set the cursor type of the canvas element\n     * @param {String} value Cursor type of the canvas element.\n     * @see http://www.w3.org/TR/css3-ui/#cursor\n     */\n    setCursor: function setCursor(value) {\n      this.upperCanvasEl.style.cursor = value;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx to draw the selection on\n     */\n    _drawSelection: function _drawSelection(ctx) {\n      var groupSelector = this._groupSelector,\n          left = groupSelector.left,\n          top = groupSelector.top,\n          aleft = abs(left),\n          atop = abs(top);\n\n      if (this.selectionColor) {\n        ctx.fillStyle = this.selectionColor;\n        ctx.fillRect(groupSelector.ex - (left > 0 ? 0 : -left), groupSelector.ey - (top > 0 ? 0 : -top), aleft, atop);\n      }\n\n      if (!this.selectionLineWidth || !this.selectionBorderColor) {\n        return;\n      }\n\n      ctx.lineWidth = this.selectionLineWidth;\n      ctx.strokeStyle = this.selectionBorderColor; // selection border\n\n      if (this.selectionDashArray.length > 1 && !supportLineDash) {\n        var px = groupSelector.ex + STROKE_OFFSET - (left > 0 ? 0 : aleft),\n            py = groupSelector.ey + STROKE_OFFSET - (top > 0 ? 0 : atop);\n        ctx.beginPath();\n        fabric.util.drawDashedLine(ctx, px, py, px + aleft, py, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py + atop - 1, px + aleft, py + atop - 1, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px, py, px, py + atop, this.selectionDashArray);\n        fabric.util.drawDashedLine(ctx, px + aleft - 1, py, px + aleft - 1, py + atop, this.selectionDashArray);\n        ctx.closePath();\n        ctx.stroke();\n      } else {\n        fabric.Object.prototype._setLineDash.call(this, ctx, this.selectionDashArray);\n\n        ctx.strokeRect(groupSelector.ex + STROKE_OFFSET - (left > 0 ? 0 : aleft), groupSelector.ey + STROKE_OFFSET - (top > 0 ? 0 : atop), aleft, atop);\n      }\n    },\n\n    /**\n     * Method that determines what object we are clicking on\n     * the skipGroup parameter is for internal use, is needed for shift+click action\n     * 11/09/2018 TODO: would be cool if findTarget could discern between being a full target\n     * or the outside part of the corner.\n     * @param {Event} e mouse event\n     * @param {Boolean} skipGroup when true, activeGroup is skipped and only objects are traversed through\n     * @return {fabric.Object} the target found\n     */\n    findTarget: function findTarget(e, skipGroup) {\n      if (this.skipTargetFind) {\n        return;\n      }\n\n      var ignoreZoom = true,\n          pointer = this.getPointer(e, ignoreZoom),\n          activeObject = this._activeObject,\n          aObjects = this.getActiveObjects(),\n          activeTarget,\n          activeTargetSubs; // first check current group (if one exists)\n      // active group does not check sub targets like normal groups.\n      // if active group just exits.\n\n      this.targets = [];\n\n      if (aObjects.length > 1 && !skipGroup && activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n        return activeObject;\n      } // if we hit the corner of an activeObject, let's return that.\n\n\n      if (aObjects.length === 1 && activeObject._findTargetCorner(pointer)) {\n        return activeObject;\n      }\n\n      if (aObjects.length === 1 && activeObject === this._searchPossibleTargets([activeObject], pointer)) {\n        if (!this.preserveObjectStacking) {\n          return activeObject;\n        } else {\n          activeTarget = activeObject;\n          activeTargetSubs = this.targets;\n          this.targets = [];\n        }\n      }\n\n      var target = this._searchPossibleTargets(this._objects, pointer);\n\n      if (e[this.altSelectionKey] && target && activeTarget && target !== activeTarget) {\n        target = activeTarget;\n        this.targets = activeTargetSubs;\n      }\n\n      return target;\n    },\n\n    /**\n     * Checks point is inside the object.\n     * @param {Object} [pointer] x,y object of point coordinates we want to check.\n     * @param {fabric.Object} obj Object to test against\n     * @param {Object} [globalPointer] x,y object of point coordinates relative to canvas used to search per pixel target.\n     * @return {Boolean} true if point is contained within an area of given object\n     * @private\n     */\n    _checkTarget: function _checkTarget(pointer, obj, globalPointer) {\n      if (obj && obj.visible && obj.evented && this.containsPoint(null, obj, pointer)) {\n        if ((this.perPixelTargetFind || obj.perPixelTargetFind) && !obj.isEditing) {\n          var isTransparent = this.isTargetTransparent(obj, globalPointer.x, globalPointer.y);\n\n          if (!isTransparent) {\n            return true;\n          }\n        } else {\n          return true;\n        }\n      }\n    },\n\n    /**\n     * Function used to search inside objects an object that contains pointer in bounding box or that contains pointerOnCanvas when painted\n     * @param {Array} [objects] objects array to look into\n     * @param {Object} [pointer] x,y object of point coordinates we want to check.\n     * @return {fabric.Object} object that contains pointer\n     * @private\n     */\n    _searchPossibleTargets: function _searchPossibleTargets(objects, pointer) {\n      // Cache all targets where their bounding box contains point.\n      var target,\n          i = objects.length,\n          subTarget; // Do not check for currently grouped objects, since we check the parent group itself.\n      // until we call this function specifically to search inside the activeGroup\n\n      while (i--) {\n        var objToCheck = objects[i];\n        var pointerToUse = objToCheck.group && objToCheck.group.type !== 'activeSelection' ? this._normalizePointer(objToCheck.group, pointer) : pointer;\n\n        if (this._checkTarget(pointerToUse, objToCheck, pointer)) {\n          target = objects[i];\n\n          if (target.subTargetCheck && target instanceof fabric.Group) {\n            subTarget = this._searchPossibleTargets(target._objects, pointer);\n            subTarget && this.targets.push(subTarget);\n          }\n\n          break;\n        }\n      }\n\n      return target;\n    },\n\n    /**\n     * Returns pointer coordinates without the effect of the viewport\n     * @param {Object} pointer with \"x\" and \"y\" number values\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    restorePointerVpt: function restorePointerVpt(pointer) {\n      return fabric.util.transformPoint(pointer, fabric.util.invertTransform(this.viewportTransform));\n    },\n\n    /**\n     * Returns pointer coordinates relative to canvas.\n     * Can return coordinates with or without viewportTransform.\n     * ignoreZoom false gives back coordinates that represent\n     * the point clicked on canvas element.\n     * ignoreZoom true gives back coordinates after being processed\n     * by the viewportTransform ( sort of coordinates of what is displayed\n     * on the canvas where you are clicking.\n     * ignoreZoom true = HTMLElement coordinates relative to top,left\n     * ignoreZoom false, default = fabric space coordinates, the same used for shape position\n     * To interact with your shapes top and left you want to use ignoreZoom true\n     * most of the time, while ignoreZoom false will give you coordinates\n     * compatible with the object.oCoords system.\n     * of the time.\n     * @param {Event} e\n     * @param {Boolean} ignoreZoom\n     * @return {Object} object with \"x\" and \"y\" number values\n     */\n    getPointer: function getPointer(e, ignoreZoom) {\n      // return cached values if we are in the event processing chain\n      if (this._absolutePointer && !ignoreZoom) {\n        return this._absolutePointer;\n      }\n\n      if (this._pointer && ignoreZoom) {\n        return this._pointer;\n      }\n\n      var pointer = _getPointer2(e),\n          upperCanvasEl = this.upperCanvasEl,\n          bounds = upperCanvasEl.getBoundingClientRect(),\n          boundsWidth = bounds.width || 0,\n          boundsHeight = bounds.height || 0,\n          cssScale;\n\n      if (!boundsWidth || !boundsHeight) {\n        if ('top' in bounds && 'bottom' in bounds) {\n          boundsHeight = Math.abs(bounds.top - bounds.bottom);\n        }\n\n        if ('right' in bounds && 'left' in bounds) {\n          boundsWidth = Math.abs(bounds.right - bounds.left);\n        }\n      }\n\n      this.calcOffset();\n      pointer.x = pointer.x - this._offset.left;\n      pointer.y = pointer.y - this._offset.top;\n\n      if (!ignoreZoom) {\n        pointer = this.restorePointerVpt(pointer);\n      }\n\n      if (boundsWidth === 0 || boundsHeight === 0) {\n        // If bounds are not available (i.e. not visible), do not apply scale.\n        cssScale = {\n          width: 1,\n          height: 1\n        };\n      } else {\n        cssScale = {\n          width: upperCanvasEl.width / boundsWidth,\n          height: upperCanvasEl.height / boundsHeight\n        };\n      }\n\n      return {\n        x: pointer.x * cssScale.width,\n        y: pointer.y * cssScale.height\n      };\n    },\n\n    /**\n     * @private\n     * @throws {CANVAS_INIT_ERROR} If canvas can not be initialized\n     */\n    _createUpperCanvas: function _createUpperCanvas() {\n      var lowerCanvasClass = this.lowerCanvasEl.className.replace(/\\s*lower-canvas\\s*/, ''); // there is no need to create a new upperCanvas element if we have already one.\n\n      if (this.upperCanvasEl) {\n        this.upperCanvasEl.className = '';\n      } else {\n        this.upperCanvasEl = this._createCanvasElement();\n      }\n\n      fabric.util.addClass(this.upperCanvasEl, 'upper-canvas ' + lowerCanvasClass);\n      this.wrapperEl.appendChild(this.upperCanvasEl);\n\n      this._copyCanvasStyle(this.lowerCanvasEl, this.upperCanvasEl);\n\n      this._applyCanvasStyle(this.upperCanvasEl);\n\n      this.contextTop = this.upperCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _createCacheCanvas: function _createCacheCanvas() {\n      this.cacheCanvasEl = this._createCanvasElement();\n      this.cacheCanvasEl.setAttribute('width', this.width);\n      this.cacheCanvasEl.setAttribute('height', this.height);\n      this.contextCache = this.cacheCanvasEl.getContext('2d');\n    },\n\n    /**\n     * @private\n     */\n    _initWrapperElement: function _initWrapperElement() {\n      this.wrapperEl = fabric.util.wrapElement(this.lowerCanvasEl, 'div', {\n        'class': this.containerClass\n      });\n      fabric.util.setStyle(this.wrapperEl, {\n        width: this.width + 'px',\n        height: this.height + 'px',\n        position: 'relative'\n      });\n      fabric.util.makeElementUnselectable(this.wrapperEl);\n    },\n\n    /**\n     * @private\n     * @param {HTMLElement} element canvas element to apply styles on\n     */\n    _applyCanvasStyle: function _applyCanvasStyle(element) {\n      var width = this.width || element.width,\n          height = this.height || element.height;\n      fabric.util.setStyle(element, {\n        position: 'absolute',\n        width: width + 'px',\n        height: height + 'px',\n        left: 0,\n        top: 0,\n        'touch-action': this.allowTouchScrolling ? 'manipulation' : 'none'\n      });\n      element.width = width;\n      element.height = height;\n      fabric.util.makeElementUnselectable(element);\n    },\n\n    /**\n     * Copy the entire inline style from one element (fromEl) to another (toEl)\n     * @private\n     * @param {Element} fromEl Element style is copied from\n     * @param {Element} toEl Element copied style is applied to\n     */\n    _copyCanvasStyle: function _copyCanvasStyle(fromEl, toEl) {\n      toEl.style.cssText = fromEl.style.cssText;\n    },\n\n    /**\n     * Returns context of canvas where object selection is drawn\n     * @return {CanvasRenderingContext2D}\n     */\n    getSelectionContext: function getSelectionContext() {\n      return this.contextTop;\n    },\n\n    /**\n     * Returns &lt;canvas> element on which object selection is drawn\n     * @return {HTMLCanvasElement}\n     */\n    getSelectionElement: function getSelectionElement() {\n      return this.upperCanvasEl;\n    },\n\n    /**\n     * Returns currently active object\n     * @return {fabric.Object} active object\n     */\n    getActiveObject: function getActiveObject() {\n      return this._activeObject;\n    },\n\n    /**\n     * Returns an array with the current selected objects\n     * @return {fabric.Object} active object\n     */\n    getActiveObjects: function getActiveObjects() {\n      var active = this._activeObject;\n\n      if (active) {\n        if (active.type === 'activeSelection' && active._objects) {\n          return active._objects.slice(0);\n        } else {\n          return [active];\n        }\n      }\n\n      return [];\n    },\n\n    /**\n     * @private\n     * @param {fabric.Object} obj Object that was removed\n     */\n    _onObjectRemoved: function _onObjectRemoved(obj) {\n      // removing active object should fire \"selection:cleared\" events\n      if (obj === this._activeObject) {\n        this.fire('before:selection:cleared', {\n          target: obj\n        });\n\n        this._discardActiveObject();\n\n        this.fire('selection:cleared', {\n          target: obj\n        });\n        obj.fire('deselected');\n      }\n\n      if (this._hoveredTarget === obj) {\n        this._hoveredTarget = null;\n      }\n\n      this.callSuper('_onObjectRemoved', obj);\n    },\n\n    /**\n     * @private\n     * Compares the old activeObject with the current one and fires correct events\n     * @param {fabric.Object} obj old activeObject\n     */\n    _fireSelectionEvents: function _fireSelectionEvents(oldObjects, e) {\n      var somethingChanged = false,\n          objects = this.getActiveObjects(),\n          added = [],\n          removed = [],\n          opt = {\n        e: e\n      };\n      oldObjects.forEach(function (oldObject) {\n        if (objects.indexOf(oldObject) === -1) {\n          somethingChanged = true;\n          oldObject.fire('deselected', opt);\n          removed.push(oldObject);\n        }\n      });\n      objects.forEach(function (object) {\n        if (oldObjects.indexOf(object) === -1) {\n          somethingChanged = true;\n          object.fire('selected', opt);\n          added.push(object);\n        }\n      });\n\n      if (oldObjects.length > 0 && objects.length > 0) {\n        opt.selected = added;\n        opt.deselected = removed; // added for backward compatibility\n\n        opt.updated = added[0] || removed[0];\n        opt.target = this._activeObject;\n        somethingChanged && this.fire('selection:updated', opt);\n      } else if (objects.length > 0) {\n        // deprecated event\n        if (objects.length === 1) {\n          opt.target = added[0];\n          this.fire('object:selected', opt);\n        }\n\n        opt.selected = added; // added for backward compatibility\n\n        opt.target = this._activeObject;\n        this.fire('selection:created', opt);\n      } else if (oldObjects.length > 0) {\n        opt.deselected = removed;\n        this.fire('selection:cleared', opt);\n      }\n    },\n\n    /**\n     * Sets given object as the only active object on canvas\n     * @param {fabric.Object} object Object to set as an active one\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    setActiveObject: function setActiveObject(object, e) {\n      var currentActives = this.getActiveObjects();\n\n      this._setActiveObject(object, e);\n\n      this._fireSelectionEvents(currentActives, e);\n\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {Object} object to set as active\n     * @param {Event} [e] Event (passed along when firing \"object:selected\")\n     * @return {Boolean} true if the selection happened\n     */\n    _setActiveObject: function _setActiveObject(object, e) {\n      if (this._activeObject === object) {\n        return false;\n      }\n\n      if (!this._discardActiveObject(e, object)) {\n        return false;\n      }\n\n      if (object.onSelect({\n        e: e\n      })) {\n        return false;\n      }\n\n      this._activeObject = object;\n      return true;\n    },\n\n    /**\n     * @private\n     */\n    _discardActiveObject: function _discardActiveObject(e, object) {\n      var obj = this._activeObject;\n\n      if (obj) {\n        // onDeselect return TRUE to cancel selection;\n        if (obj.onDeselect({\n          e: e,\n          object: object\n        })) {\n          return false;\n        }\n\n        this._activeObject = null;\n      }\n\n      return true;\n    },\n\n    /**\n     * Discards currently active object and fire events. If the function is called by fabric\n     * as a consequence of a mouse event, the event is passed as a parameter and\n     * sent to the fire function for the custom events. When used as a method the\n     * e param does not have any application.\n     * @param {event} e\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    discardActiveObject: function discardActiveObject(e) {\n      var currentActives = this.getActiveObjects(),\n          activeObject = this.getActiveObject();\n\n      if (currentActives.length) {\n        this.fire('before:selection:cleared', {\n          target: activeObject,\n          e: e\n        });\n      }\n\n      this._discardActiveObject(e);\n\n      this._fireSelectionEvents(currentActives, e);\n\n      return this;\n    },\n\n    /**\n     * Clears a canvas element and removes all event listeners\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    dispose: function dispose() {\n      var wrapper = this.wrapperEl;\n      this.removeListeners();\n      wrapper.removeChild(this.upperCanvasEl);\n      wrapper.removeChild(this.lowerCanvasEl);\n      this.contextCache = null;\n      this.contextTop = null;\n      ['upperCanvasEl', 'cacheCanvasEl'].forEach(function (element) {\n        fabric.util.cleanUpJsdomNode(this[element]);\n        this[element] = undefined;\n      }.bind(this));\n\n      if (wrapper.parentNode) {\n        wrapper.parentNode.replaceChild(this.lowerCanvasEl, this.wrapperEl);\n      }\n\n      delete this.wrapperEl;\n      fabric.StaticCanvas.prototype.dispose.call(this);\n      return this;\n    },\n\n    /**\n     * Clears all contexts (background, main, top) of an instance\n     * @return {fabric.Canvas} thisArg\n     * @chainable\n     */\n    clear: function clear() {\n      // this.discardActiveGroup();\n      this.discardActiveObject();\n      this.clearContext(this.contextTop);\n      return this.callSuper('clear');\n    },\n\n    /**\n     * Draws objects' controls (borders/controls)\n     * @param {CanvasRenderingContext2D} ctx Context to render controls on\n     */\n    drawControls: function drawControls(ctx) {\n      var activeObject = this._activeObject;\n\n      if (activeObject) {\n        activeObject._renderControls(ctx);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _toObject: function _toObject(instance, methodName, propertiesToInclude) {\n      //If the object is part of the current selection group, it should\n      //be transformed appropriately\n      //i.e. it should be serialised as it would appear if the selection group\n      //were to be destroyed.\n      var originalProperties = this._realizeGroupTransformOnObject(instance),\n          object = this.callSuper('_toObject', instance, methodName, propertiesToInclude); //Undo the damage we did by changing all of its properties\n\n\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n\n      return object;\n    },\n\n    /**\n     * Realises an object's group transformation on it\n     * @private\n     * @param {fabric.Object} [instance] the object to transform (gets mutated)\n     * @returns the original values of instance which were changed\n     */\n    _realizeGroupTransformOnObject: function _realizeGroupTransformOnObject(instance) {\n      if (instance.group && instance.group.type === 'activeSelection' && this._activeObject === instance.group) {\n        var layoutProps = ['angle', 'flipX', 'flipY', 'left', 'scaleX', 'scaleY', 'skewX', 'skewY', 'top']; //Copy all the positionally relevant properties across now\n\n        var originalValues = {};\n        layoutProps.forEach(function (prop) {\n          originalValues[prop] = instance[prop];\n        });\n\n        this._activeObject.realizeTransform(instance);\n\n        return originalValues;\n      } else {\n        return null;\n      }\n    },\n\n    /**\n     * Restores the changed properties of instance\n     * @private\n     * @param {fabric.Object} [instance] the object to un-transform (gets mutated)\n     * @param {Object} [originalValues] the original values of instance, as returned by _realizeGroupTransformOnObject\n     */\n    _unwindGroupTransformOnObject: function _unwindGroupTransformOnObject(instance, originalValues) {\n      if (originalValues) {\n        instance.set(originalValues);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setSVGObject: function _setSVGObject(markup, instance, reviver) {\n      //If the object is in a selection group, simulate what would happen to that\n      //object when the group is deselected\n      var originalProperties = this._realizeGroupTransformOnObject(instance);\n\n      this.callSuper('_setSVGObject', markup, instance, reviver);\n\n      this._unwindGroupTransformOnObject(instance, originalProperties);\n    },\n    setViewportTransform: function setViewportTransform(vpt) {\n      if (this.renderOnAddRemove && this._activeObject && this._activeObject.isEditing) {\n        this._activeObject.clearContextTop();\n      }\n\n      fabric.StaticCanvas.prototype.setViewportTransform.call(this, vpt);\n    }\n  }); // copying static properties manually to work around Opera's bug,\n  // where \"prototype\" property is enumerable and overrides existing prototype\n\n  for (var prop in fabric.StaticCanvas) {\n    if (prop !== 'prototype') {\n      fabric.Canvas[prop] = fabric.StaticCanvas[prop];\n    }\n  }\n\n  if (fabric.isTouchSupported) {\n    /** @ignore */\n    fabric.Canvas.prototype._setCursorFromEvent = function () {};\n  }\n})();\n\n(function () {\n  var cursorOffset = {\n    mt: 0,\n    // n\n    tr: 1,\n    // ne\n    mr: 2,\n    // e\n    br: 3,\n    // se\n    mb: 4,\n    // s\n    bl: 5,\n    // sw\n    ml: 6,\n    // w\n    tl: 7 // nw\n\n  },\n      addListener = fabric.util.addListener,\n      removeListener = fabric.util.removeListener,\n      RIGHT_CLICK = 3,\n      MIDDLE_CLICK = 2,\n      LEFT_CLICK = 1,\n      addEventOptions = {\n    passive: false\n  };\n\n  function checkClick(e, value) {\n    return 'which' in e ? e.which === value : e.button === value - 1;\n  }\n\n  fabric.util.object.extend(fabric.Canvas.prototype,\n  /** @lends fabric.Canvas.prototype */\n  {\n    /**\n     * Map of cursor style values for each of the object controls\n     * @private\n     */\n    cursorMap: ['n-resize', 'ne-resize', 'e-resize', 'se-resize', 's-resize', 'sw-resize', 'w-resize', 'nw-resize'],\n\n    /**\n     * Adds mouse listeners to canvas\n     * @private\n     */\n    _initEventListeners: function _initEventListeners() {\n      // in case we initialized the class twice. This should not happen normally\n      // but in some kind of applications where the canvas element may be changed\n      // this is a workaround to having double listeners.\n      this.removeListeners();\n\n      this._bindEvents();\n\n      this.addOrRemove(addListener, 'add');\n    },\n    addOrRemove: function addOrRemove(functor, eventjsFunctor) {\n      var canvasElement = this.upperCanvasEl,\n          eventTypePrefix = this.enablePointerEvents ? 'pointer' : 'mouse';\n      functor(fabric.window, 'resize', this._onResize);\n      functor(canvasElement, eventTypePrefix + 'down', this._onMouseDown);\n      functor(canvasElement, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n      functor(canvasElement, eventTypePrefix + 'out', this._onMouseOut);\n      functor(canvasElement, eventTypePrefix + 'enter', this._onMouseEnter);\n      functor(canvasElement, 'wheel', this._onMouseWheel);\n      functor(canvasElement, 'contextmenu', this._onContextMenu);\n      functor(canvasElement, 'dblclick', this._onDoubleClick);\n      functor(canvasElement, 'touchstart', this._onMouseDown, addEventOptions);\n      functor(canvasElement, 'touchmove', this._onMouseMove, addEventOptions);\n      functor(canvasElement, 'dragover', this._onDragOver);\n      functor(canvasElement, 'dragenter', this._onDragEnter);\n      functor(canvasElement, 'dragleave', this._onDragLeave);\n      functor(canvasElement, 'drop', this._onDrop);\n\n      if (typeof eventjs !== 'undefined' && eventjsFunctor in eventjs) {\n        eventjs[eventjsFunctor](canvasElement, 'gesture', this._onGesture);\n        eventjs[eventjsFunctor](canvasElement, 'drag', this._onDrag);\n        eventjs[eventjsFunctor](canvasElement, 'orientation', this._onOrientationChange);\n        eventjs[eventjsFunctor](canvasElement, 'shake', this._onShake);\n        eventjs[eventjsFunctor](canvasElement, 'longpress', this._onLongPress);\n      }\n    },\n\n    /**\n     * Removes all event listeners\n     */\n    removeListeners: function removeListeners() {\n      this.addOrRemove(removeListener, 'remove'); // if you dispose on a mouseDown, before mouse up, you need to clean document to...\n\n      var eventTypePrefix = this.enablePointerEvents ? 'pointer' : 'mouse';\n      removeListener(fabric.document, eventTypePrefix + 'up', this._onMouseUp);\n      removeListener(fabric.document, 'touchend', this._onMouseUp, addEventOptions);\n      removeListener(fabric.document, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n      removeListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\n    },\n\n    /**\n     * @private\n     */\n    _bindEvents: function _bindEvents() {\n      if (this.eventsBound) {\n        // for any reason we pass here twice we do not want to bind events twice.\n        return;\n      }\n\n      this._onMouseDown = this._onMouseDown.bind(this);\n      this._onMouseMove = this._onMouseMove.bind(this);\n      this._onMouseUp = this._onMouseUp.bind(this);\n      this._onResize = this._onResize.bind(this);\n      this._onGesture = this._onGesture.bind(this);\n      this._onDrag = this._onDrag.bind(this);\n      this._onShake = this._onShake.bind(this);\n      this._onLongPress = this._onLongPress.bind(this);\n      this._onOrientationChange = this._onOrientationChange.bind(this);\n      this._onMouseWheel = this._onMouseWheel.bind(this);\n      this._onMouseOut = this._onMouseOut.bind(this);\n      this._onMouseEnter = this._onMouseEnter.bind(this);\n      this._onContextMenu = this._onContextMenu.bind(this);\n      this._onDoubleClick = this._onDoubleClick.bind(this);\n      this._onDragOver = this._onDragOver.bind(this);\n      this._onDragEnter = this._simpleEventHandler.bind(this, 'dragenter');\n      this._onDragLeave = this._simpleEventHandler.bind(this, 'dragleave');\n      this._onDrop = this._simpleEventHandler.bind(this, 'drop');\n      this.eventsBound = true;\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js gesture\n     * @param {Event} [self] Inner Event object\n     */\n    _onGesture: function _onGesture(e, self) {\n      this.__onTransformGesture && this.__onTransformGesture(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js drag\n     * @param {Event} [self] Inner Event object\n     */\n    _onDrag: function _onDrag(e, self) {\n      this.__onDrag && this.__onDrag(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on wheel event\n     */\n    _onMouseWheel: function _onMouseWheel(e) {\n      this.__onMouseWheel(e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseOut: function _onMouseOut(e) {\n      var target = this._hoveredTarget;\n      this.fire('mouse:out', {\n        target: target,\n        e: e\n      });\n      this._hoveredTarget = null;\n      target && target.fire('mouseout', {\n        e: e\n      });\n\n      if (this._iTextInstances) {\n        this._iTextInstances.forEach(function (obj) {\n          if (obj.isEditing) {\n            obj.hiddenTextarea.focus();\n          }\n        });\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseenter\n     */\n    _onMouseEnter: function _onMouseEnter(e) {\n      // This find target and consequent 'mouse:over' is used to\n      // clear old instances on hovered target.\n      // calling findTarget has the side effect of killing target.__corner.\n      // as a short term fix we are not firing this if we are currently transforming.\n      // as a long term fix we need to separate the action of finding a target with the\n      // side effects we added to it.\n      if (!this.currentTransform && !this.findTarget(e)) {\n        this.fire('mouse:over', {\n          target: null,\n          e: e\n        });\n        this._hoveredTarget = null;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js orientation change\n     * @param {Event} [self] Inner Event object\n     */\n    _onOrientationChange: function _onOrientationChange(e, self) {\n      this.__onOrientationChange && this.__onOrientationChange(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onShake: function _onShake(e, self) {\n      this.__onShake && this.__onShake(e, self);\n    },\n\n    /**\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     * @param {Event} [self] Inner Event object\n     */\n    _onLongPress: function _onLongPress(e, self) {\n      this.__onLongPress && this.__onLongPress(e, self);\n    },\n\n    /**\n     * prevent default to allow drop event to be fired\n     * @private\n     * @param {Event} [e] Event object fired on Event.js shake\n     */\n    _onDragOver: function _onDragOver(e) {\n      e.preventDefault();\n\n      var target = this._simpleEventHandler('dragover', e);\n\n      this._fireEnterLeaveEvents(target, e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onContextMenu: function _onContextMenu(e) {\n      if (this.stopContextMenu) {\n        e.stopPropagation();\n        e.preventDefault();\n      }\n\n      return false;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onDoubleClick: function _onDoubleClick(e) {\n      this._cacheTransformEventData(e);\n\n      this._handleEvent(e, 'dblclick');\n\n      this._resetTransformEventData(e);\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDown: function _onMouseDown(e) {\n      this.__onMouseDown(e);\n\n      this._resetTransformEventData();\n\n      addListener(fabric.document, 'touchend', this._onMouseUp, addEventOptions);\n      addListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\n      var canvasElement = this.upperCanvasEl,\n          eventTypePrefix = this.enablePointerEvents ? 'pointer' : 'mouse';\n      removeListener(canvasElement, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n      removeListener(canvasElement, 'touchmove', this._onMouseMove, addEventOptions);\n\n      if (e.type === 'touchstart') {\n        // Unbind mousedown to prevent double triggers from touch devices\n        removeListener(canvasElement, eventTypePrefix + 'down', this._onMouseDown);\n      } else {\n        addListener(fabric.document, eventTypePrefix + 'up', this._onMouseUp);\n        addListener(fabric.document, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUp: function _onMouseUp(e) {\n      this.__onMouseUp(e);\n\n      this._resetTransformEventData();\n\n      var canvasElement = this.upperCanvasEl,\n          eventTypePrefix = this.enablePointerEvents ? 'pointer' : 'mouse';\n      removeListener(fabric.document, eventTypePrefix + 'up', this._onMouseUp);\n      removeListener(fabric.document, 'touchend', this._onMouseUp, addEventOptions);\n      removeListener(fabric.document, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n      removeListener(fabric.document, 'touchmove', this._onMouseMove, addEventOptions);\n      addListener(canvasElement, eventTypePrefix + 'move', this._onMouseMove, addEventOptions);\n      addListener(canvasElement, 'touchmove', this._onMouseMove, addEventOptions);\n\n      if (e.type === 'touchend') {\n        // Wait 400ms before rebinding mousedown to prevent double triggers\n        // from touch devices\n        var _this = this;\n\n        setTimeout(function () {\n          addListener(_this.upperCanvasEl, eventTypePrefix + 'down', _this._onMouseDown);\n        }, 400);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMove: function _onMouseMove(e) {\n      !this.allowTouchScrolling && e.preventDefault && e.preventDefault();\n\n      this.__onMouseMove(e);\n    },\n\n    /**\n     * @private\n     */\n    _onResize: function _onResize() {\n      this.calcOffset();\n    },\n\n    /**\n     * Decides whether the canvas should be redrawn in mouseup and mousedown events.\n     * @private\n     * @param {Object} target\n     */\n    _shouldRender: function _shouldRender(target) {\n      var activeObject = this._activeObject;\n\n      if (!!activeObject !== !!target || activeObject && target && activeObject !== target) {\n        // this covers: switch of target, from target to no target, selection of target\n        // multiSelection with key and mouse\n        return true;\n      } else if (activeObject && activeObject.isEditing) {\n        // if we mouse up/down over a editing textbox a cursor change,\n        // there is no need to re render\n        return false;\n      }\n\n      return false;\n    },\n\n    /**\n     * Method that defines the actions when mouse is released on canvas.\n     * The method resets the currentTransform parameters, store the image corner\n     * position in the image object and render the canvas on top.\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseUp: function __onMouseUp(e) {\n      var target,\n          transform = this._currentTransform,\n          groupSelector = this._groupSelector,\n          shouldRender = false,\n          isClick = !groupSelector || groupSelector.left === 0 && groupSelector.top === 0;\n\n      this._cacheTransformEventData(e);\n\n      target = this._target;\n\n      this._handleEvent(e, 'up:before'); // if right/middle click just fire events and return\n      // target undefined will make the _handleEvent search the target\n\n\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'up', RIGHT_CLICK, isClick);\n        }\n\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'up', MIDDLE_CLICK, isClick);\n        }\n\n        this._resetTransformEventData();\n\n        return;\n      }\n\n      if (this.isDrawingMode && this._isCurrentlyDrawing) {\n        this._onMouseUpInDrawingMode(e);\n\n        return;\n      }\n\n      if (transform) {\n        this._finalizeCurrentTransform(e);\n\n        shouldRender = transform.actionPerformed;\n      }\n\n      if (!isClick) {\n        this._maybeGroupObjects(e);\n\n        shouldRender || (shouldRender = this._shouldRender(target));\n      }\n\n      if (target) {\n        target.isMoving = false;\n      }\n\n      this._setCursorFromEvent(e, target);\n\n      this._handleEvent(e, 'up', LEFT_CLICK, isClick);\n\n      this._groupSelector = null;\n      this._currentTransform = null; // reset the target information about which corner is selected\n\n      target && (target.__corner = 0);\n\n      if (shouldRender) {\n        this.requestRenderAll();\n      } else if (!isClick) {\n        this.renderTop();\n      }\n    },\n\n    /**\n     * @private\n     * Handle event firing for target and subtargets\n     * @param {Event} e event from mouse\n     * @param {String} eventType event to fire (up, down or move)\n     * @return {Fabric.Object} target return the the target found, for internal reasons.\n     */\n    _simpleEventHandler: function _simpleEventHandler(eventType, e) {\n      var target = this.findTarget(e),\n          targets = this.targets,\n          options = {\n        e: e,\n        target: target,\n        subTargets: targets\n      };\n      this.fire(eventType, options);\n      target && target.fire(eventType, options);\n\n      if (!targets) {\n        return target;\n      }\n\n      for (var i = 0; i < targets.length; i++) {\n        targets[i].fire(eventType, options);\n      }\n\n      return target;\n    },\n\n    /**\n     * @private\n     * Handle event firing for target and subtargets\n     * @param {Event} e event from mouse\n     * @param {String} eventType event to fire (up, down or move)\n     * @param {fabric.Object} targetObj receiving event\n     * @param {Number} [button] button used in the event 1 = left, 2 = middle, 3 = right\n     * @param {Boolean} isClick for left button only, indicates that the mouse up happened without move.\n     */\n    _handleEvent: function _handleEvent(e, eventType, button, isClick) {\n      var target = this._target,\n          targets = this.targets || [],\n          options = {\n        e: e,\n        target: target,\n        subTargets: targets,\n        button: button || LEFT_CLICK,\n        isClick: isClick || false,\n        pointer: this._pointer,\n        absolutePointer: this._absolutePointer,\n        transform: this._currentTransform\n      };\n      this.fire('mouse:' + eventType, options);\n      target && target.fire('mouse' + eventType, options);\n\n      for (var i = 0; i < targets.length; i++) {\n        targets[i].fire('mouse' + eventType, options);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e send the mouse event that generate the finalize down, so it can be used in the event\n     */\n    _finalizeCurrentTransform: function _finalizeCurrentTransform(e) {\n      var transform = this._currentTransform,\n          target = transform.target,\n          eventName,\n          options = {\n        e: e,\n        target: target,\n        transform: transform\n      };\n\n      if (target._scaling) {\n        target._scaling = false;\n      }\n\n      target.setCoords();\n\n      if (transform.actionPerformed || this.stateful && target.hasStateChanged()) {\n        if (transform.actionPerformed) {\n          eventName = this._addEventOptions(options, transform);\n\n          this._fire(eventName, options);\n        }\n\n        this._fire('modified', options);\n      }\n    },\n\n    /**\n     * Mutate option object in order to add by property and give back the event name.\n     * @private\n     * @param {Object} options to mutate\n     * @param {Object} transform to inspect action from\n     */\n    _addEventOptions: function _addEventOptions(options, transform) {\n      // we can probably add more details at low cost\n      // scale change, rotation changes, translation changes\n      var eventName, by;\n\n      switch (transform.action) {\n        case 'scaleX':\n          eventName = 'scaled';\n          by = 'x';\n          break;\n\n        case 'scaleY':\n          eventName = 'scaled';\n          by = 'y';\n          break;\n\n        case 'skewX':\n          eventName = 'skewed';\n          by = 'x';\n          break;\n\n        case 'skewY':\n          eventName = 'skewed';\n          by = 'y';\n          break;\n\n        case 'scale':\n          eventName = 'scaled';\n          by = 'equally';\n          break;\n\n        case 'rotate':\n          eventName = 'rotated';\n          break;\n\n        case 'drag':\n          eventName = 'moved';\n          break;\n      }\n\n      options.by = by;\n      return eventName;\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    _onMouseDownInDrawingMode: function _onMouseDownInDrawingMode(e) {\n      this._isCurrentlyDrawing = true;\n\n      if (this.getActiveObject()) {\n        this.discardActiveObject(e).requestRenderAll();\n      }\n\n      if (this.clipTo) {\n        fabric.util.clipContext(this, this.contextTop);\n      }\n\n      var pointer = this.getPointer(e);\n      this.freeDrawingBrush.onMouseDown(pointer);\n\n      this._handleEvent(e, 'down');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    _onMouseMoveInDrawingMode: function _onMouseMoveInDrawingMode(e) {\n      if (this._isCurrentlyDrawing) {\n        var pointer = this.getPointer(e);\n        this.freeDrawingBrush.onMouseMove(pointer);\n      }\n\n      this.setCursor(this.freeDrawingCursor);\n\n      this._handleEvent(e, 'move');\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object fired on mouseup\n     */\n    _onMouseUpInDrawingMode: function _onMouseUpInDrawingMode(e) {\n      this._isCurrentlyDrawing = false;\n\n      if (this.clipTo) {\n        this.contextTop.restore();\n      }\n\n      this.freeDrawingBrush.onMouseUp();\n\n      this._handleEvent(e, 'up');\n    },\n\n    /**\n     * Method that defines the actions when mouse is clicked on canvas.\n     * The method inits the currentTransform parameters and renders all the\n     * canvas so the current image can be placed on the top canvas and the rest\n     * in on the container one.\n     * @private\n     * @param {Event} e Event object fired on mousedown\n     */\n    __onMouseDown: function __onMouseDown(e) {\n      this._cacheTransformEventData(e);\n\n      this._handleEvent(e, 'down:before');\n\n      var target = this._target; // if right click just fire events\n\n      if (checkClick(e, RIGHT_CLICK)) {\n        if (this.fireRightClick) {\n          this._handleEvent(e, 'down', RIGHT_CLICK);\n        }\n\n        return;\n      }\n\n      if (checkClick(e, MIDDLE_CLICK)) {\n        if (this.fireMiddleClick) {\n          this._handleEvent(e, 'down', MIDDLE_CLICK);\n        }\n\n        return;\n      }\n\n      if (this.isDrawingMode) {\n        this._onMouseDownInDrawingMode(e);\n\n        return;\n      } // ignore if some object is being transformed at this moment\n\n\n      if (this._currentTransform) {\n        return;\n      }\n\n      var pointer = this._pointer; // save pointer for check in __onMouseUp event\n\n      this._previousPointer = pointer;\n\n      var shouldRender = this._shouldRender(target),\n          shouldGroup = this._shouldGroup(e, target);\n\n      if (this._shouldClearSelection(e, target)) {\n        this.discardActiveObject(e);\n      } else if (shouldGroup) {\n        this._handleGrouping(e, target);\n\n        target = this._activeObject;\n      }\n\n      if (this.selection && (!target || !target.selectable && !target.isEditing && target !== this._activeObject)) {\n        this._groupSelector = {\n          ex: pointer.x,\n          ey: pointer.y,\n          top: 0,\n          left: 0\n        };\n      }\n\n      if (target) {\n        var alreadySelected = target === this._activeObject;\n\n        if (target.selectable) {\n          this.setActiveObject(target, e);\n        }\n\n        if (target === this._activeObject && (target.__corner || !shouldGroup)) {\n          this._setupCurrentTransform(e, target, alreadySelected);\n        }\n      }\n\n      this._handleEvent(e, 'down'); // we must renderAll so that we update the visuals\n\n\n      (shouldRender || shouldGroup) && this.requestRenderAll();\n    },\n\n    /**\n     * reset cache form common information needed during event processing\n     * @private\n     */\n    _resetTransformEventData: function _resetTransformEventData() {\n      this._target = null;\n      this._pointer = null;\n      this._absolutePointer = null;\n    },\n\n    /**\n     * Cache common information needed during event processing\n     * @private\n     * @param {Event} e Event object fired on event\n     */\n    _cacheTransformEventData: function _cacheTransformEventData(e) {\n      // reset in order to avoid stale caching\n      this._resetTransformEventData();\n\n      this._pointer = this.getPointer(e, true);\n      this._absolutePointer = this.restorePointerVpt(this._pointer);\n      this._target = this._currentTransform ? this._currentTransform.target : this.findTarget(e) || null;\n    },\n\n    /**\n     * @private\n     */\n    _beforeTransform: function _beforeTransform(e) {\n      var t = this._currentTransform;\n      this.stateful && t.target.saveState();\n      this.fire('before:transform', {\n        e: e,\n        transform: t\n      }); // determine if it's a drag or rotate case\n\n      if (t.corner) {\n        this.onBeforeScaleRotate(t.target);\n      }\n    },\n\n    /**\n     * Method that defines the actions when mouse is hovering the canvas.\n     * The currentTransform parameter will define whether the user is rotating/scaling/translating\n     * an image or neither of them (only hovering). A group selection is also possible and would cancel\n     * all any other type of action.\n     * In case of an image transformation only the top canvas will be rendered.\n     * @private\n     * @param {Event} e Event object fired on mousemove\n     */\n    __onMouseMove: function __onMouseMove(e) {\n      this._handleEvent(e, 'move:before');\n\n      this._cacheTransformEventData(e);\n\n      var target, pointer;\n\n      if (this.isDrawingMode) {\n        this._onMouseMoveInDrawingMode(e);\n\n        return;\n      }\n\n      if (typeof e.touches !== 'undefined' && e.touches.length > 1) {\n        return;\n      }\n\n      var groupSelector = this._groupSelector; // We initially clicked in an empty area, so we draw a box for multiple selection\n\n      if (groupSelector) {\n        pointer = this._pointer;\n        groupSelector.left = pointer.x - groupSelector.ex;\n        groupSelector.top = pointer.y - groupSelector.ey;\n        this.renderTop();\n      } else if (!this._currentTransform) {\n        target = this.findTarget(e) || null;\n\n        this._setCursorFromEvent(e, target);\n\n        this._fireOverOutEvents(target, e);\n      } else {\n        this._transformObject(e);\n      }\n\n      this._handleEvent(e, 'move');\n\n      this._resetTransformEventData();\n    },\n\n    /**\n     * Manage the mouseout, mouseover events for the fabric object on the canvas\n     * @param {Fabric.Object} target the target where the target from the mousemove event\n     * @param {Event} e Event object fired on mousemove\n     * @private\n     */\n    _fireOverOutEvents: function _fireOverOutEvents(target, e) {\n      this.fireSyntheticInOutEvents(target, e, {\n        targetName: '_hoveredTarget',\n        canvasEvtOut: 'mouse:out',\n        evtOut: 'mouseout',\n        canvasEvtIn: 'mouse:over',\n        evtIn: 'mouseover'\n      });\n    },\n\n    /**\n     * Manage the dragEnter, dragLeave events for the fabric objects on the canvas\n     * @param {Fabric.Object} target the target where the target from the onDrag event\n     * @param {Event} e Event object fired on ondrag\n     * @private\n     */\n    _fireEnterLeaveEvents: function _fireEnterLeaveEvents(target, e) {\n      this.fireSyntheticInOutEvents(target, e, {\n        targetName: '_draggedoverTarget',\n        evtOut: 'dragleave',\n        evtIn: 'dragenter'\n      });\n    },\n\n    /**\n     * Manage the synthetic in/out events for the fabric objects on the canvas\n     * @param {Fabric.Object} target the target where the target from the supported events\n     * @param {Event} e Event object fired\n     * @param {Object} config configuration for the function to work\n     * @param {String} config.targetName property on the canvas where the old target is stored\n     * @param {String} [config.canvasEvtOut] name of the event to fire at canvas level for out\n     * @param {String} config.evtOut name of the event to fire for out\n     * @param {String} [config.canvasEvtIn] name of the event to fire at canvas level for in\n     * @param {String} config.evtIn name of the event to fire for in\n     * @private\n     */\n    fireSyntheticInOutEvents: function fireSyntheticInOutEvents(target, e, config) {\n      var inOpt,\n          outOpt,\n          oldTarget = this[config.targetName],\n          outFires,\n          inFires,\n          targetChanged = oldTarget !== target,\n          canvasEvtIn = config.canvasEvtIn,\n          canvasEvtOut = config.canvasEvtOut;\n\n      if (targetChanged) {\n        inOpt = {\n          e: e,\n          target: target,\n          previousTarget: oldTarget\n        };\n        outOpt = {\n          e: e,\n          target: oldTarget,\n          nextTarget: target\n        };\n        this[config.targetName] = target;\n      }\n\n      inFires = target && targetChanged;\n      outFires = oldTarget && targetChanged;\n\n      if (outFires) {\n        canvasEvtOut && this.fire(canvasEvtOut, outOpt);\n        oldTarget.fire(config.evtOut, outOpt);\n      }\n\n      if (inFires) {\n        canvasEvtIn && this.fire(canvasEvtIn, inOpt);\n        target.fire(config.evtIn, inOpt);\n      }\n    },\n\n    /**\n     * Method that defines actions when an Event Mouse Wheel\n     * @param {Event} e Event object fired on mouseup\n     */\n    __onMouseWheel: function __onMouseWheel(e) {\n      this._cacheTransformEventData(e);\n\n      this._handleEvent(e, 'wheel');\n\n      this._resetTransformEventData();\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event fired on mousemove\n     */\n    _transformObject: function _transformObject(e) {\n      var pointer = this.getPointer(e),\n          transform = this._currentTransform;\n      transform.reset = false;\n      transform.target.isMoving = true;\n      transform.shiftKey = e.shiftKey;\n      transform.altKey = e[this.centeredKey];\n\n      this._beforeScaleTransform(e, transform);\n\n      this._performTransformAction(e, transform, pointer);\n\n      transform.actionPerformed && this.requestRenderAll();\n    },\n\n    /**\n     * @private\n     */\n    _performTransformAction: function _performTransformAction(e, transform, pointer) {\n      var x = pointer.x,\n          y = pointer.y,\n          action = transform.action,\n          actionPerformed = false,\n          options = {\n        target: transform.target,\n        e: e,\n        transform: transform,\n        pointer: pointer\n      };\n\n      if (action === 'rotate') {\n        (actionPerformed = this._rotateObject(x, y)) && this._fire('rotating', options);\n      } else if (action === 'scale') {\n        (actionPerformed = this._onScale(e, transform, x, y)) && this._fire('scaling', options);\n      } else if (action === 'scaleX') {\n        (actionPerformed = this._scaleObject(x, y, 'x')) && this._fire('scaling', options);\n      } else if (action === 'scaleY') {\n        (actionPerformed = this._scaleObject(x, y, 'y')) && this._fire('scaling', options);\n      } else if (action === 'skewX') {\n        (actionPerformed = this._skewObject(x, y, 'x')) && this._fire('skewing', options);\n      } else if (action === 'skewY') {\n        (actionPerformed = this._skewObject(x, y, 'y')) && this._fire('skewing', options);\n      } else {\n        actionPerformed = this._translateObject(x, y);\n\n        if (actionPerformed) {\n          this._fire('moving', options);\n\n          this.setCursor(options.target.moveCursor || this.moveCursor);\n        }\n      }\n\n      transform.actionPerformed = transform.actionPerformed || actionPerformed;\n    },\n\n    /**\n     * @private\n     */\n    _fire: function _fire(eventName, options) {\n      this.fire('object:' + eventName, options);\n      options.target.fire(eventName, options);\n    },\n\n    /**\n     * @private\n     */\n    _beforeScaleTransform: function _beforeScaleTransform(e, transform) {\n      if (transform.action === 'scale' || transform.action === 'scaleX' || transform.action === 'scaleY') {\n        var centerTransform = this._shouldCenterTransform(transform.target); // Switch from a normal resize to center-based\n\n\n        if (centerTransform && (transform.originX !== 'center' || transform.originY !== 'center') || // Switch from center-based resize to normal one\n        !centerTransform && transform.originX === 'center' && transform.originY === 'center') {\n          this._resetCurrentTransform();\n\n          transform.reset = true;\n        }\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {Object} transform current transform\n     * @param {Number} x mouse position x from origin\n     * @param {Number} y mouse position y from origin\n     * @return {Boolean} true if the scaling occurred\n     */\n    _onScale: function _onScale(e, transform, x, y) {\n      if (this._isUniscalePossible(e, transform.target)) {\n        transform.currentAction = 'scale';\n        return this._scaleObject(x, y);\n      } else {\n        // Switch from a normal resize to proportional\n        if (!transform.reset && transform.currentAction === 'scale') {\n          this._resetCurrentTransform();\n        }\n\n        transform.currentAction = 'scaleEqually';\n        return this._scaleObject(x, y, 'equally');\n      }\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target current target\n     * @return {Boolean} true if unproportional scaling is possible\n     */\n    _isUniscalePossible: function _isUniscalePossible(e, target) {\n      return (e[this.uniScaleKey] || this.uniScaleTransform) && !target.get('lockUniScaling');\n    },\n\n    /**\n     * Sets the cursor depending on where the canvas is being hovered.\n     * Note: very buggy in Opera\n     * @param {Event} e Event object\n     * @param {Object} target Object that the mouse is hovering, if so.\n     */\n    _setCursorFromEvent: function _setCursorFromEvent(e, target) {\n      if (!target) {\n        this.setCursor(this.defaultCursor);\n        return false;\n      }\n\n      var hoverCursor = target.hoverCursor || this.hoverCursor,\n          activeSelection = this._activeObject && this._activeObject.type === 'activeSelection' ? this._activeObject : null,\n          // only show proper corner when group selection is not active\n      corner = (!activeSelection || !activeSelection.contains(target)) && target._findTargetCorner(this.getPointer(e, true));\n\n      if (!corner) {\n        this.setCursor(hoverCursor);\n      } else {\n        this.setCursor(this.getCornerCursor(corner, target, e));\n      }\n    },\n\n    /**\n     * @private\n     */\n    getCornerCursor: function getCornerCursor(corner, target, e) {\n      if (this.actionIsDisabled(corner, target, e)) {\n        return this.notAllowedCursor;\n      } else if (corner in cursorOffset) {\n        return this._getRotatedCornerCursor(corner, target, e);\n      } else if (corner === 'mtr' && target.hasRotatingPoint) {\n        return this.rotationCursor;\n      } else {\n        return this.defaultCursor;\n      }\n    },\n    actionIsDisabled: function actionIsDisabled(corner, target, e) {\n      if (corner === 'mt' || corner === 'mb') {\n        return e[this.altActionKey] ? target.lockSkewingX : target.lockScalingY;\n      } else if (corner === 'ml' || corner === 'mr') {\n        return e[this.altActionKey] ? target.lockSkewingY : target.lockScalingX;\n      } else if (corner === 'mtr') {\n        return target.lockRotation;\n      } else {\n        return this._isUniscalePossible(e, target) ? target.lockScalingX && target.lockScalingY : target.lockScalingX || target.lockScalingY;\n      }\n    },\n\n    /**\n     * @private\n     */\n    _getRotatedCornerCursor: function _getRotatedCornerCursor(corner, target, e) {\n      var n = Math.round(target.angle % 360 / 45);\n\n      if (n < 0) {\n        n += 8; // full circle ahead\n      }\n\n      n += cursorOffset[corner];\n\n      if (e[this.altActionKey] && cursorOffset[corner] % 2 === 0) {\n        //if we are holding shift and we are on a mx corner...\n        n += 2;\n      } // normalize n to be from 0 to 7\n\n\n      n %= 8;\n      return this.cursorMap[n];\n    }\n  });\n})();\n\n(function () {\n  var min = Math.min,\n      max = Math.max;\n  fabric.util.object.extend(fabric.Canvas.prototype,\n  /** @lends fabric.Canvas.prototype */\n  {\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     * @return {Boolean}\n     */\n    _shouldGroup: function _shouldGroup(e, target) {\n      var activeObject = this._activeObject;\n      return activeObject && this._isSelectionKeyPressed(e) && target && target.selectable && this.selection && (activeObject !== target || activeObject.type === 'activeSelection') && !target.onSelect({\n        e: e\n      });\n    },\n\n    /**\n     * @private\n     * @param {Event} e Event object\n     * @param {fabric.Object} target\n     */\n    _handleGrouping: function _handleGrouping(e, target) {\n      var activeObject = this._activeObject; // avoid multi select when shift click on a corner\n\n      if (activeObject.__corner) {\n        return;\n      }\n\n      if (target === activeObject) {\n        // if it's a group, find target again, using activeGroup objects\n        target = this.findTarget(e, true); // if even object is not found or we are on activeObjectCorner, bail out\n\n        if (!target || !target.selectable) {\n          return;\n        }\n      }\n\n      if (activeObject && activeObject.type === 'activeSelection') {\n        this._updateActiveSelection(target, e);\n      } else {\n        this._createActiveSelection(target, e);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _updateActiveSelection: function _updateActiveSelection(target, e) {\n      var activeSelection = this._activeObject,\n          currentActiveObjects = activeSelection._objects.slice(0);\n\n      if (activeSelection.contains(target)) {\n        activeSelection.removeWithUpdate(target);\n        this._hoveredTarget = target;\n\n        if (activeSelection.size() === 1) {\n          // activate last remaining object\n          this._setActiveObject(activeSelection.item(0), e);\n        }\n      } else {\n        activeSelection.addWithUpdate(target);\n        this._hoveredTarget = activeSelection;\n      }\n\n      this._fireSelectionEvents(currentActiveObjects, e);\n    },\n\n    /**\n     * @private\n     */\n    _createActiveSelection: function _createActiveSelection(target, e) {\n      var currentActives = this.getActiveObjects(),\n          group = this._createGroup(target);\n\n      this._hoveredTarget = group;\n\n      this._setActiveObject(group, e);\n\n      this._fireSelectionEvents(currentActives, e);\n    },\n\n    /**\n     * @private\n     * @param {Object} target\n     */\n    _createGroup: function _createGroup(target) {\n      var objects = this._objects,\n          isActiveLower = objects.indexOf(this._activeObject) < objects.indexOf(target),\n          groupObjects = isActiveLower ? [this._activeObject, target] : [target, this._activeObject];\n      this._activeObject.isEditing && this._activeObject.exitEditing();\n      return new fabric.ActiveSelection(groupObjects, {\n        canvas: this\n      });\n    },\n\n    /**\n     * @private\n     * @param {Event} e mouse event\n     */\n    _groupSelectedObjects: function _groupSelectedObjects(e) {\n      var group = this._collectObjects(e),\n          aGroup; // do not create group for 1 element only\n\n\n      if (group.length === 1) {\n        this.setActiveObject(group[0], e);\n      } else if (group.length > 1) {\n        aGroup = new fabric.ActiveSelection(group.reverse(), {\n          canvas: this\n        });\n        this.setActiveObject(aGroup, e);\n      }\n    },\n\n    /**\n     * @private\n     */\n    _collectObjects: function _collectObjects(e) {\n      var group = [],\n          currentObject,\n          x1 = this._groupSelector.ex,\n          y1 = this._groupSelector.ey,\n          x2 = x1 + this._groupSelector.left,\n          y2 = y1 + this._groupSelector.top,\n          selectionX1Y1 = new fabric.Point(min(x1, x2), min(y1, y2)),\n          selectionX2Y2 = new fabric.Point(max(x1, x2), max(y1, y2)),\n          allowIntersect = !this.selectionFullyContained,\n          isClick = x1 === x2 && y1 === y2; // we iterate reverse order to collect top first in case of click.\n\n      for (var i = this._objects.length; i--;) {\n        currentObject = this._objects[i];\n\n        if (!currentObject || !currentObject.selectable || !currentObject.visible) {\n          continue;\n        }\n\n        if (allowIntersect && currentObject.intersectsWithRect(selectionX1Y1, selectionX2Y2) || currentObject.isContainedWithinRect(selectionX1Y1, selectionX2Y2) || allowIntersect && currentObject.containsPoint(selectionX1Y1) || allowIntersect && currentObject.containsPoint(selectionX2Y2)) {\n          group.push(currentObject); // only add one object if it's a click\n\n          if (isClick) {\n            break;\n          }\n        }\n      }\n\n      if (group.length > 1) {\n        group = group.filter(function (object) {\n          return !object.onSelect({\n            e: e\n          });\n        });\n      }\n\n      return group;\n    },\n\n    /**\n     * @private\n     */\n    _maybeGroupObjects: function _maybeGroupObjects(e) {\n      if (this.selection && this._groupSelector) {\n        this._groupSelectedObjects(e);\n      }\n\n      this.setCursor(this.defaultCursor); // clear selection and current transformation\n\n      this._groupSelector = null;\n    }\n  });\n})();\n\n(function () {\n  fabric.util.object.extend(fabric.StaticCanvas.prototype,\n  /** @lends fabric.StaticCanvas.prototype */\n  {\n    /**\n     * Exports canvas element to a dataurl image. Note that when multiplier is used, cropping is scaled appropriately\n     * @param {Object} [options] Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by, to have consistent\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 2.0.0\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     * @see {@link http://jsfiddle.net/fabricjs/NfZVb/|jsFiddle demo}\n     * @example <caption>Generate jpeg dataURL with lower quality</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'jpeg',\n     *   quality: 0.8\n     * });\n     * @example <caption>Generate cropped png dataURL (clipping of canvas)</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   left: 100,\n     *   top: 100,\n     *   width: 200,\n     *   height: 200\n     * });\n     * @example <caption>Generate double scaled png dataURL</caption>\n     * var dataURL = canvas.toDataURL({\n     *   format: 'png',\n     *   multiplier: 2\n     * });\n     */\n    toDataURL: function toDataURL(options) {\n      options || (options = {});\n      var format = options.format || 'png',\n          quality = options.quality || 1,\n          multiplier = (options.multiplier || 1) * (options.enableRetinaScaling ? this.getRetinaScaling() : 1),\n          canvasEl = this.toCanvasElement(multiplier, options);\n      return fabric.util.toDataURL(canvasEl, format, quality);\n    },\n\n    /**\n     * Create a new HTMLCanvas element painted with the current canvas content.\n     * No need to resize the actual one or repaint it.\n     * Will transfer object ownership to a new canvas, paint it, and set everything back.\n     * This is an intermediary step used to get to a dataUrl but also it is useful to\n     * create quick image copies of a canvas without passing for the dataUrl string\n     * @param {Number} [multiplier] a zoom factor.\n     * @param {Object} [cropping] Cropping informations\n     * @param {Number} [cropping.left] Cropping left offset.\n     * @param {Number} [cropping.top] Cropping top offset.\n     * @param {Number} [cropping.width] Cropping width.\n     * @param {Number} [cropping.height] Cropping height.\n     */\n    toCanvasElement: function toCanvasElement(multiplier, cropping) {\n      multiplier = multiplier || 1;\n      cropping = cropping || {};\n      var scaledWidth = (cropping.width || this.width) * multiplier,\n          scaledHeight = (cropping.height || this.height) * multiplier,\n          zoom = this.getZoom(),\n          originalWidth = this.width,\n          originalHeight = this.height,\n          newZoom = zoom * multiplier,\n          vp = this.viewportTransform,\n          translateX = (vp[4] - (cropping.left || 0)) * multiplier,\n          translateY = (vp[5] - (cropping.top || 0)) * multiplier,\n          originalInteractive = this.interactive,\n          originalContext = this.contextContainer,\n          newVp = [newZoom, 0, 0, newZoom, translateX, translateY],\n          originalRetina = this.enableRetinaScaling,\n          canvasEl = fabric.util.createCanvasElement();\n      canvasEl.width = scaledWidth;\n      canvasEl.height = scaledHeight;\n      this.enableRetinaScaling = false;\n      this.interactive = false;\n      this.viewportTransform = newVp;\n      this.width = scaledWidth;\n      this.height = scaledHeight;\n      this.calcViewportBoundaries();\n      this.contextContainer = canvasEl.getContext('2d'); // will be renderAllExport();\n\n      this.renderAll();\n      this.viewportTransform = vp;\n      this.width = originalWidth;\n      this.height = originalHeight;\n      this.calcViewportBoundaries();\n      this.contextContainer = originalContext;\n      this.interactive = originalInteractive;\n      this.enableRetinaScaling = originalRetina;\n      return canvasEl;\n    }\n  });\n})();\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype,\n/** @lends fabric.StaticCanvas.prototype */\n{\n  /**\n   * Populates canvas with data from the specified dataless JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toDatalessJSON}\n   * @deprecated since 1.2.2\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   */\n  loadFromDatalessJSON: function loadFromDatalessJSON(json, callback, reviver) {\n    return this.loadFromJSON(json, callback, reviver);\n  },\n\n  /**\n   * Populates canvas with data from the specified JSON.\n   * JSON format must conform to the one of {@link fabric.Canvas#toJSON}\n   * @param {String|Object} json JSON string or object\n   * @param {Function} callback Callback, invoked when json is parsed\n   *                            and corresponding objects (e.g: {@link fabric.Image})\n   *                            are initialized\n   * @param {Function} [reviver] Method for further parsing of JSON elements, called after each fabric object created.\n   * @return {fabric.Canvas} instance\n   * @chainable\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#deserialization}\n   * @see {@link http://jsfiddle.net/fabricjs/fmgXt/|jsFiddle demo}\n   * @example <caption>loadFromJSON</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas));\n   * @example <caption>loadFromJSON with reviver</caption>\n   * canvas.loadFromJSON(json, canvas.renderAll.bind(canvas), function(o, object) {\n   *   // `o` = json object\n   *   // `object` = fabric.Object instance\n   *   // ... do some stuff ...\n   * });\n   */\n  loadFromJSON: function loadFromJSON(json, callback, reviver) {\n    if (!json) {\n      return;\n    } // serialize if it wasn't already\n\n\n    var serialized = typeof json === 'string' ? JSON.parse(json) : fabric.util.object.clone(json);\n\n    var _this = this,\n        clipPath = serialized.clipPath,\n        renderOnAddRemove = this.renderOnAddRemove;\n\n    this.renderOnAddRemove = false;\n    delete serialized.clipPath;\n\n    this._enlivenObjects(serialized.objects, function (enlivenedObjects) {\n      _this.clear();\n\n      _this._setBgOverlay(serialized, function () {\n        if (clipPath) {\n          _this._enlivenObjects([clipPath], function (enlivenedCanvasClip) {\n            _this.clipPath = enlivenedCanvasClip[0];\n\n            _this.__setupCanvas.call(_this, serialized, enlivenedObjects, renderOnAddRemove, callback);\n          });\n        } else {\n          _this.__setupCanvas.call(_this, serialized, enlivenedObjects, renderOnAddRemove, callback);\n        }\n      });\n    }, reviver);\n\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {Object} serialized Object with background and overlay information\n   * @param {Array} restored canvas objects\n   * @param {Function} cached renderOnAddRemove callback\n   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n   */\n  __setupCanvas: function __setupCanvas(serialized, enlivenedObjects, renderOnAddRemove, callback) {\n    var _this = this;\n\n    enlivenedObjects.forEach(function (obj, index) {\n      // we splice the array just in case some custom classes restored from JSON\n      // will add more object to canvas at canvas init.\n      _this.insertAt(obj, index);\n    });\n    this.renderOnAddRemove = renderOnAddRemove; // remove parts i cannot set as options\n\n    delete serialized.objects;\n    delete serialized.backgroundImage;\n    delete serialized.overlayImage;\n    delete serialized.background;\n    delete serialized.overlay; // this._initOptions does too many things to just\n    // call it. Normally loading an Object from JSON\n    // create the Object instance. Here the Canvas is\n    // already an instance and we are just loading things over it\n\n    this._setOptions(serialized);\n\n    this.renderAll();\n    callback && callback();\n  },\n\n  /**\n   * @private\n   * @param {Object} serialized Object with background and overlay information\n   * @param {Function} callback Invoked after all background and overlay images/patterns loaded\n   */\n  _setBgOverlay: function _setBgOverlay(serialized, callback) {\n    var loaded = {\n      backgroundColor: false,\n      overlayColor: false,\n      backgroundImage: false,\n      overlayImage: false\n    };\n\n    if (!serialized.backgroundImage && !serialized.overlayImage && !serialized.background && !serialized.overlay) {\n      callback && callback();\n      return;\n    }\n\n    var cbIfLoaded = function cbIfLoaded() {\n      if (loaded.backgroundImage && loaded.overlayImage && loaded.backgroundColor && loaded.overlayColor) {\n        callback && callback();\n      }\n    };\n\n    this.__setBgOverlay('backgroundImage', serialized.backgroundImage, loaded, cbIfLoaded);\n\n    this.__setBgOverlay('overlayImage', serialized.overlayImage, loaded, cbIfLoaded);\n\n    this.__setBgOverlay('backgroundColor', serialized.background, loaded, cbIfLoaded);\n\n    this.__setBgOverlay('overlayColor', serialized.overlay, loaded, cbIfLoaded);\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to set (backgroundImage, overlayImage, backgroundColor, overlayColor)\n   * @param {(Object|String)} value Value to set\n   * @param {Object} loaded Set loaded property to true if property is set\n   * @param {Object} callback Callback function to invoke after property is set\n   */\n  __setBgOverlay: function __setBgOverlay(property, value, loaded, callback) {\n    var _this = this;\n\n    if (!value) {\n      loaded[property] = true;\n      callback && callback();\n      return;\n    }\n\n    if (property === 'backgroundImage' || property === 'overlayImage') {\n      fabric.util.enlivenObjects([value], function (enlivedObject) {\n        _this[property] = enlivedObject[0];\n        loaded[property] = true;\n        callback && callback();\n      });\n    } else {\n      this['set' + fabric.util.string.capitalize(property, true)](value, function () {\n        loaded[property] = true;\n        callback && callback();\n      });\n    }\n  },\n\n  /**\n   * @private\n   * @param {Array} objects\n   * @param {Function} callback\n   * @param {Function} [reviver]\n   */\n  _enlivenObjects: function _enlivenObjects(objects, callback, reviver) {\n    if (!objects || objects.length === 0) {\n      callback && callback([]);\n      return;\n    }\n\n    fabric.util.enlivenObjects(objects, function (enlivenedObjects) {\n      callback && callback(enlivenedObjects);\n    }, null, reviver);\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Function} callback\n   */\n  _toDataURL: function _toDataURL(format, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURL(format));\n    });\n  },\n\n  /**\n   * @private\n   * @param {String} format\n   * @param {Number} multiplier\n   * @param {Function} callback\n   */\n  _toDataURLWithMultiplier: function _toDataURLWithMultiplier(format, multiplier, callback) {\n    this.clone(function (clone) {\n      callback(clone.toDataURLWithMultiplier(format, multiplier));\n    });\n  },\n\n  /**\n   * Clones canvas instance\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   * @param {Array} [properties] Array of properties to include in the cloned canvas and children\n   */\n  clone: function clone(callback, properties) {\n    var data = JSON.stringify(this.toJSON(properties));\n    this.cloneWithoutData(function (clone) {\n      clone.loadFromJSON(data, function () {\n        callback && callback(clone);\n      });\n    });\n  },\n\n  /**\n   * Clones canvas instance without cloning existing data.\n   * This essentially copies canvas dimensions, clipping properties, etc.\n   * but leaves data empty (so that you can populate it with your own)\n   * @param {Object} [callback] Receives cloned instance as a first argument\n   */\n  cloneWithoutData: function cloneWithoutData(callback) {\n    var el = fabric.util.createCanvasElement();\n    el.width = this.width;\n    el.height = this.height;\n    var clone = new fabric.Canvas(el);\n    clone.clipTo = this.clipTo;\n\n    if (this.backgroundImage) {\n      clone.setBackgroundImage(this.backgroundImage.src, function () {\n        clone.renderAll();\n        callback && callback(clone);\n      });\n      clone.backgroundImageOpacity = this.backgroundImageOpacity;\n      clone.backgroundImageStretch = this.backgroundImageStretch;\n    } else {\n      callback && callback(clone);\n    }\n  }\n});\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      toFixed = fabric.util.toFixed,\n      capitalize = fabric.util.string.capitalize,\n      degreesToRadians = fabric.util.degreesToRadians,\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash'),\n      objectCaching = !fabric.isLikelyNode,\n      ALIASING_LIMIT = 2;\n\n  if (fabric.Object) {\n    return;\n  }\n  /**\n   * Root object class from which all 2d shape classes inherit from\n   * @class fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#objects}\n   * @see {@link fabric.Object#initialize} for constructor definition\n   *\n   * @fires added\n   * @fires removed\n   *\n   * @fires selected\n   * @fires deselected\n   * @fires modified\n   * @fires modified\n   * @fires moved\n   * @fires scaled\n   * @fires rotated\n   * @fires skewed\n   *\n   * @fires rotating\n   * @fires scaling\n   * @fires moving\n   * @fires skewing\n   *\n   * @fires mousedown\n   * @fires mouseup\n   * @fires mouseover\n   * @fires mouseout\n   * @fires mousewheel\n   * @fires mousedblclick\n   *\n   * @fires dragover\n   * @fires dragenter\n   * @fires dragleave\n   * @fires drop\n   */\n\n\n  fabric.Object = fabric.util.createClass(fabric.CommonMethods,\n  /** @lends fabric.Object.prototype */\n  {\n    /**\n     * Type of an object (rect, circle, path, etc.).\n     * Note that this property is meant to be read-only and not meant to be modified.\n     * If you modify, certain parts of Fabric (such as JSON loading) won't work correctly.\n     * @type String\n     * @default\n     */\n    type: 'object',\n\n    /**\n     * Horizontal origin of transformation of an object (one of \"left\", \"right\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originX: 'left',\n\n    /**\n     * Vertical origin of transformation of an object (one of \"top\", \"bottom\", \"center\")\n     * See http://jsfiddle.net/1ow02gea/244/ on how originX/originY affect objects in groups\n     * @type String\n     * @default\n     */\n    originY: 'top',\n\n    /**\n     * Top position of an object. Note that by default it's relative to object top. You can change this by setting originY={top/center/bottom}\n     * @type Number\n     * @default\n     */\n    top: 0,\n\n    /**\n     * Left position of an object. Note that by default it's relative to object left. You can change this by setting originX={left/center/right}\n     * @type Number\n     * @default\n     */\n    left: 0,\n\n    /**\n     * Object width\n     * @type Number\n     * @default\n     */\n    width: 0,\n\n    /**\n     * Object height\n     * @type Number\n     * @default\n     */\n    height: 0,\n\n    /**\n     * Object scale factor (horizontal)\n     * @type Number\n     * @default\n     */\n    scaleX: 1,\n\n    /**\n     * Object scale factor (vertical)\n     * @type Number\n     * @default\n     */\n    scaleY: 1,\n\n    /**\n     * When true, an object is rendered as flipped horizontally\n     * @type Boolean\n     * @default\n     */\n    flipX: false,\n\n    /**\n     * When true, an object is rendered as flipped vertically\n     * @type Boolean\n     * @default\n     */\n    flipY: false,\n\n    /**\n     * Opacity of an object\n     * @type Number\n     * @default\n     */\n    opacity: 1,\n\n    /**\n     * Angle of rotation of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    angle: 0,\n\n    /**\n     * Angle of skew on x axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewX: 0,\n\n    /**\n     * Angle of skew on y axes of an object (in degrees)\n     * @type Number\n     * @default\n     */\n    skewY: 0,\n\n    /**\n     * Size of object's controlling corners (in pixels)\n     * @type Number\n     * @default\n     */\n    cornerSize: 13,\n\n    /**\n     * When true, object's controlling corners are rendered as transparent inside (i.e. stroke instead of fill)\n     * @type Boolean\n     * @default\n     */\n    transparentCorners: true,\n\n    /**\n     * Default cursor value used when hovering over this object on canvas\n     * @type String\n     * @default\n     */\n    hoverCursor: null,\n\n    /**\n     * Default cursor value used when moving this object on canvas\n     * @type String\n     * @default\n     */\n    moveCursor: null,\n\n    /**\n     * Padding between object and its controlling borders (in pixels)\n     * @type Number\n     * @default\n     */\n    padding: 0,\n\n    /**\n     * Color of controlling borders of an object (when it's active)\n     * @type String\n     * @default\n     */\n    borderColor: 'rgba(102,153,255,0.75)',\n\n    /**\n     * Array specifying dash pattern of an object's borders (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    borderDashArray: null,\n\n    /**\n     * Color of controlling corners of an object (when it's active)\n     * @type String\n     * @default\n     */\n    cornerColor: 'rgba(102,153,255,0.5)',\n\n    /**\n     * Color of controlling corners of an object (when it's active and transparentCorners false)\n     * @since 1.6.2\n     * @type String\n     * @default\n     */\n    cornerStrokeColor: null,\n\n    /**\n     * Specify style of control, 'rect' or 'circle'\n     * @since 1.6.2\n     * @type String\n     */\n    cornerStyle: 'rect',\n\n    /**\n     * Array specifying dash pattern of an object's control (hasBorder must be true)\n     * @since 1.6.2\n     * @type Array\n     */\n    cornerDashArray: null,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being scaled via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredScaling: false,\n\n    /**\n     * When true, this object will use center point as the origin of transformation\n     * when being rotated via the controls.\n     * <b>Backwards incompatibility note:</b> This property replaces \"centerTransform\" (Boolean).\n     * @since 1.3.4\n     * @type Boolean\n     * @default\n     */\n    centeredRotation: true,\n\n    /**\n     * Color of object's fill\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    fill: 'rgb(0,0,0)',\n\n    /**\n     * Fill rule used to fill an object\n     * accepted values are nonzero, evenodd\n     * <b>Backwards incompatibility note:</b> This property was used for setting globalCompositeOperation until v1.4.12 (use `fabric.Object#globalCompositeOperation` instead)\n     * @type String\n     * @default\n     */\n    fillRule: 'nonzero',\n\n    /**\n     * Composite rule used for canvas globalCompositeOperation\n     * @type String\n     * @default\n     */\n    globalCompositeOperation: 'source-over',\n\n    /**\n     * Background color of an object.\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    backgroundColor: '',\n\n    /**\n     * Selection Background color of an object. colored layer behind the object when it is active.\n     * does not mix good with globalCompositeOperation methods.\n     * @type String\n     * @default\n     */\n    selectionBackgroundColor: '',\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color\n     * takes css colors https://www.w3.org/TR/css-color-3/\n     * @type String\n     * @default\n     */\n    stroke: null,\n\n    /**\n     * Width of a stroke used to render this object\n     * @type Number\n     * @default\n     */\n    strokeWidth: 1,\n\n    /**\n     * Array specifying dash pattern of an object's stroke (stroke must be defined)\n     * @type Array\n     */\n    strokeDashArray: null,\n\n    /**\n     * Line offset of an object's stroke\n     * @type Number\n     * @default\n     */\n    strokeDashOffset: 0,\n\n    /**\n     * Line endings style of an object's stroke (one of \"butt\", \"round\", \"square\")\n     * @type String\n     * @default\n     */\n    strokeLineCap: 'butt',\n\n    /**\n     * Corner style of an object's stroke (one of \"bevil\", \"round\", \"miter\")\n     * @type String\n     * @default\n     */\n    strokeLineJoin: 'miter',\n\n    /**\n     * Maximum miter length (used for strokeLineJoin = \"miter\") of an object's stroke\n     * @type Number\n     * @default\n     */\n    strokeMiterLimit: 4,\n\n    /**\n     * Shadow object representing shadow of this shape\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow: null,\n\n    /**\n     * Opacity of object's controlling borders when object is active and moving\n     * @type Number\n     * @default\n     */\n    borderOpacityWhenMoving: 0.4,\n\n    /**\n     * Scale factor of object's controlling borders\n     * @type Number\n     * @default\n     */\n    borderScaleFactor: 1,\n\n    /**\n     * Transform matrix (similar to SVG's transform matrix)\n     * @type Array\n     */\n    transformMatrix: null,\n\n    /**\n     * Minimum allowed scale value of an object\n     * @type Number\n     * @default\n     */\n    minScaleLimit: 0,\n\n    /**\n     * When set to `false`, an object can not be selected for modification (using either point-click-based or group-based selection).\n     * But events still fire on it.\n     * @type Boolean\n     * @default\n     */\n    selectable: true,\n\n    /**\n     * When set to `false`, an object can not be a target of events. All events propagate through it. Introduced in v1.3.4\n     * @type Boolean\n     * @default\n     */\n    evented: true,\n\n    /**\n     * When set to `false`, an object is not rendered on canvas\n     * @type Boolean\n     * @default\n     */\n    visible: true,\n\n    /**\n     * When set to `false`, object's controls are not displayed and can not be used to manipulate object\n     * @type Boolean\n     * @default\n     */\n    hasControls: true,\n\n    /**\n     * When set to `false`, object's controlling borders are not rendered\n     * @type Boolean\n     * @default\n     */\n    hasBorders: true,\n\n    /**\n     * When set to `false`, object's controlling rotating point will not be visible or selectable\n     * @type Boolean\n     * @default\n     */\n    hasRotatingPoint: true,\n\n    /**\n     * Offset for object's controlling rotating point (when enabled via `hasRotatingPoint`)\n     * @type Number\n     * @default\n     */\n    rotatingPointOffset: 40,\n\n    /**\n     * When set to `true`, objects are \"found\" on canvas on per-pixel basis rather than according to bounding box\n     * @type Boolean\n     * @default\n     */\n    perPixelTargetFind: false,\n\n    /**\n     * When `false`, default object's values are not included in its serialization\n     * @type Boolean\n     * @default\n     */\n    includeDefaultValues: true,\n\n    /**\n     * Function that determines clipping of an object (context is passed as a first argument).\n     * If you are using code minification, ctx argument can be minified/manglied you should use\n     * as a workaround `var ctx = arguments[0];` in the function;\n     * Note that context origin is at the object's center point (not left/top corner)\n     * @deprecated since 2.0.0\n     * @type Function\n     */\n    clipTo: null,\n\n    /**\n     * When `true`, object horizontal movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementX: false,\n\n    /**\n     * When `true`, object vertical movement is locked\n     * @type Boolean\n     * @default\n     */\n    lockMovementY: false,\n\n    /**\n     * When `true`, object rotation is locked\n     * @type Boolean\n     * @default\n     */\n    lockRotation: false,\n\n    /**\n     * When `true`, object horizontal scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingX: false,\n\n    /**\n     * When `true`, object vertical scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockScalingY: false,\n\n    /**\n     * When `true`, object non-uniform scaling is locked\n     * @type Boolean\n     * @default\n     */\n    lockUniScaling: false,\n\n    /**\n     * When `true`, object horizontal skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingX: false,\n\n    /**\n     * When `true`, object vertical skewing is locked\n     * @type Boolean\n     * @default\n     */\n    lockSkewingY: false,\n\n    /**\n     * When `true`, object cannot be flipped by scaling into negative values\n     * @type Boolean\n     * @default\n     */\n    lockScalingFlip: false,\n\n    /**\n     * When `true`, object is not exported in OBJECT/JSON\n     * @since 1.6.3\n     * @type Boolean\n     * @default\n     */\n    excludeFromExport: false,\n\n    /**\n     * When `true`, object is cached on an additional canvas.\n     * When `false`, object is not cached unless necessary ( clipPath )\n     * default to true\n     * @since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    objectCaching: objectCaching,\n\n    /**\n     * When `true`, object properties are checked for cache invalidation. In some particular\n     * situation you may want this to be disabled ( spray brush, very big, groups)\n     * or if your application does not allow you to modify properties for groups child you want\n     * to disable it for groups.\n     * default to false\n     * since 1.7.0\n     * @type Boolean\n     * @default false\n     */\n    statefullCache: false,\n\n    /**\n     * When `true`, cache does not get updated during scaling. The picture will get blocky if scaled\n     * too much and will be redrawn with correct details at the end of scaling.\n     * this setting is performance and application dependant.\n     * default to true\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    noScaleCache: true,\n\n    /**\n     * When `false`, the stoke width will scale with the object.\n     * When `true`, the stroke will always match the exact pixel size entered for stroke width.\n     * default to false\n     * @since 2.6.0\n     * @type Boolean\n     * @default false\n     * @type Boolean\n     * @default false\n     */\n    strokeUniform: false,\n\n    /**\n     * When set to `true`, object's cache will be rerendered next render call.\n     * since 1.7.0\n     * @type Boolean\n     * @default true\n     */\n    dirty: true,\n\n    /**\n     * keeps the value of the last hovered corner during mouse move.\n     * 0 is no corner, or 'mt', 'ml', 'mtr' etc..\n     * It should be private, but there is no harm in using it as\n     * a read-only property.\n     * @type number|string|any\n     * @default 0\n     */\n    __corner: 0,\n\n    /**\n     * Determines if the fill or the stroke is drawn first (one of \"fill\" or \"stroke\")\n     * @type String\n     * @default\n     */\n    paintFirst: 'fill',\n\n    /**\n     * List of properties to consider when checking if state\n     * of an object is changed (fabric.Object#hasStateChanged)\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: ('top left width height scaleX scaleY flipX flipY originX originY transformMatrix ' + 'stroke strokeWidth strokeDashArray strokeLineCap strokeDashOffset strokeLineJoin strokeMiterLimit ' + 'angle opacity fill globalCompositeOperation shadow clipTo visible backgroundColor ' + 'skewX skewY fillRule paintFirst clipPath strokeUniform').split(' '),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * Those properties are checked by statefullCache ON ( or lazy mode if we want ) or from single\n     * calls to Object.set(key, value). If the key is in this list, the object is marked as dirty\n     * and refreshed at the next render\n     * @type Array\n     */\n    cacheProperties: ('fill stroke strokeWidth strokeDashArray width height paintFirst strokeUniform' + ' strokeLineCap strokeDashOffset strokeLineJoin strokeMiterLimit backgroundColor clipPath').split(' '),\n\n    /**\n     * a fabricObject that, without stroke define a clipping area with their shape. filled in black\n     * the clipPath object gets used when the object has rendered, and the context is placed in the center\n     * of the object cacheCanvas.\n     * If you want 0,0 of a clipPath to align with an object center, use clipPath.originX/Y to 'center'\n     * @type fabric.Object\n     */\n    clipPath: undefined,\n\n    /**\n     * Meaningful ONLY when the object is used as clipPath.\n     * if true, the clipPath will make the object clip to the outside of the clipPath\n     * since 2.4.0\n     * @type boolean\n     * @default false\n     */\n    inverted: false,\n\n    /**\n     * Meaningful ONLY when the object is used as clipPath.\n     * if true, the clipPath will have its top and left relative to canvas, and will\n     * not be influenced by the object transform. This will make the clipPath relative\n     * to the canvas, but clipping just a particular object.\n     * WARNING this is beta, this feature may change or be renamed.\n     * since 2.4.0\n     * @type boolean\n     * @default false\n     */\n    absolutePositioned: false,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function initialize(options) {\n      if (options) {\n        this.setOptions(options);\n      }\n    },\n\n    /**\n     * Create a the canvas used to keep the cached copy of the object\n     * @private\n     */\n    _createCacheCanvas: function _createCacheCanvas() {\n      this._cacheProperties = {};\n      this._cacheCanvas = fabric.util.createCanvasElement();\n      this._cacheContext = this._cacheCanvas.getContext('2d');\n\n      this._updateCacheCanvas(); // if canvas gets created, is empty, so dirty.\n\n\n      this.dirty = true;\n    },\n\n    /**\n     * Limit the cache dimensions so that X * Y do not cross fabric.perfLimitSizeTotal\n     * and each side do not cross fabric.cacheSideLimit\n     * those numbers are configurable so that you can get as much detail as you want\n     * making bargain with performances.\n     * @param {Object} dims\n     * @param {Object} dims.width width of canvas\n     * @param {Object} dims.height height of canvas\n     * @param {Object} dims.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @param {Object} dims.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _limitCacheSize: function _limitCacheSize(dims) {\n      var perfLimitSizeTotal = fabric.perfLimitSizeTotal,\n          width = dims.width,\n          height = dims.height,\n          max = fabric.maxCacheSideLimit,\n          min = fabric.minCacheSideLimit;\n\n      if (width <= max && height <= max && width * height <= perfLimitSizeTotal) {\n        if (width < min) {\n          dims.width = min;\n        }\n\n        if (height < min) {\n          dims.height = min;\n        }\n\n        return dims;\n      }\n\n      var ar = width / height,\n          limitedDims = fabric.util.limitDimsByArea(ar, perfLimitSizeTotal),\n          capValue = fabric.util.capValue,\n          x = capValue(min, limitedDims.x, max),\n          y = capValue(min, limitedDims.y, max);\n\n      if (width > x) {\n        dims.zoomX /= width / x;\n        dims.width = x;\n        dims.capped = true;\n      }\n\n      if (height > y) {\n        dims.zoomY /= height / y;\n        dims.height = y;\n        dims.capped = true;\n      }\n\n      return dims;\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @return {Object}.x width of object to be cached\n     * @return {Object}.y height of object to be cached\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function _getCacheCanvasDimensions() {\n      var objectScale = this.getTotalObjectScaling(),\n          // caculate dimensions without skewing\n      dim = this._getTransformedDimensions(0, 0),\n          neededX = dim.x * objectScale.scaleX / this.scaleX,\n          neededY = dim.y * objectScale.scaleY / this.scaleY;\n\n      return {\n        // for sure this ALIASING_LIMIT is slightly creating problem\n        // in situation in which the cache canvas gets an upper limit\n        // also objectScale contains already scaleX and scaleY\n        width: neededX + ALIASING_LIMIT,\n        height: neededY + ALIASING_LIMIT,\n        zoomX: objectScale.scaleX,\n        zoomY: objectScale.scaleY,\n        x: neededX,\n        y: neededY\n      };\n    },\n\n    /**\n     * Update width and height of the canvas for cache\n     * returns true or false if canvas needed resize.\n     * @private\n     * @return {Boolean} true if the canvas has been resized\n     */\n    _updateCacheCanvas: function _updateCacheCanvas() {\n      var targetCanvas = this.canvas;\n\n      if (this.noScaleCache && targetCanvas && targetCanvas._currentTransform) {\n        var target = targetCanvas._currentTransform.target,\n            action = targetCanvas._currentTransform.action;\n\n        if (this === target && action.slice && action.slice(0, 5) === 'scale') {\n          return false;\n        }\n      }\n\n      var canvas = this._cacheCanvas,\n          dims = this._limitCacheSize(this._getCacheCanvasDimensions()),\n          minCacheSize = fabric.minCacheSideLimit,\n          width = dims.width,\n          height = dims.height,\n          drawingWidth,\n          drawingHeight,\n          zoomX = dims.zoomX,\n          zoomY = dims.zoomY,\n          dimensionsChanged = width !== this.cacheWidth || height !== this.cacheHeight,\n          zoomChanged = this.zoomX !== zoomX || this.zoomY !== zoomY,\n          shouldRedraw = dimensionsChanged || zoomChanged,\n          additionalWidth = 0,\n          additionalHeight = 0,\n          shouldResizeCanvas = false;\n\n      if (dimensionsChanged) {\n        var canvasWidth = this._cacheCanvas.width,\n            canvasHeight = this._cacheCanvas.height,\n            sizeGrowing = width > canvasWidth || height > canvasHeight,\n            sizeShrinking = (width < canvasWidth * 0.9 || height < canvasHeight * 0.9) && canvasWidth > minCacheSize && canvasHeight > minCacheSize;\n        shouldResizeCanvas = sizeGrowing || sizeShrinking;\n\n        if (sizeGrowing && !dims.capped && (width > minCacheSize || height > minCacheSize)) {\n          additionalWidth = width * 0.1;\n          additionalHeight = height * 0.1;\n        }\n      }\n\n      if (shouldRedraw) {\n        if (shouldResizeCanvas) {\n          canvas.width = Math.ceil(width + additionalWidth);\n          canvas.height = Math.ceil(height + additionalHeight);\n        } else {\n          this._cacheContext.setTransform(1, 0, 0, 1, 0, 0);\n\n          this._cacheContext.clearRect(0, 0, canvas.width, canvas.height);\n        }\n\n        drawingWidth = dims.x / 2;\n        drawingHeight = dims.y / 2;\n        this.cacheTranslationX = Math.round(canvas.width / 2 - drawingWidth) + drawingWidth;\n        this.cacheTranslationY = Math.round(canvas.height / 2 - drawingHeight) + drawingHeight;\n        this.cacheWidth = width;\n        this.cacheHeight = height;\n\n        this._cacheContext.translate(this.cacheTranslationX, this.cacheTranslationY);\n\n        this._cacheContext.scale(zoomX, zoomY);\n\n        this.zoomX = zoomX;\n        this.zoomY = zoomY;\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Sets object's properties from options\n     * @param {Object} [options] Options object\n     */\n    setOptions: function setOptions(options) {\n      this._setOptions(options);\n\n      this._initGradient(options.fill, 'fill');\n\n      this._initGradient(options.stroke, 'stroke');\n\n      this._initClipping(options);\n\n      this._initPattern(options.fill, 'fill');\n\n      this._initPattern(options.stroke, 'stroke');\n    },\n\n    /**\n     * Transforms context when rendering an object\n     * @param {CanvasRenderingContext2D} ctx Context\n     */\n    transform: function transform(ctx) {\n      var m;\n\n      if (this.group && !this.group._transformDone) {\n        m = this.calcTransformMatrix();\n      } else {\n        m = this.calcOwnMatrix();\n      }\n\n      ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n    },\n\n    /**\n     * Returns an object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function toObject(propertiesToInclude) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS,\n          object = {\n        type: this.type,\n        version: fabric.version,\n        originX: this.originX,\n        originY: this.originY,\n        left: toFixed(this.left, NUM_FRACTION_DIGITS),\n        top: toFixed(this.top, NUM_FRACTION_DIGITS),\n        width: toFixed(this.width, NUM_FRACTION_DIGITS),\n        height: toFixed(this.height, NUM_FRACTION_DIGITS),\n        fill: this.fill && this.fill.toObject ? this.fill.toObject() : this.fill,\n        stroke: this.stroke && this.stroke.toObject ? this.stroke.toObject() : this.stroke,\n        strokeWidth: toFixed(this.strokeWidth, NUM_FRACTION_DIGITS),\n        strokeDashArray: this.strokeDashArray ? this.strokeDashArray.concat() : this.strokeDashArray,\n        strokeLineCap: this.strokeLineCap,\n        strokeDashOffset: this.strokeDashOffset,\n        strokeLineJoin: this.strokeLineJoin,\n        strokeMiterLimit: toFixed(this.strokeMiterLimit, NUM_FRACTION_DIGITS),\n        scaleX: toFixed(this.scaleX, NUM_FRACTION_DIGITS),\n        scaleY: toFixed(this.scaleY, NUM_FRACTION_DIGITS),\n        angle: toFixed(this.angle, NUM_FRACTION_DIGITS),\n        flipX: this.flipX,\n        flipY: this.flipY,\n        opacity: toFixed(this.opacity, NUM_FRACTION_DIGITS),\n        shadow: this.shadow && this.shadow.toObject ? this.shadow.toObject() : this.shadow,\n        visible: this.visible,\n        clipTo: this.clipTo && String(this.clipTo),\n        backgroundColor: this.backgroundColor,\n        fillRule: this.fillRule,\n        paintFirst: this.paintFirst,\n        globalCompositeOperation: this.globalCompositeOperation,\n        transformMatrix: this.transformMatrix ? this.transformMatrix.concat() : null,\n        skewX: toFixed(this.skewX, NUM_FRACTION_DIGITS),\n        skewY: toFixed(this.skewY, NUM_FRACTION_DIGITS)\n      };\n\n      if (this.clipPath) {\n        object.clipPath = this.clipPath.toObject(propertiesToInclude);\n        object.clipPath.inverted = this.clipPath.inverted;\n        object.clipPath.absolutePositioned = this.clipPath.absolutePositioned;\n      }\n\n      fabric.util.populateWithProperties(this, object, propertiesToInclude);\n\n      if (!this.includeDefaultValues) {\n        object = this._removeDefaultValues(object);\n      }\n\n      return object;\n    },\n\n    /**\n     * Returns (dataless) object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toDatalessObject: function toDatalessObject(propertiesToInclude) {\n      // will be overwritten by subclasses\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     */\n    _removeDefaultValues: function _removeDefaultValues(object) {\n      var prototype = fabric.util.getKlass(object.type).prototype,\n          stateProperties = prototype.stateProperties;\n      stateProperties.forEach(function (prop) {\n        if (prop === 'left' || prop === 'top') {\n          return;\n        }\n\n        if (object[prop] === prototype[prop]) {\n          delete object[prop];\n        }\n\n        var isArray = Object.prototype.toString.call(object[prop]) === '[object Array]' && Object.prototype.toString.call(prototype[prop]) === '[object Array]'; // basically a check for [] === []\n\n        if (isArray && object[prop].length === 0 && prototype[prop].length === 0) {\n          delete object[prop];\n        }\n      });\n      return object;\n    },\n\n    /**\n     * Returns a string representation of an instance\n     * @return {String}\n     */\n    toString: function toString() {\n      return '#<fabric.' + capitalize(this.type) + '>';\n    },\n\n    /**\n     * Return the object scale factor counting also the group scaling\n     * @return {Object} object with scaleX and scaleY properties\n     */\n    getObjectScaling: function getObjectScaling() {\n      var scaleX = this.scaleX,\n          scaleY = this.scaleY;\n\n      if (this.group) {\n        var scaling = this.group.getObjectScaling();\n        scaleX *= scaling.scaleX;\n        scaleY *= scaling.scaleY;\n      }\n\n      return {\n        scaleX: scaleX,\n        scaleY: scaleY\n      };\n    },\n\n    /**\n     * Return the object scale factor counting also the group scaling, zoom and retina\n     * @return {Object} object with scaleX and scaleY properties\n     */\n    getTotalObjectScaling: function getTotalObjectScaling() {\n      var scale = this.getObjectScaling(),\n          scaleX = scale.scaleX,\n          scaleY = scale.scaleY;\n\n      if (this.canvas) {\n        var zoom = this.canvas.getZoom();\n        var retina = this.canvas.getRetinaScaling();\n        scaleX *= zoom * retina;\n        scaleY *= zoom * retina;\n      }\n\n      return {\n        scaleX: scaleX,\n        scaleY: scaleY\n      };\n    },\n\n    /**\n     * Return the object opacity counting also the group property\n     * @return {Number}\n     */\n    getObjectOpacity: function getObjectOpacity() {\n      var opacity = this.opacity;\n\n      if (this.group) {\n        opacity *= this.group.getObjectOpacity();\n      }\n\n      return opacity;\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Object} thisArg\n     */\n    _set: function _set(key, value) {\n      var shouldConstrainValue = key === 'scaleX' || key === 'scaleY',\n          isChanged = this[key] !== value,\n          groupNeedsUpdate = false;\n\n      if (shouldConstrainValue) {\n        value = this._constrainScale(value);\n      }\n\n      if (key === 'scaleX' && value < 0) {\n        this.flipX = !this.flipX;\n        value *= -1;\n      } else if (key === 'scaleY' && value < 0) {\n        this.flipY = !this.flipY;\n        value *= -1;\n      } else if (key === 'shadow' && value && !(value instanceof fabric.Shadow)) {\n        value = new fabric.Shadow(value);\n      } else if (key === 'dirty' && this.group) {\n        this.group.set('dirty', value);\n      }\n\n      this[key] = value;\n\n      if (isChanged) {\n        groupNeedsUpdate = this.group && this.group.isOnACache();\n\n        if (this.cacheProperties.indexOf(key) > -1) {\n          this.dirty = true;\n          groupNeedsUpdate && this.group.set('dirty', true);\n        } else if (groupNeedsUpdate && this.stateProperties.indexOf(key) > -1) {\n          this.group.set('dirty', true);\n        }\n      }\n\n      return this;\n    },\n\n    /**\n     * This callback function is called by the parent group of an object every\n     * time a non-delegated property changes on the group. It is passed the key\n     * and value as parameters. Not adding in this function's signature to avoid\n     * Travis build error about unused variables.\n     */\n    setOnGroup: function setOnGroup() {// implemented by sub-classes, as needed.\n    },\n\n    /**\n     * Retrieves viewportTransform from Object's canvas if possible\n     * @method getViewportTransform\n     * @memberOf fabric.Object.prototype\n     * @return {Array}\n     */\n    getViewportTransform: function getViewportTransform() {\n      if (this.canvas && this.canvas.viewportTransform) {\n        return this.canvas.viewportTransform;\n      }\n\n      return fabric.iMatrix.concat();\n    },\n\n    /*\n     * @private\n     * return if the object would be visible in rendering\n     * @memberOf fabric.Object.prototype\n     * @return {Boolean}\n     */\n    isNotVisible: function isNotVisible() {\n      return this.opacity === 0 || this.width === 0 && this.height === 0 && this.strokeWidth === 0 || !this.visible;\n    },\n\n    /**\n     * Renders an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function render(ctx) {\n      // do not render if width/height are zeros or object is not visible\n      if (this.isNotVisible()) {\n        return;\n      }\n\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n\n      ctx.save();\n\n      this._setupCompositeOperation(ctx);\n\n      this.drawSelectionBackground(ctx);\n      this.transform(ctx);\n\n      this._setOpacity(ctx);\n\n      this._setShadow(ctx, this);\n\n      if (this.transformMatrix) {\n        ctx.transform.apply(ctx, this.transformMatrix);\n      }\n\n      this.clipTo && fabric.util.clipContext(this, ctx);\n\n      if (this.shouldCache()) {\n        this.renderCache();\n        this.drawCacheOnCanvas(ctx);\n      } else {\n        this._removeCacheCanvas();\n\n        this.dirty = false;\n        this.drawObject(ctx);\n\n        if (this.objectCaching && this.statefullCache) {\n          this.saveState({\n            propertySet: 'cacheProperties'\n          });\n        }\n      }\n\n      this.clipTo && ctx.restore();\n      ctx.restore();\n    },\n    renderCache: function renderCache(options) {\n      options = options || {};\n\n      if (!this._cacheCanvas) {\n        this._createCacheCanvas();\n      }\n\n      if (this.isCacheDirty()) {\n        this.statefullCache && this.saveState({\n          propertySet: 'cacheProperties'\n        });\n        this.drawObject(this._cacheContext, options.forClipping);\n        this.dirty = false;\n      }\n    },\n\n    /**\n     * Remove cacheCanvas and its dimensions from the objects\n     */\n    _removeCacheCanvas: function _removeCacheCanvas() {\n      this._cacheCanvas = null;\n      this.cacheWidth = 0;\n      this.cacheHeight = 0;\n    },\n\n    /**\n     * return true if the object will draw a stroke\n     * Does not consider text styles. This is just a shortcut used at rendering time\n     * We want it to be an aproximation and be fast.\n     * wrote to avoid extra caching, it has to return true when stroke happens,\n     * can guess when it will not happen at 100% chance, does not matter if it misses\n     * some use case where the stroke is invisible.\n     * @since 3.0.0\n     * @returns Boolean\n     */\n    hasStroke: function hasStroke() {\n      return this.stroke && this.stroke !== 'transparent' && this.strokeWidth !== 0;\n    },\n\n    /**\n     * return true if the object will draw a fill\n     * Does not consider text styles. This is just a shortcut used at rendering time\n     * We want it to be an aproximation and be fast.\n     * wrote to avoid extra caching, it has to return true when fill happens,\n     * can guess when it will not happen at 100% chance, does not matter if it misses\n     * some use case where the fill is invisible.\n     * @since 3.0.0\n     * @returns Boolean\n     */\n    hasFill: function hasFill() {\n      return this.fill && this.fill !== 'transparent';\n    },\n\n    /**\n     * When set to `true`, force the object to have its own cache, even if it is inside a group\n     * it may be needed when your object behave in a particular way on the cache and always needs\n     * its own isolated canvas to render correctly.\n     * Created to be overridden\n     * since 1.7.12\n     * @returns Boolean\n     */\n    needsItsOwnCache: function needsItsOwnCache() {\n      if (this.paintFirst === 'stroke' && this.hasFill() && this.hasStroke() && typeof this.shadow === 'object') {\n        return true;\n      }\n\n      if (this.clipPath) {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * Read as: cache if is needed, or if the feature is enabled but we are not already caching.\n     * @return {Boolean}\n     */\n    shouldCache: function shouldCache() {\n      this.ownCaching = this.needsItsOwnCache() || this.objectCaching && (!this.group || !this.group.isOnACache());\n      return this.ownCaching;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * used by Group.shouldCache to know if child has a shadow recursively\n     * @return {Boolean}\n     */\n    willDrawShadow: function willDrawShadow() {\n      return !!this.shadow && (this.shadow.offsetX !== 0 || this.shadow.offsetY !== 0);\n    },\n\n    /**\n     * Execute the drawing operation for an object clipPath\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawClipPathOnCache: function drawClipPathOnCache(ctx) {\n      var path = this.clipPath;\n      ctx.save(); // DEBUG: uncomment this line, comment the following\n      // ctx.globalAlpha = 0.4\n\n      if (path.inverted) {\n        ctx.globalCompositeOperation = 'destination-out';\n      } else {\n        ctx.globalCompositeOperation = 'destination-in';\n      } //ctx.scale(1 / 2, 1 / 2);\n\n\n      if (path.absolutePositioned) {\n        var m = fabric.util.invertTransform(this.calcTransformMatrix());\n        ctx.transform(m[0], m[1], m[2], m[3], m[4], m[5]);\n      }\n\n      path.transform(ctx);\n      ctx.scale(1 / path.zoomX, 1 / path.zoomY);\n      ctx.drawImage(path._cacheCanvas, -path.cacheTranslationX, -path.cacheTranslationY);\n      ctx.restore();\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawObject: function drawObject(ctx, forClipping) {\n      var originalFill = this.fill,\n          originalStroke = this.stroke;\n\n      if (forClipping) {\n        this.fill = 'black';\n        this.stroke = '';\n\n        this._setClippingProperties(ctx);\n      } else {\n        this._renderBackground(ctx);\n\n        this._setStrokeStyles(ctx, this);\n\n        this._setFillStyles(ctx, this);\n      }\n\n      this._render(ctx);\n\n      this._drawClipPath(ctx);\n\n      this.fill = originalFill;\n      this.stroke = originalStroke;\n    },\n    _drawClipPath: function _drawClipPath(ctx) {\n      var path = this.clipPath;\n\n      if (!path) {\n        return;\n      } // needed to setup a couple of variables\n      // path canvas gets overridden with this one.\n      // TODO find a better solution?\n\n\n      path.canvas = this.canvas;\n      path.shouldCache();\n      path._transformDone = true;\n      path.renderCache({\n        forClipping: true\n      });\n      this.drawClipPathOnCache(ctx);\n    },\n\n    /**\n     * Paint the cached copy of the object on the target context.\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawCacheOnCanvas: function drawCacheOnCanvas(ctx) {\n      ctx.scale(1 / this.zoomX, 1 / this.zoomY);\n      ctx.drawImage(this._cacheCanvas, -this.cacheTranslationX, -this.cacheTranslationY);\n    },\n\n    /**\n     * Check if cache is dirty\n     * @param {Boolean} skipCanvas skip canvas checks because this object is painted\n     * on parent canvas.\n     */\n    isCacheDirty: function isCacheDirty(skipCanvas) {\n      if (this.isNotVisible()) {\n        return false;\n      }\n\n      if (this._cacheCanvas && !skipCanvas && this._updateCacheCanvas()) {\n        // in this case the context is already cleared.\n        return true;\n      } else {\n        if (this.dirty || this.clipPath && this.clipPath.absolutePositioned || this.statefullCache && this.hasStateChanged('cacheProperties')) {\n          if (this._cacheCanvas && !skipCanvas) {\n            var width = this.cacheWidth / this.zoomX;\n            var height = this.cacheHeight / this.zoomY;\n\n            this._cacheContext.clearRect(-width / 2, -height / 2, width, height);\n          }\n\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Draws a background for the object big as its untransformed dimensions\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderBackground: function _renderBackground(ctx) {\n      if (!this.backgroundColor) {\n        return;\n      }\n\n      var dim = this._getNonTransformedDimensions();\n\n      ctx.fillStyle = this.backgroundColor;\n      ctx.fillRect(-dim.x / 2, -dim.y / 2, dim.x, dim.y); // if there is background color no other shadows\n      // should be casted\n\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setOpacity: function _setOpacity(ctx) {\n      if (this.group && !this.group._transformDone) {\n        ctx.globalAlpha = this.getObjectOpacity();\n      } else {\n        ctx.globalAlpha *= this.opacity;\n      }\n    },\n    _setStrokeStyles: function _setStrokeStyles(ctx, decl) {\n      if (decl.stroke) {\n        ctx.lineWidth = decl.strokeWidth;\n        ctx.lineCap = decl.strokeLineCap;\n        ctx.lineDashOffset = decl.strokeDashOffset;\n        ctx.lineJoin = decl.strokeLineJoin;\n        ctx.miterLimit = decl.strokeMiterLimit;\n        ctx.strokeStyle = decl.stroke.toLive ? decl.stroke.toLive(ctx, this) : decl.stroke;\n      }\n    },\n    _setFillStyles: function _setFillStyles(ctx, decl) {\n      if (decl.fill) {\n        ctx.fillStyle = decl.fill.toLive ? decl.fill.toLive(ctx, this) : decl.fill;\n      }\n    },\n    _setClippingProperties: function _setClippingProperties(ctx) {\n      ctx.globalAlpha = 1;\n      ctx.strokeStyle = 'transparent';\n      ctx.fillStyle = '#000000';\n    },\n\n    /**\n     * @private\n     * Sets line dash\n     * @param {CanvasRenderingContext2D} ctx Context to set the dash line on\n     * @param {Array} dashArray array representing dashes\n     * @param {Function} alternative function to call if browser does not support lineDash\n     */\n    _setLineDash: function _setLineDash(ctx, dashArray, alternative) {\n      if (!dashArray) {\n        return;\n      } // Spec requires the concatenation of two copies the dash list when the number of elements is odd\n\n\n      if (1 & dashArray.length) {\n        dashArray.push.apply(dashArray, dashArray);\n      }\n\n      if (supportsLineDash) {\n        ctx.setLineDash(dashArray);\n      } else {\n        alternative && alternative(ctx);\n      }\n\n      if (this.strokeUniform) {\n        ctx.setLineDash(ctx.getLineDash().map(function (value) {\n          return value * ctx.lineWidth;\n        }));\n      }\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [styleOverride] properties to override the object style\n     */\n    _renderControls: function _renderControls(ctx, styleOverride) {\n      var vpt = this.getViewportTransform(),\n          matrix = this.calcTransformMatrix(),\n          options,\n          drawBorders,\n          drawControls;\n      styleOverride = styleOverride || {};\n      drawBorders = typeof styleOverride.hasBorders !== 'undefined' ? styleOverride.hasBorders : this.hasBorders;\n      drawControls = typeof styleOverride.hasControls !== 'undefined' ? styleOverride.hasControls : this.hasControls;\n      matrix = fabric.util.multiplyTransformMatrices(vpt, matrix);\n      options = fabric.util.qrDecompose(matrix);\n      ctx.save();\n      ctx.translate(options.translateX, options.translateY);\n      ctx.lineWidth = 1 * this.borderScaleFactor;\n\n      if (!this.group) {\n        ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      }\n\n      if (styleOverride.forActiveSelection) {\n        ctx.rotate(degreesToRadians(options.angle));\n        drawBorders && this.drawBordersInGroup(ctx, options, styleOverride);\n      } else {\n        ctx.rotate(degreesToRadians(this.angle));\n        drawBorders && this.drawBorders(ctx, styleOverride);\n      }\n\n      drawControls && this.drawControls(ctx, styleOverride);\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _setShadow: function _setShadow(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      var shadow = this.shadow,\n          canvas = this.canvas,\n          scaling,\n          multX = canvas && canvas.viewportTransform[0] || 1,\n          multY = canvas && canvas.viewportTransform[3] || 1;\n\n      if (shadow.nonScaling) {\n        scaling = {\n          scaleX: 1,\n          scaleY: 1\n        };\n      } else {\n        scaling = this.getObjectScaling();\n      }\n\n      if (canvas && canvas._isRetinaScaling()) {\n        multX *= fabric.devicePixelRatio;\n        multY *= fabric.devicePixelRatio;\n      }\n\n      ctx.shadowColor = shadow.color;\n      ctx.shadowBlur = shadow.blur * fabric.browserShadowBlurConstant * (multX + multY) * (scaling.scaleX + scaling.scaleY) / 4;\n      ctx.shadowOffsetX = shadow.offsetX * multX * scaling.scaleX;\n      ctx.shadowOffsetY = shadow.offsetY * multY * scaling.scaleY;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _removeShadow: function _removeShadow(ctx) {\n      if (!this.shadow) {\n        return;\n      }\n\n      ctx.shadowColor = '';\n      ctx.shadowBlur = ctx.shadowOffsetX = ctx.shadowOffsetY = 0;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} filler fabric.Pattern or fabric.Gradient\n     * @return {Object} offset.offsetX offset for text rendering\n     * @return {Object} offset.offsetY offset for text rendering\n     */\n    _applyPatternGradientTransform: function _applyPatternGradientTransform(ctx, filler) {\n      if (!filler || !filler.toLive) {\n        return {\n          offsetX: 0,\n          offsetY: 0\n        };\n      }\n\n      var t = filler.gradientTransform || filler.patternTransform;\n      var offsetX = -this.width / 2 + filler.offsetX || 0,\n          offsetY = -this.height / 2 + filler.offsetY || 0;\n      ctx.translate(offsetX, offsetY);\n\n      if (t) {\n        ctx.transform(t[0], t[1], t[2], t[3], t[4], t[5]);\n      }\n\n      return {\n        offsetX: offsetX,\n        offsetY: offsetY\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderPaintInOrder: function _renderPaintInOrder(ctx) {\n      if (this.paintFirst === 'stroke') {\n        this._renderStroke(ctx);\n\n        this._renderFill(ctx);\n      } else {\n        this._renderFill(ctx);\n\n        this._renderStroke(ctx);\n      }\n    },\n\n    /**\n     * @private\n     * function that actually render something on the context.\n     * empty here to allow Obects to work on tests to benchmark fabric functionalites\n     * not related to rendering\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function _render()\n    /* ctx */\n    {},\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderFill: function _renderFill(ctx) {\n      if (!this.fill) {\n        return;\n      }\n\n      ctx.save();\n\n      this._applyPatternGradientTransform(ctx, this.fill);\n\n      if (this.fillRule === 'evenodd') {\n        ctx.fill('evenodd');\n      } else {\n        ctx.fill();\n      }\n\n      ctx.restore();\n    },\n    _renderStroke: function _renderStroke(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n\n      if (this.strokeUniform) {\n        ctx.scale(1 / this.scaleX, 1 / this.scaleY);\n      }\n\n      this._setLineDash(ctx, this.strokeDashArray, this._renderDashedStroke);\n\n      this._applyPatternGradientTransform(ctx, this.stroke);\n\n      ctx.stroke();\n      ctx.restore();\n    },\n\n    /**\n     * This function is an helper for svg import. it returns the center of the object in the svg\n     * untransformed coordinates\n     * @private\n     * @return {Object} center point from element coordinates\n     */\n    _findCenterFromElement: function _findCenterFromElement() {\n      return {\n        x: this.left + this.width / 2,\n        y: this.top + this.height / 2\n      };\n    },\n\n    /**\n     * This function is an helper for svg import. it decompose the transformMatrix\n     * and assign properties to object.\n     * untransformed coordinates\n     * @private\n     * @chainable\n     */\n    _assignTransformMatrixProps: function _assignTransformMatrixProps() {\n      if (this.transformMatrix) {\n        var options = fabric.util.qrDecompose(this.transformMatrix);\n        this.flipX = false;\n        this.flipY = false;\n        this.set('scaleX', options.scaleX);\n        this.set('scaleY', options.scaleY);\n        this.angle = options.angle;\n        this.skewX = options.skewX;\n        this.skewY = 0;\n      }\n    },\n\n    /**\n     * This function is an helper for svg import. it removes the transform matrix\n     * and set to object properties that fabricjs can handle\n     * @private\n     * @param {Object} preserveAspectRatioOptions\n     * @return {thisArg}\n     */\n    _removeTransformMatrix: function _removeTransformMatrix(preserveAspectRatioOptions) {\n      var center = this._findCenterFromElement();\n\n      if (this.transformMatrix) {\n        this._assignTransformMatrixProps();\n\n        center = fabric.util.transformPoint(center, this.transformMatrix);\n      }\n\n      this.transformMatrix = null;\n\n      if (preserveAspectRatioOptions) {\n        this.scaleX *= preserveAspectRatioOptions.scaleX;\n        this.scaleY *= preserveAspectRatioOptions.scaleY;\n        this.cropX = preserveAspectRatioOptions.cropX;\n        this.cropY = preserveAspectRatioOptions.cropY;\n        center.x += preserveAspectRatioOptions.offsetLeft;\n        center.y += preserveAspectRatioOptions.offsetTop;\n        this.width = preserveAspectRatioOptions.width;\n        this.height = preserveAspectRatioOptions.height;\n      }\n\n      this.setPositionByOrigin(center, 'center', 'center');\n    },\n\n    /**\n     * Clones an instance, using a callback method will work for every object.\n     * @param {Function} callback Callback is invoked with a clone as a first argument\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     */\n    clone: function clone(callback, propertiesToInclude) {\n      var objectForm = this.toObject(propertiesToInclude);\n\n      if (this.constructor.fromObject) {\n        this.constructor.fromObject(objectForm, callback);\n      } else {\n        fabric.Object._fromObject('Object', objectForm, callback);\n      }\n    },\n\n    /**\n     * Creates an instance of fabric.Image out of an object\n     * could make use of both toDataUrl or toCanvasElement.\n     * @param {Function} callback callback, invoked with an instance as a first argument\n     * @param {Object} [options] for clone as image, passed to toDataURL\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n     * @return {fabric.Object} thisArg\n     */\n    cloneAsImage: function cloneAsImage(callback, options) {\n      var canvasEl = this.toCanvasElement(options);\n\n      if (callback) {\n        callback(new fabric.Image(canvasEl));\n      }\n\n      return this;\n    },\n\n    /**\n     * Converts an object into a HTMLCanvas element\n     * @param {Object} options Options object\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     */\n    toCanvasElement: function toCanvasElement(options) {\n      options || (options = {});\n      var utils = fabric.util,\n          origParams = utils.saveObjectTransform(this),\n          originalShadow = this.shadow,\n          abs = Math.abs,\n          multiplier = (options.multiplier || 1) * (options.enableRetinaScaling ? fabric.devicePixelRatio : 1);\n\n      if (options.withoutTransform) {\n        utils.resetObjectTransform(this);\n      }\n\n      if (options.withoutShadow) {\n        this.shadow = null;\n      }\n\n      var el = fabric.util.createCanvasElement(),\n          // skip canvas zoom and calculate with setCoords now.\n      boundingRect = this.getBoundingRect(true, true),\n          shadow = this.shadow,\n          scaling,\n          shadowOffset = {\n        x: 0,\n        y: 0\n      },\n          shadowBlur;\n\n      if (shadow) {\n        shadowBlur = shadow.blur;\n\n        if (shadow.nonScaling) {\n          scaling = {\n            scaleX: 1,\n            scaleY: 1\n          };\n        } else {\n          scaling = this.getObjectScaling();\n        }\n\n        shadowOffset.x = 2 * Math.round(abs(shadow.offsetX) + shadowBlur) * abs(scaling.scaleX);\n        shadowOffset.y = 2 * Math.round(abs(shadow.offsetY) + shadowBlur) * abs(scaling.scaleY);\n      }\n\n      el.width = boundingRect.width + shadowOffset.x;\n      el.height = boundingRect.height + shadowOffset.y;\n      el.width += el.width % 2 ? 2 - el.width % 2 : 0;\n      el.height += el.height % 2 ? 2 - el.height % 2 : 0;\n      var canvas = new fabric.StaticCanvas(el, {\n        enableRetinaScaling: false,\n        renderOnAddRemove: false,\n        skipOffscreen: false\n      });\n\n      if (options.format === 'jpeg') {\n        canvas.backgroundColor = '#fff';\n      }\n\n      this.setPositionByOrigin(new fabric.Point(canvas.width / 2, canvas.height / 2), 'center', 'center');\n      var originalCanvas = this.canvas;\n      canvas.add(this);\n      var canvasEl = canvas.toCanvasElement(multiplier || 1, options);\n      this.shadow = originalShadow;\n      this.canvas = originalCanvas;\n      this.set(origParams).setCoords(); // canvas.dispose will call image.dispose that will nullify the elements\n      // since this canvas is a simple element for the process, we remove references\n      // to objects in this way in order to avoid object trashing.\n\n      canvas._objects = [];\n      canvas.dispose();\n      canvas = null;\n      return canvasEl;\n    },\n\n    /**\n     * Converts an object into a data-url-like string\n     * @param {Object} options Options object\n     * @param {String} [options.format=png] The format of the output image. Either \"jpeg\" or \"png\"\n     * @param {Number} [options.quality=1] Quality level (0..1). Only used for jpeg.\n     * @param {Number} [options.multiplier=1] Multiplier to scale by\n     * @param {Number} [options.left] Cropping left offset. Introduced in v1.2.14\n     * @param {Number} [options.top] Cropping top offset. Introduced in v1.2.14\n     * @param {Number} [options.width] Cropping width. Introduced in v1.2.14\n     * @param {Number} [options.height] Cropping height. Introduced in v1.2.14\n     * @param {Boolean} [options.enableRetinaScaling] Enable retina scaling for clone image. Introduce in 1.6.4\n     * @param {Boolean} [options.withoutTransform] Remove current object transform ( no scale , no angle, no flip, no skew ). Introduced in 2.3.4\n     * @param {Boolean} [options.withoutShadow] Remove current object shadow. Introduced in 2.4.2\n     * @return {String} Returns a data: URL containing a representation of the object in the format specified by options.format\n     */\n    toDataURL: function toDataURL(options) {\n      options || (options = {});\n      return fabric.util.toDataURL(this.toCanvasElement(options), options.format || 'png', options.quality || 1);\n    },\n\n    /**\n     * Returns true if specified type is identical to the type of an instance\n     * @param {String} type Type to check against\n     * @return {Boolean}\n     */\n    isType: function isType(type) {\n      return this.type === type;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance (is 1 unless subclassed)\n     */\n    complexity: function complexity() {\n      return 1;\n    },\n\n    /**\n     * Returns a JSON representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} JSON\n     */\n    toJSON: function toJSON(propertiesToInclude) {\n      // delegate, not alias\n      return this.toObject(propertiesToInclude);\n    },\n\n    /**\n     * Sets gradient (fill or stroke) of an object\n     * <b>Backwards incompatibility note:</b> This method was named \"setGradientFill\" until v1.1.0\n     * @param {String} property Property name 'stroke' or 'fill'\n     * @param {Object} [options] Options object\n     * @param {String} [options.type] Type of gradient 'radial' or 'linear'\n     * @param {Number} [options.x1=0] x-coordinate of start point\n     * @param {Number} [options.y1=0] y-coordinate of start point\n     * @param {Number} [options.x2=0] x-coordinate of end point\n     * @param {Number} [options.y2=0] y-coordinate of end point\n     * @param {Number} [options.r1=0] Radius of start point (only for radial gradients)\n     * @param {Number} [options.r2=0] Radius of end point (only for radial gradients)\n     * @param {Object} [options.colorStops] Color stops object eg. {0: 'ff0000', 1: '000000'}\n     * @param {Object} [options.gradientTransform] transformMatrix for gradient\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/58y8b/|jsFiddle demo}\n     * @example <caption>Set linear gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'linear',\n     *   x1: -object.width / 2,\n     *   y1: 0,\n     *   x2: object.width / 2,\n     *   y2: 0,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     * @example <caption>Set radial gradient</caption>\n     * object.setGradient('fill', {\n     *   type: 'radial',\n     *   x1: 0,\n     *   y1: 0,\n     *   x2: 0,\n     *   y2: 0,\n     *   r1: object.width / 2,\n     *   r2: 10,\n     *   colorStops: {\n     *     0: 'red',\n     *     0.5: '#005555',\n     *     1: 'rgba(0,0,255,0.5)'\n     *   }\n     * });\n     * canvas.renderAll();\n     */\n    setGradient: function setGradient(property, options) {\n      options || (options = {});\n      var gradient = {\n        colorStops: []\n      };\n      gradient.type = options.type || (options.r1 || options.r2 ? 'radial' : 'linear');\n      gradient.coords = {\n        x1: options.x1,\n        y1: options.y1,\n        x2: options.x2,\n        y2: options.y2\n      };\n\n      if (options.r1 || options.r2) {\n        gradient.coords.r1 = options.r1;\n        gradient.coords.r2 = options.r2;\n      }\n\n      gradient.gradientTransform = options.gradientTransform;\n      fabric.Gradient.prototype.addColorStop.call(gradient, options.colorStops);\n      return this.set(property, fabric.Gradient.forObject(this, gradient));\n    },\n\n    /**\n     * Sets pattern fill of an object\n     * @param {Object} options Options object\n     * @param {(String|HTMLImageElement)} options.source Pattern source\n     * @param {String} [options.repeat=repeat] Repeat property of a pattern (one of repeat, repeat-x, repeat-y or no-repeat)\n     * @param {Number} [options.offsetX=0] Pattern horizontal offset from object's left/top corner\n     * @param {Number} [options.offsetY=0] Pattern vertical offset from object's left/top corner\n     * @param {Function} [callback] Callback to invoke when image set as a pattern\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/QT3pa/|jsFiddle demo}\n     * @example <caption>Set pattern</caption>\n     * object.setPatternFill({\n     *   source: 'http://fabricjs.com/assets/escheresque_ste.png',\n     *   repeat: 'repeat'\n     * },canvas.renderAll.bind(canvas));\n     */\n    setPatternFill: function setPatternFill(options, callback) {\n      return this.set('fill', new fabric.Pattern(options, callback));\n    },\n\n    /**\n     * Sets {@link fabric.Object#shadow|shadow} of an object\n     * @param {Object|String} [options] Options object or string (e.g. \"2px 2px 10px rgba(0,0,0,0.2)\")\n     * @param {String} [options.color=rgb(0,0,0)] Shadow color\n     * @param {Number} [options.blur=0] Shadow blur\n     * @param {Number} [options.offsetX=0] Shadow horizontal offset\n     * @param {Number} [options.offsetY=0] Shadow vertical offset\n     * @return {fabric.Object} thisArg\n     * @chainable\n     * @see {@link http://jsfiddle.net/fabricjs/7gvJG/|jsFiddle demo}\n     * @example <caption>Set shadow with string notation</caption>\n     * object.setShadow('2px 2px 10px rgba(0,0,0,0.2)');\n     * canvas.renderAll();\n     * @example <caption>Set shadow with object notation</caption>\n     * object.setShadow({\n     *   color: 'red',\n     *   blur: 10,\n     *   offsetX: 20,\n     *   offsetY: 20\n     * });\n     * canvas.renderAll();\n     */\n    setShadow: function setShadow(options) {\n      return this.set('shadow', options ? new fabric.Shadow(options) : null);\n    },\n\n    /**\n     * Sets \"color\" of an instance (alias of `set('fill', &hellip;)`)\n     * @param {String} color Color value\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setColor: function setColor(color) {\n      this.set('fill', color);\n      return this;\n    },\n\n    /**\n     * Sets \"angle\" of an instance with centered rotation\n     * @param {Number} angle Angle value (in degrees)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    rotate: function rotate(angle) {\n      var shouldCenterOrigin = (this.originX !== 'center' || this.originY !== 'center') && this.centeredRotation;\n\n      if (shouldCenterOrigin) {\n        this._setOriginToCenter();\n      }\n\n      this.set('angle', angle);\n\n      if (shouldCenterOrigin) {\n        this._resetOrigin();\n      }\n\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerH: function centerH() {\n      this.canvas && this.canvas.centerObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object horizontally on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterH: function viewportCenterH() {\n      this.canvas && this.canvas.viewportCenterObjectH(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    centerV: function centerV() {\n      this.canvas && this.canvas.centerObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenterV: function viewportCenterV() {\n      this.canvas && this.canvas.viewportCenterObjectV(this);\n      return this;\n    },\n\n    /**\n     * Centers object vertically and horizontally on canvas to which is was added last\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    center: function center() {\n      this.canvas && this.canvas.centerObject(this);\n      return this;\n    },\n\n    /**\n     * Centers object on current viewport of canvas to which it was added last.\n     * You might need to call `setCoords` on an object after centering, to update controls area.\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    viewportCenter: function viewportCenter() {\n      this.canvas && this.canvas.viewportCenterObject(this);\n      return this;\n    },\n\n    /**\n     * Returns coordinates of a pointer relative to an object\n     * @param {Event} e Event to operate upon\n     * @param {Object} [pointer] Pointer to operate upon (instead of event)\n     * @return {Object} Coordinates of a pointer (x, y)\n     */\n    getLocalPointer: function getLocalPointer(e, pointer) {\n      pointer = pointer || this.canvas.getPointer(e);\n\n      var pClicked = new fabric.Point(pointer.x, pointer.y),\n          objectLeftTop = this._getLeftTopCoords();\n\n      if (this.angle) {\n        pClicked = fabric.util.rotatePoint(pClicked, objectLeftTop, degreesToRadians(-this.angle));\n      }\n\n      return {\n        x: pClicked.x - objectLeftTop.x,\n        y: pClicked.y - objectLeftTop.y\n      };\n    },\n\n    /**\n     * Sets canvas globalCompositeOperation for specific object\n     * custom composition operation for the particular object can be specified using globalCompositeOperation property\n     * @param {CanvasRenderingContext2D} ctx Rendering canvas context\n     */\n    _setupCompositeOperation: function _setupCompositeOperation(ctx) {\n      if (this.globalCompositeOperation) {\n        ctx.globalCompositeOperation = this.globalCompositeOperation;\n      }\n    }\n  });\n  fabric.util.createAccessors && fabric.util.createAccessors(fabric.Object);\n  extend(fabric.Object.prototype, fabric.Observable);\n  /**\n   * Defines the number of fraction digits to use when serializing object values.\n   * You can use it to increase/decrease precision of such values like left, top, scaleX, scaleY, etc.\n   * @static\n   * @memberOf fabric.Object\n   * @constant\n   * @type Number\n   */\n\n  fabric.Object.NUM_FRACTION_DIGITS = 2;\n\n  fabric.Object._fromObject = function (className, object, callback, extraParam) {\n    var klass = fabric[className];\n    object = clone(object, true);\n    fabric.util.enlivenPatterns([object.fill, object.stroke], function (patterns) {\n      if (typeof patterns[0] !== 'undefined') {\n        object.fill = patterns[0];\n      }\n\n      if (typeof patterns[1] !== 'undefined') {\n        object.stroke = patterns[1];\n      }\n\n      fabric.util.enlivenObjects([object.clipPath], function (enlivedProps) {\n        object.clipPath = enlivedProps[0];\n        var instance = extraParam ? new klass(object[extraParam], object) : new klass(object);\n        callback && callback(instance);\n      });\n    });\n  };\n  /**\n   * Unique id used internally when creating SVG elements\n   * @static\n   * @memberOf fabric.Object\n   * @type Number\n   */\n\n\n  fabric.Object.__uid = 0;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function () {\n  var degreesToRadians = fabric.util.degreesToRadians,\n      originXOffset = {\n    left: -0.5,\n    center: 0,\n    right: 0.5\n  },\n      originYOffset = {\n    top: -0.5,\n    center: 0,\n    bottom: 0.5\n  };\n  fabric.util.object.extend(fabric.Object.prototype,\n  /** @lends fabric.Object.prototype */\n  {\n    /**\n     * Translates the coordinates from a set of origin to another (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} fromOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} fromOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @param {String} toOriginX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} toOriginY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToGivenOrigin: function translateToGivenOrigin(point, fromOriginX, fromOriginY, toOriginX, toOriginY) {\n      var x = point.x,\n          y = point.y,\n          offsetX,\n          offsetY,\n          dim;\n\n      if (typeof fromOriginX === 'string') {\n        fromOriginX = originXOffset[fromOriginX];\n      } else {\n        fromOriginX -= 0.5;\n      }\n\n      if (typeof toOriginX === 'string') {\n        toOriginX = originXOffset[toOriginX];\n      } else {\n        toOriginX -= 0.5;\n      }\n\n      offsetX = toOriginX - fromOriginX;\n\n      if (typeof fromOriginY === 'string') {\n        fromOriginY = originYOffset[fromOriginY];\n      } else {\n        fromOriginY -= 0.5;\n      }\n\n      if (typeof toOriginY === 'string') {\n        toOriginY = originYOffset[toOriginY];\n      } else {\n        toOriginY -= 0.5;\n      }\n\n      offsetY = toOriginY - fromOriginY;\n\n      if (offsetX || offsetY) {\n        dim = this._getTransformedDimensions();\n        x = point.x + offsetX * dim.x;\n        y = point.y + offsetY * dim.y;\n      }\n\n      return new fabric.Point(x, y);\n    },\n\n    /**\n     * Translates the coordinates from origin to center coordinates (based on the object's dimensions)\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToCenterPoint: function translateToCenterPoint(point, originX, originY) {\n      var p = this.translateToGivenOrigin(point, originX, originY, 'center', 'center');\n\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, point, degreesToRadians(this.angle));\n      }\n\n      return p;\n    },\n\n    /**\n     * Translates the coordinates from center to origin coordinates (based on the object's dimensions)\n     * @param {fabric.Point} center The point which corresponds to center of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    translateToOriginPoint: function translateToOriginPoint(center, originX, originY) {\n      var p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n\n      if (this.angle) {\n        return fabric.util.rotatePoint(p, center, degreesToRadians(this.angle));\n      }\n\n      return p;\n    },\n\n    /**\n     * Returns the real center coordinates of the object\n     * @return {fabric.Point}\n     */\n    getCenterPoint: function getCenterPoint() {\n      var leftTop = new fabric.Point(this.left, this.top);\n      return this.translateToCenterPoint(leftTop, this.originX, this.originY);\n    },\n\n    /**\n     * Returns the coordinates of the object based on center coordinates\n     * @param {fabric.Point} point The point which corresponds to the originX and originY params\n     * @return {fabric.Point}\n     */\n    // getOriginPoint: function(center) {\n    //   return this.translateToOriginPoint(center, this.originX, this.originY);\n    // },\n\n    /**\n     * Returns the coordinates of the object as if it has a different origin\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    getPointByOrigin: function getPointByOrigin(originX, originY) {\n      var center = this.getCenterPoint();\n      return this.translateToOriginPoint(center, originX, originY);\n    },\n\n    /**\n     * Returns the point in local coordinates\n     * @param {fabric.Point} point The point relative to the global coordinate system\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {fabric.Point}\n     */\n    toLocalPoint: function toLocalPoint(point, originX, originY) {\n      var center = this.getCenterPoint(),\n          p,\n          p2;\n\n      if (typeof originX !== 'undefined' && typeof originY !== 'undefined') {\n        p = this.translateToGivenOrigin(center, 'center', 'center', originX, originY);\n      } else {\n        p = new fabric.Point(this.left, this.top);\n      }\n\n      p2 = new fabric.Point(point.x, point.y);\n\n      if (this.angle) {\n        p2 = fabric.util.rotatePoint(p2, center, -degreesToRadians(this.angle));\n      }\n\n      return p2.subtractEquals(p);\n    },\n\n    /**\n     * Returns the point in global coordinates\n     * @param {fabric.Point} The point relative to the local coordinate system\n     * @return {fabric.Point}\n     */\n    // toGlobalPoint: function(point) {\n    //   return fabric.util.rotatePoint(point, this.getCenterPoint(), degreesToRadians(this.angle)).addEquals(new fabric.Point(this.left, this.top));\n    // },\n\n    /**\n     * Sets the position of the object taking into consideration the object's origin\n     * @param {fabric.Point} pos The new position of the object\n     * @param {String} originX Horizontal origin: 'left', 'center' or 'right'\n     * @param {String} originY Vertical origin: 'top', 'center' or 'bottom'\n     * @return {void}\n     */\n    setPositionByOrigin: function setPositionByOrigin(pos, originX, originY) {\n      var center = this.translateToCenterPoint(pos, originX, originY),\n          position = this.translateToOriginPoint(center, this.originX, this.originY);\n      this.set('left', position.x);\n      this.set('top', position.y);\n    },\n\n    /**\n     * @param {String} to One of 'left', 'center', 'right'\n     */\n    adjustPosition: function adjustPosition(to) {\n      var angle = degreesToRadians(this.angle),\n          hypotFull = this.getScaledWidth(),\n          xFull = fabric.util.cos(angle) * hypotFull,\n          yFull = fabric.util.sin(angle) * hypotFull,\n          offsetFrom,\n          offsetTo; //TODO: this function does not consider mixed situation like top, center.\n\n      if (typeof this.originX === 'string') {\n        offsetFrom = originXOffset[this.originX];\n      } else {\n        offsetFrom = this.originX - 0.5;\n      }\n\n      if (typeof to === 'string') {\n        offsetTo = originXOffset[to];\n      } else {\n        offsetTo = to - 0.5;\n      }\n\n      this.left += xFull * (offsetTo - offsetFrom);\n      this.top += yFull * (offsetTo - offsetFrom);\n      this.setCoords();\n      this.originX = to;\n    },\n\n    /**\n     * Sets the origin/position of the object to it's center point\n     * @private\n     * @return {void}\n     */\n    _setOriginToCenter: function _setOriginToCenter() {\n      this._originalOriginX = this.originX;\n      this._originalOriginY = this.originY;\n      var center = this.getCenterPoint();\n      this.originX = 'center';\n      this.originY = 'center';\n      this.left = center.x;\n      this.top = center.y;\n    },\n\n    /**\n     * Resets the origin/position of the object to it's original origin\n     * @private\n     * @return {void}\n     */\n    _resetOrigin: function _resetOrigin() {\n      var originPoint = this.translateToOriginPoint(this.getCenterPoint(), this._originalOriginX, this._originalOriginY);\n      this.originX = this._originalOriginX;\n      this.originY = this._originalOriginY;\n      this.left = originPoint.x;\n      this.top = originPoint.y;\n      this._originalOriginX = null;\n      this._originalOriginY = null;\n    },\n\n    /**\n     * @private\n     */\n    _getLeftTopCoords: function _getLeftTopCoords() {\n      return this.translateToOriginPoint(this.getCenterPoint(), 'left', 'top');\n    }\n  });\n})();\n\n(function () {\n  function _getCoords(coords) {\n    return [new fabric.Point(coords.tl.x, coords.tl.y), new fabric.Point(coords.tr.x, coords.tr.y), new fabric.Point(coords.br.x, coords.br.y), new fabric.Point(coords.bl.x, coords.bl.y)];\n  }\n\n  var degreesToRadians = fabric.util.degreesToRadians,\n      multiplyMatrices = fabric.util.multiplyTransformMatrices,\n      transformPoint = fabric.util.transformPoint;\n  fabric.util.object.extend(fabric.Object.prototype,\n  /** @lends fabric.Object.prototype */\n  {\n    /**\n     * Describe object's corner position in canvas element coordinates.\n     * properties are tl,mt,tr,ml,mr,bl,mb,br,mtr for the main controls.\n     * each property is an object with x, y and corner.\n     * The `corner` property contains in a similar manner the 4 points of the\n     * interactive area of the corner.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, viewportTransform, top, left, padding.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcCoords;\n     * @memberOf fabric.Object.prototype\n     */\n    oCoords: null,\n\n    /**\n     * Describe object's corner position in canvas object absolute coordinates\n     * properties are tl,tr,bl,br and describe the four main corner.\n     * each property is an object with x, y, instance of Fabric.Point.\n     * The coordinates depends from this properties: width, height, scaleX, scaleY\n     * skewX, skewY, angle, strokeWidth, top, left.\n     * Those coordinates are useful to understand where an object is. They get updated\n     * with oCoords but they do not need to be updated when zoom or panning change.\n     * The coordinates get updated with @method setCoords.\n     * You can calculate them without updating with @method calcCoords(true);\n     * @memberOf fabric.Object.prototype\n     */\n    aCoords: null,\n\n    /**\n     * storage for object transform matrix\n     */\n    ownMatrixCache: null,\n\n    /**\n     * storage for object full transform matrix\n     */\n    matrixCache: null,\n\n    /**\n     * return correct set of coordinates for intersection\n     */\n    getCoords: function getCoords(absolute, calculate) {\n      if (!this.oCoords) {\n        this.setCoords();\n      }\n\n      var coords = absolute ? this.aCoords : this.oCoords;\n      return _getCoords(calculate ? this.calcCoords(absolute) : coords);\n    },\n\n    /**\n     * Checks if object intersects with an area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with an area formed by 2 points\n     */\n    intersectsWithRect: function intersectsWithRect(pointTL, pointBR, absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate),\n          intersection = fabric.Intersection.intersectPolygonRectangle(coords, pointTL, pointBR);\n      return intersection.status === 'Intersection';\n    },\n\n    /**\n     * Checks if object intersects with another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object intersects with another object\n     */\n    intersectsWithObject: function intersectsWithObject(other, absolute, calculate) {\n      var intersection = fabric.Intersection.intersectPolygonPolygon(this.getCoords(absolute, calculate), other.getCoords(absolute, calculate));\n      return intersection.status === 'Intersection' || other.isContainedWithinObject(this, absolute, calculate) || this.isContainedWithinObject(other, absolute, calculate);\n    },\n\n    /**\n     * Checks if object is fully contained within area of another object\n     * @param {Object} other Object to test\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area of another object\n     */\n    isContainedWithinObject: function isContainedWithinObject(other, absolute, calculate) {\n      var points = this.getCoords(absolute, calculate),\n          i = 0,\n          lines = other._getImageLines(calculate ? other.calcCoords(absolute) : absolute ? other.aCoords : other.oCoords);\n\n      for (; i < 4; i++) {\n        if (!other.containsPoint(points[i], lines)) {\n          return false;\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Checks if object is fully contained within area formed by 2 points\n     * @param {Object} pointTL top-left point of area\n     * @param {Object} pointBR bottom-right point of area\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is fully contained within area formed by 2 points\n     */\n    isContainedWithinRect: function isContainedWithinRect(pointTL, pointBR, absolute, calculate) {\n      var boundingRect = this.getBoundingRect(absolute, calculate);\n      return boundingRect.left >= pointTL.x && boundingRect.left + boundingRect.width <= pointBR.x && boundingRect.top >= pointTL.y && boundingRect.top + boundingRect.height <= pointBR.y;\n    },\n\n    /**\n     * Checks if point is inside the object\n     * @param {fabric.Point} point Point to check against\n     * @param {Object} [lines] object returned from @method _getImageLines\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if point is inside the object\n     */\n    containsPoint: function containsPoint(point, lines, absolute, calculate) {\n      var lines = lines || this._getImageLines(calculate ? this.calcCoords(absolute) : absolute ? this.aCoords : this.oCoords),\n          xPoints = this._findCrossPoints(point, lines); // if xPoints is odd then point is inside the object\n\n\n      return xPoints !== 0 && xPoints % 2 === 1;\n    },\n\n    /**\n     * Checks if object is contained within the canvas with current viewportTransform\n     * the check is done stopping at first point that appears on screen\n     * @param {Boolean} [calculate] use coordinates of current position instead of .aCoords\n     * @return {Boolean} true if object is fully or partially contained within canvas\n     */\n    isOnScreen: function isOnScreen(calculate) {\n      if (!this.canvas) {\n        return false;\n      }\n\n      var pointTL = this.canvas.vptCoords.tl,\n          pointBR = this.canvas.vptCoords.br;\n      var points = this.getCoords(true, calculate),\n          point;\n\n      for (var i = 0; i < 4; i++) {\n        point = points[i];\n\n        if (point.x <= pointBR.x && point.x >= pointTL.x && point.y <= pointBR.y && point.y >= pointTL.y) {\n          return true;\n        }\n      } // no points on screen, check intersection with absolute coordinates\n\n\n      if (this.intersectsWithRect(pointTL, pointBR, true, calculate)) {\n        return true;\n      }\n\n      return this._containsCenterOfCanvas(pointTL, pointBR, calculate);\n    },\n\n    /**\n     * Checks if the object contains the midpoint between canvas extremities\n     * Does not make sense outside the context of isOnScreen and isPartiallyOnScreen\n     * @private\n     * @param {Fabric.Point} pointTL Top Left point\n     * @param {Fabric.Point} pointBR Top Right point\n     * @param {Boolean} calculate use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if the object contains the point\n     */\n    _containsCenterOfCanvas: function _containsCenterOfCanvas(pointTL, pointBR, calculate) {\n      // worst case scenario the object is so big that contains the screen\n      var centerPoint = {\n        x: (pointTL.x + pointBR.x) / 2,\n        y: (pointTL.y + pointBR.y) / 2\n      };\n\n      if (this.containsPoint(centerPoint, null, true, calculate)) {\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Checks if object is partially contained within the canvas with current viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords\n     * @return {Boolean} true if object is partially contained within canvas\n     */\n    isPartiallyOnScreen: function isPartiallyOnScreen(calculate) {\n      if (!this.canvas) {\n        return false;\n      }\n\n      var pointTL = this.canvas.vptCoords.tl,\n          pointBR = this.canvas.vptCoords.br;\n\n      if (this.intersectsWithRect(pointTL, pointBR, true, calculate)) {\n        return true;\n      }\n\n      return this._containsCenterOfCanvas(pointTL, pointBR, calculate);\n    },\n\n    /**\n     * Method that returns an object with the object edges in it, given the coordinates of the corners\n     * @private\n     * @param {Object} oCoords Coordinates of the object corners\n     */\n    _getImageLines: function _getImageLines(oCoords) {\n      return {\n        topline: {\n          o: oCoords.tl,\n          d: oCoords.tr\n        },\n        rightline: {\n          o: oCoords.tr,\n          d: oCoords.br\n        },\n        bottomline: {\n          o: oCoords.br,\n          d: oCoords.bl\n        },\n        leftline: {\n          o: oCoords.bl,\n          d: oCoords.tl\n        }\n      };\n    },\n\n    /**\n     * Helper method to determine how many cross points are between the 4 object edges\n     * and the horizontal line determined by a point on canvas\n     * @private\n     * @param {fabric.Point} point Point to check\n     * @param {Object} lines Coordinates of the object being evaluated\n     */\n    // remove yi, not used but left code here just in case.\n    _findCrossPoints: function _findCrossPoints(point, lines) {\n      var b1,\n          b2,\n          a1,\n          a2,\n          xi,\n          // yi,\n      xcount = 0,\n          iLine;\n\n      for (var lineKey in lines) {\n        iLine = lines[lineKey]; // optimisation 1: line below point. no cross\n\n        if (iLine.o.y < point.y && iLine.d.y < point.y) {\n          continue;\n        } // optimisation 2: line above point. no cross\n\n\n        if (iLine.o.y >= point.y && iLine.d.y >= point.y) {\n          continue;\n        } // optimisation 3: vertical line case\n\n\n        if (iLine.o.x === iLine.d.x && iLine.o.x >= point.x) {\n          xi = iLine.o.x; // yi = point.y;\n        } // calculate the intersection point\n        else {\n            b1 = 0;\n            b2 = (iLine.d.y - iLine.o.y) / (iLine.d.x - iLine.o.x);\n            a1 = point.y - b1 * point.x;\n            a2 = iLine.o.y - b2 * iLine.o.x;\n            xi = -(a1 - a2) / (b1 - b2); // yi = a1 + b1 * xi;\n          } // dont count xi < point.x cases\n\n\n        if (xi >= point.x) {\n          xcount += 1;\n        } // optimisation 4: specific for square images\n\n\n        if (xcount === 2) {\n          break;\n        }\n      }\n\n      return xcount;\n    },\n\n    /**\n     * Returns coordinates of object's bounding rectangle (left, top, width, height)\n     * the box is intended as aligned to axis of canvas.\n     * @param {Boolean} [absolute] use coordinates without viewportTransform\n     * @param {Boolean} [calculate] use coordinates of current position instead of .oCoords / .aCoords\n     * @return {Object} Object with left, top, width, height properties\n     */\n    getBoundingRect: function getBoundingRect(absolute, calculate) {\n      var coords = this.getCoords(absolute, calculate);\n      return fabric.util.makeBoundingBoxFromPoints(coords);\n    },\n\n    /**\n     * Returns width of an object's bounding box counting transformations\n     * before 2.0 it was named getWidth();\n     * @return {Number} width value\n     */\n    getScaledWidth: function getScaledWidth() {\n      return this._getTransformedDimensions().x;\n    },\n\n    /**\n     * Returns height of an object bounding box counting transformations\n     * before 2.0 it was named getHeight();\n     * @return {Number} height value\n     */\n    getScaledHeight: function getScaledHeight() {\n      return this._getTransformedDimensions().y;\n    },\n\n    /**\n     * Makes sure the scale is valid and modifies it if necessary\n     * @private\n     * @param {Number} value\n     * @return {Number}\n     */\n    _constrainScale: function _constrainScale(value) {\n      if (Math.abs(value) < this.minScaleLimit) {\n        if (value < 0) {\n          return -this.minScaleLimit;\n        } else {\n          return this.minScaleLimit;\n        }\n      } else if (value === 0) {\n        return 0.0001;\n      }\n\n      return value;\n    },\n\n    /**\n     * Scales an object (equally by x and y)\n     * @param {Number} value Scale factor\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scale: function scale(value) {\n      this._set('scaleX', value);\n\n      this._set('scaleY', value);\n\n      return this.setCoords();\n    },\n\n    /**\n     * Scales an object to a given width, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New width value\n     * @param {Boolean} absolute ignore viewport\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToWidth: function scaleToWidth(value, absolute) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect(absolute).width / this.getScaledWidth();\n      return this.scale(value / this.width / boundingRectFactor);\n    },\n\n    /**\n     * Scales an object to a given height, with respect to bounding box (scaling by x/y equally)\n     * @param {Number} value New height value\n     * @param {Boolean} absolute ignore viewport\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    scaleToHeight: function scaleToHeight(value, absolute) {\n      // adjust to bounding rect factor so that rotated shapes would fit as well\n      var boundingRectFactor = this.getBoundingRect(absolute).height / this.getScaledHeight();\n      return this.scale(value / this.height / boundingRectFactor);\n    },\n\n    /**\n     * Calculates and returns the .coords of an object.\n     * @return {Object} Object with tl, tr, br, bl ....\n     * @chainable\n     */\n    calcCoords: function calcCoords(absolute) {\n      var rotateMatrix = this._calcRotateMatrix(),\n          translateMatrix = this._calcTranslateMatrix(),\n          startMatrix = multiplyMatrices(translateMatrix, rotateMatrix),\n          vpt = this.getViewportTransform(),\n          finalMatrix = absolute ? startMatrix : multiplyMatrices(vpt, startMatrix),\n          dim = this._getTransformedDimensions(),\n          w = dim.x / 2,\n          h = dim.y / 2,\n          tl = transformPoint({\n        x: -w,\n        y: -h\n      }, finalMatrix),\n          tr = transformPoint({\n        x: w,\n        y: -h\n      }, finalMatrix),\n          bl = transformPoint({\n        x: -w,\n        y: h\n      }, finalMatrix),\n          br = transformPoint({\n        x: w,\n        y: h\n      }, finalMatrix);\n\n      if (!absolute) {\n        var padding = this.padding,\n            angle = degreesToRadians(this.angle),\n            cos = fabric.util.cos(angle),\n            sin = fabric.util.sin(angle),\n            cosP = cos * padding,\n            sinP = sin * padding,\n            cosPSinP = cosP + sinP,\n            cosPMinusSinP = cosP - sinP;\n\n        if (padding) {\n          tl.x -= cosPMinusSinP;\n          tl.y -= cosPSinP;\n          tr.x += cosPSinP;\n          tr.y -= cosPMinusSinP;\n          bl.x -= cosPSinP;\n          bl.y += cosPMinusSinP;\n          br.x += cosPMinusSinP;\n          br.y += cosPSinP;\n        }\n\n        var ml = new fabric.Point((tl.x + bl.x) / 2, (tl.y + bl.y) / 2),\n            mt = new fabric.Point((tr.x + tl.x) / 2, (tr.y + tl.y) / 2),\n            mr = new fabric.Point((br.x + tr.x) / 2, (br.y + tr.y) / 2),\n            mb = new fabric.Point((br.x + bl.x) / 2, (br.y + bl.y) / 2),\n            mtr = new fabric.Point(mt.x + sin * this.rotatingPointOffset, mt.y - cos * this.rotatingPointOffset);\n      } // if (!absolute) {\n      //   var canvas = this.canvas;\n      //   setTimeout(function() {\n      //     canvas.contextTop.clearRect(0, 0, 700, 700);\n      //     canvas.contextTop.fillStyle = 'green';\n      //     canvas.contextTop.fillRect(mb.x, mb.y, 3, 3);\n      //     canvas.contextTop.fillRect(bl.x, bl.y, 3, 3);\n      //     canvas.contextTop.fillRect(br.x, br.y, 3, 3);\n      //     canvas.contextTop.fillRect(tl.x, tl.y, 3, 3);\n      //     canvas.contextTop.fillRect(tr.x, tr.y, 3, 3);\n      //     canvas.contextTop.fillRect(ml.x, ml.y, 3, 3);\n      //     canvas.contextTop.fillRect(mr.x, mr.y, 3, 3);\n      //     canvas.contextTop.fillRect(mt.x, mt.y, 3, 3);\n      //     canvas.contextTop.fillRect(mtr.x, mtr.y, 3, 3);\n      //   }, 50);\n      // }\n\n\n      var coords = {\n        // corners\n        tl: tl,\n        tr: tr,\n        br: br,\n        bl: bl\n      };\n\n      if (!absolute) {\n        // middle\n        coords.ml = ml;\n        coords.mt = mt;\n        coords.mr = mr;\n        coords.mb = mb; // rotating point\n\n        coords.mtr = mtr;\n      }\n\n      return coords;\n    },\n\n    /**\n     * Sets corner position coordinates based on current angle, width and height.\n     * See {@link https://github.com/kangax/fabric.js/wiki/When-to-call-setCoords|When-to-call-setCoords}\n     * @param {Boolean} [ignoreZoom] set oCoords with or without the viewport transform.\n     * @param {Boolean} [skipAbsolute] skip calculation of aCoords, useful in setViewportTransform\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setCoords: function setCoords(ignoreZoom, skipAbsolute) {\n      this.oCoords = this.calcCoords(ignoreZoom);\n\n      if (!skipAbsolute) {\n        this.aCoords = this.calcCoords(true);\n      } // set coordinates of the draggable boxes in the corners used to scale/rotate the image\n\n\n      ignoreZoom || this._setCornerCoords && this._setCornerCoords();\n      return this;\n    },\n\n    /**\n     * calculate rotation matrix of an object\n     * @return {Array} rotation matrix for the object\n     */\n    _calcRotateMatrix: function _calcRotateMatrix() {\n      if (this.angle) {\n        var theta = degreesToRadians(this.angle),\n            cos = fabric.util.cos(theta),\n            sin = fabric.util.sin(theta);\n        return [cos, sin, -sin, cos, 0, 0];\n      }\n\n      return fabric.iMatrix.concat();\n    },\n\n    /**\n     * calculate the translation matrix for an object transform\n     * @return {Array} rotation matrix for the object\n     */\n    _calcTranslateMatrix: function _calcTranslateMatrix() {\n      var center = this.getCenterPoint();\n      return [1, 0, 0, 1, center.x, center.y];\n    },\n    transformMatrixKey: function transformMatrixKey(skipGroup) {\n      var sep = '_',\n          prefix = '';\n\n      if (!skipGroup && this.group) {\n        prefix = this.group.transformMatrixKey(skipGroup) + sep;\n      }\n\n      ;\n      return prefix + this.top + sep + this.left + sep + this.scaleX + sep + this.scaleY + sep + this.skewX + sep + this.skewY + sep + this.angle + sep + this.originX + sep + this.originY + sep + this.width + sep + this.height + sep + this.strokeWidth + this.flipX + this.flipY;\n    },\n\n    /**\n     * calculate transform matrix that represents the current transformations from the\n     * object's properties.\n     * @param {Boolean} [skipGroup] return transform matrix for object not counting parent transformations\n     * @return {Array} transform matrix for the object\n     */\n    calcTransformMatrix: function calcTransformMatrix(skipGroup) {\n      if (skipGroup) {\n        return this.calcOwnMatrix();\n      }\n\n      var key = this.transformMatrixKey(),\n          cache = this.matrixCache || (this.matrixCache = {});\n\n      if (cache.key === key) {\n        return cache.value;\n      }\n\n      var matrix = this.calcOwnMatrix();\n\n      if (this.group) {\n        matrix = multiplyMatrices(this.group.calcTransformMatrix(), matrix);\n      }\n\n      cache.key = key;\n      cache.value = matrix;\n      return matrix;\n    },\n    calcOwnMatrix: function calcOwnMatrix() {\n      var key = this.transformMatrixKey(true),\n          cache = this.ownMatrixCache || (this.ownMatrixCache = {});\n\n      if (cache.key === key) {\n        return cache.value;\n      }\n\n      var matrix = this._calcTranslateMatrix(),\n          rotateMatrix,\n          dimensionMatrix = this._calcDimensionsTransformMatrix(this.skewX, this.skewY, true);\n\n      if (this.angle) {\n        rotateMatrix = this._calcRotateMatrix();\n        matrix = multiplyMatrices(matrix, rotateMatrix);\n      }\n\n      matrix = multiplyMatrices(matrix, dimensionMatrix);\n      cache.key = key;\n      cache.value = matrix;\n      return matrix;\n    },\n    _calcDimensionsTransformMatrix: function _calcDimensionsTransformMatrix(skewX, skewY, flipping) {\n      var skewMatrix,\n          scaleX = this.scaleX * (flipping && this.flipX ? -1 : 1),\n          scaleY = this.scaleY * (flipping && this.flipY ? -1 : 1),\n          scaleMatrix = [scaleX, 0, 0, scaleY, 0, 0];\n\n      if (skewX) {\n        skewMatrix = [1, 0, Math.tan(degreesToRadians(skewX)), 1];\n        scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\n      }\n\n      if (skewY) {\n        skewMatrix = [1, Math.tan(degreesToRadians(skewY)), 0, 1];\n        scaleMatrix = multiplyMatrices(scaleMatrix, skewMatrix, true);\n      }\n\n      return scaleMatrix;\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getNonTransformedDimensions: function _getNonTransformedDimensions() {\n      var strokeWidth = this.strokeWidth,\n          w = this.width + strokeWidth,\n          h = this.height + strokeWidth;\n      return {\n        x: w,\n        y: h\n      };\n    },\n\n    /*\n     * Calculate object bounding box dimensions from its properties scale, skew.\n     * @param {Number} skewX, a value to override current skewX\n     * @param {Number} skewY, a value to override current skewY\n     * @private\n     * @return {Object} .x width dimension\n     * @return {Object} .y height dimension\n     */\n    _getTransformedDimensions: function _getTransformedDimensions(skewX, skewY) {\n      if (typeof skewX === 'undefined') {\n        skewX = this.skewX;\n      }\n\n      if (typeof skewY === 'undefined') {\n        skewY = this.skewY;\n      }\n\n      var dimensions = this._getNonTransformedDimensions(),\n          dimX,\n          dimY,\n          noSkew = skewX === 0 && skewY === 0;\n\n      if (this.strokeUniform) {\n        dimX = this.width;\n        dimY = this.height;\n      } else {\n        dimX = dimensions.x;\n        dimY = dimensions.y;\n      }\n\n      if (noSkew) {\n        return this._finalizeDimensions(dimX * this.scaleX, dimY * this.scaleY);\n      } else {\n        dimX /= 2;\n        dimY /= 2;\n      }\n\n      var points = [{\n        x: -dimX,\n        y: -dimY\n      }, {\n        x: dimX,\n        y: -dimY\n      }, {\n        x: -dimX,\n        y: dimY\n      }, {\n        x: dimX,\n        y: dimY\n      }],\n          i,\n          transformMatrix = this._calcDimensionsTransformMatrix(skewX, skewY, false),\n          bbox;\n\n      for (i = 0; i < points.length; i++) {\n        points[i] = fabric.util.transformPoint(points[i], transformMatrix);\n      }\n\n      bbox = fabric.util.makeBoundingBoxFromPoints(points);\n      return this._finalizeDimensions(bbox.width, bbox.height);\n    },\n\n    /*\n     * Calculate object bounding box dimensions from its properties scale, skew.\n     * @param Number width width of the bbox\n     * @param Number height height of the bbox\n     * @private\n     * @return {Object} .x finalized width dimension\n     * @return {Object} .y finalized height dimension\n     */\n    _finalizeDimensions: function _finalizeDimensions(width, height) {\n      return this.strokeUniform ? {\n        x: width + this.strokeWidth,\n        y: height + this.strokeWidth\n      } : {\n        x: width,\n        y: height\n      };\n    },\n\n    /*\n     * Calculate object dimensions for controls, including padding and canvas zoom.\n     * private\n     */\n    _calculateCurrentDimensions: function _calculateCurrentDimensions() {\n      var vpt = this.getViewportTransform(),\n          dim = this._getTransformedDimensions(),\n          p = fabric.util.transformPoint(dim, vpt, true);\n\n      return p.scalarAdd(2 * this.padding);\n    }\n  });\n})();\n\nfabric.util.object.extend(fabric.Object.prototype,\n/** @lends fabric.Object.prototype */\n{\n  /**\n   * Moves an object to the bottom of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendToBack: function sendToBack() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendToBack.call(this.group, this);\n    } else {\n      this.canvas.sendToBack(this);\n    }\n\n    return this;\n  },\n\n  /**\n   * Moves an object to the top of the stack of drawn objects\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringToFront: function bringToFront() {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringToFront.call(this.group, this);\n    } else {\n      this.canvas.bringToFront(this);\n    }\n\n    return this;\n  },\n\n  /**\n   * Moves an object down in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object behind next lower intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  sendBackwards: function sendBackwards(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.sendBackwards.call(this.group, this, intersecting);\n    } else {\n      this.canvas.sendBackwards(this, intersecting);\n    }\n\n    return this;\n  },\n\n  /**\n   * Moves an object up in stack of drawn objects\n   * @param {Boolean} [intersecting] If `true`, send object in front of next upper intersecting object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  bringForward: function bringForward(intersecting) {\n    if (this.group) {\n      fabric.StaticCanvas.prototype.bringForward.call(this.group, this, intersecting);\n    } else {\n      this.canvas.bringForward(this, intersecting);\n    }\n\n    return this;\n  },\n\n  /**\n   * Moves an object to specified level in stack of drawn objects\n   * @param {Number} index New position of object\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  moveTo: function moveTo(index) {\n    if (this.group && this.group.type !== 'activeSelection') {\n      fabric.StaticCanvas.prototype.moveTo.call(this.group, this, index);\n    } else {\n      this.canvas.moveTo(this, index);\n    }\n\n    return this;\n  }\n});\n/* _TO_SVG_START_ */\n\n(function () {\n  function getSvgColorString(prop, value) {\n    if (!value) {\n      return prop + ': none; ';\n    } else if (value.toLive) {\n      return prop + ': url(#SVGID_' + value.id + '); ';\n    } else {\n      var color = new fabric.Color(value),\n          str = prop + ': ' + color.toRgb() + '; ',\n          opacity = color.getAlpha();\n\n      if (opacity !== 1) {\n        //change the color in rgb + opacity\n        str += prop + '-opacity: ' + opacity.toString() + '; ';\n      }\n\n      return str;\n    }\n  }\n\n  var toFixed = fabric.util.toFixed;\n  fabric.util.object.extend(fabric.Object.prototype,\n  /** @lends fabric.Object.prototype */\n  {\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function getSvgStyles(skipShadow) {\n      var fillRule = this.fillRule ? this.fillRule : 'nonzero',\n          strokeWidth = this.strokeWidth ? this.strokeWidth : '0',\n          strokeDashArray = this.strokeDashArray ? this.strokeDashArray.join(' ') : 'none',\n          strokeDashOffset = this.strokeDashOffset ? this.strokeDashOffset : '0',\n          strokeLineCap = this.strokeLineCap ? this.strokeLineCap : 'butt',\n          strokeLineJoin = this.strokeLineJoin ? this.strokeLineJoin : 'miter',\n          strokeMiterLimit = this.strokeMiterLimit ? this.strokeMiterLimit : '4',\n          opacity = typeof this.opacity !== 'undefined' ? this.opacity : '1',\n          visibility = this.visible ? '' : ' visibility: hidden;',\n          filter = skipShadow ? '' : this.getSvgFilter(),\n          fill = getSvgColorString('fill', this.fill),\n          stroke = getSvgColorString('stroke', this.stroke);\n      return [stroke, 'stroke-width: ', strokeWidth, '; ', 'stroke-dasharray: ', strokeDashArray, '; ', 'stroke-linecap: ', strokeLineCap, '; ', 'stroke-dashoffset: ', strokeDashOffset, '; ', 'stroke-linejoin: ', strokeLineJoin, '; ', 'stroke-miterlimit: ', strokeMiterLimit, '; ', fill, 'fill-rule: ', fillRule, '; ', 'opacity: ', opacity, ';', filter, visibility].join('');\n    },\n\n    /**\n     * Returns styles-string for svg-export\n     * @param {Object} style the object from which to retrieve style properties\n     * @param {Boolean} useWhiteSpace a boolean to include an additional attribute in the style.\n     * @return {String}\n     */\n    getSvgSpanStyles: function getSvgSpanStyles(style, useWhiteSpace) {\n      var term = '; ';\n      var fontFamily = style.fontFamily ? 'font-family: ' + (style.fontFamily.indexOf('\\'') === -1 && style.fontFamily.indexOf('\"') === -1 ? '\\'' + style.fontFamily + '\\'' : style.fontFamily) + term : '';\n      var strokeWidth = style.strokeWidth ? 'stroke-width: ' + style.strokeWidth + term : '',\n          fontFamily = fontFamily,\n          fontSize = style.fontSize ? 'font-size: ' + style.fontSize + 'px' + term : '',\n          fontStyle = style.fontStyle ? 'font-style: ' + style.fontStyle + term : '',\n          fontWeight = style.fontWeight ? 'font-weight: ' + style.fontWeight + term : '',\n          fill = style.fill ? getSvgColorString('fill', style.fill) : '',\n          stroke = style.stroke ? getSvgColorString('stroke', style.stroke) : '',\n          textDecoration = this.getSvgTextDecoration(style),\n          deltaY = style.deltaY ? 'baseline-shift: ' + -style.deltaY + '; ' : '';\n\n      if (textDecoration) {\n        textDecoration = 'text-decoration: ' + textDecoration + term;\n      }\n\n      return [stroke, strokeWidth, fontFamily, fontSize, fontStyle, fontWeight, textDecoration, fill, deltaY, useWhiteSpace ? 'white-space: pre; ' : ''].join('');\n    },\n\n    /**\n     * Returns text-decoration property for svg-export\n     * @param {Object} style the object from which to retrieve style properties\n     * @return {String}\n     */\n    getSvgTextDecoration: function getSvgTextDecoration(style) {\n      if ('overline' in style || 'underline' in style || 'linethrough' in style) {\n        return (style.overline ? 'overline ' : '') + (style.underline ? 'underline ' : '') + (style.linethrough ? 'line-through ' : '');\n      }\n\n      return '';\n    },\n\n    /**\n     * Returns filter for svg shadow\n     * @return {String}\n     */\n    getSvgFilter: function getSvgFilter() {\n      return this.shadow ? 'filter: url(#SVGID_' + this.shadow.id + ');' : '';\n    },\n\n    /**\n     * Returns id attribute for svg output\n     * @return {String}\n     */\n    getSvgCommons: function getSvgCommons() {\n      return [this.id ? 'id=\"' + this.id + '\" ' : '', this.clipPath ? 'clip-path=\"url(#' + this.clipPath.clipPathId + ')\" ' : ''].join('');\n    },\n\n    /**\n     * Returns transform-string for svg-export\n     * @param {Boolean} use the full transform or the single object one.\n     * @return {String}\n     */\n    getSvgTransform: function getSvgTransform(full, additionalTransform) {\n      var transform = full ? this.calcTransformMatrix() : this.calcOwnMatrix(),\n          svgTransform = 'transform=\"' + fabric.util.matrixToSVG(transform);\n      return svgTransform + (additionalTransform || '') + this.getSvgTransformMatrix() + '\" ';\n    },\n\n    /**\n     * Returns transform-string for svg-export from the transform matrix of single elements\n     * @return {String}\n     */\n    getSvgTransformMatrix: function getSvgTransformMatrix() {\n      return this.transformMatrix ? ' ' + fabric.util.matrixToSVG(this.transformMatrix) : '';\n    },\n    _setSVGBg: function _setSVGBg(textBgRects) {\n      if (this.backgroundColor) {\n        var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n        textBgRects.push('\\t\\t<rect ', this._getFillAttributes(this.backgroundColor), ' x=\"', toFixed(-this.width / 2, NUM_FRACTION_DIGITS), '\" y=\"', toFixed(-this.height / 2, NUM_FRACTION_DIGITS), '\" width=\"', toFixed(this.width, NUM_FRACTION_DIGITS), '\" height=\"', toFixed(this.height, NUM_FRACTION_DIGITS), '\"></rect>\\n');\n      }\n    },\n\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function toSVG(reviver) {\n      return this._createBaseSVGMarkup(this._toSVG(), {\n        reviver: reviver\n      });\n    },\n\n    /**\n     * Returns svg clipPath representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toClipPathSVG: function toClipPathSVG(reviver) {\n      return '\\t' + this._createBaseClipPathSVGMarkup(this._toSVG(), {\n        reviver: reviver\n      });\n    },\n\n    /**\n     * @private\n     */\n    _createBaseClipPathSVGMarkup: function _createBaseClipPathSVGMarkup(objectMarkup, options) {\n      options = options || {};\n      var reviver = options.reviver,\n          additionalTransform = options.additionalTransform || '',\n          commonPieces = [this.getSvgTransform(true, additionalTransform), this.getSvgCommons()].join(''),\n          // insert commons in the markup, style and svgCommons\n      index = objectMarkup.indexOf('COMMON_PARTS');\n      objectMarkup[index] = commonPieces;\n      return reviver ? reviver(objectMarkup.join('')) : objectMarkup.join('');\n    },\n\n    /**\n     * @private\n     */\n    _createBaseSVGMarkup: function _createBaseSVGMarkup(objectMarkup, options) {\n      options = options || {};\n      var noStyle = options.noStyle,\n          withShadow = options.withShadow,\n          reviver = options.reviver,\n          styleInfo = noStyle ? '' : 'style=\"' + this.getSvgStyles() + '\" ',\n          shadowInfo = withShadow ? 'style=\"' + this.getSvgFilter() + '\" ' : '',\n          clipPath = this.clipPath,\n          vectorEffect = this.strokeUniform ? 'vector-effect=\"non-scaling-stroke\" ' : '',\n          absoluteClipPath = this.clipPath && this.clipPath.absolutePositioned,\n          commonPieces,\n          markup = [],\n          clipPathMarkup,\n          // insert commons in the markup, style and svgCommons\n      index = objectMarkup.indexOf('COMMON_PARTS'),\n          additionalTransform = options.additionalTransform;\n\n      if (clipPath) {\n        clipPath.clipPathId = 'CLIPPATH_' + fabric.Object.__uid++;\n        clipPathMarkup = '<clipPath id=\"' + clipPath.clipPathId + '\" >\\n' + this.clipPath.toClipPathSVG(reviver) + '</clipPath>\\n';\n      }\n\n      if (absoluteClipPath) {\n        markup.push('<g ', shadowInfo, this.getSvgCommons(), ' >\\n');\n      }\n\n      markup.push('<g ', this.getSvgTransform(false), !absoluteClipPath ? shadowInfo + this.getSvgCommons() : '', ' >\\n');\n      commonPieces = [styleInfo, vectorEffect, noStyle ? '' : this.addPaintOrder(), ' ', additionalTransform ? 'transform=\"' + additionalTransform + '\" ' : ''].join('');\n      objectMarkup[index] = commonPieces;\n\n      if (this.fill && this.fill.toLive) {\n        markup.push(this.fill.toSVG(this));\n      }\n\n      if (this.stroke && this.stroke.toLive) {\n        markup.push(this.stroke.toSVG(this));\n      }\n\n      if (this.shadow) {\n        markup.push(this.shadow.toSVG(this));\n      }\n\n      if (clipPath) {\n        markup.push(clipPathMarkup);\n      }\n\n      markup.push(objectMarkup.join(''));\n      markup.push('</g>\\n');\n      absoluteClipPath && markup.push('</g>\\n');\n      return reviver ? reviver(markup.join('')) : markup.join('');\n    },\n    addPaintOrder: function addPaintOrder() {\n      return this.paintFirst !== 'fill' ? ' paint-order=\"' + this.paintFirst + '\" ' : '';\n    }\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function () {\n  var extend = fabric.util.object.extend,\n      originalSet = 'stateProperties';\n  /*\n    Depends on `stateProperties`\n  */\n\n  function saveProps(origin, destination, props) {\n    var tmpObj = {},\n        deep = true;\n    props.forEach(function (prop) {\n      tmpObj[prop] = origin[prop];\n    });\n    extend(origin[destination], tmpObj, deep);\n  }\n\n  function _isEqual(origValue, currentValue, firstPass) {\n    if (origValue === currentValue) {\n      // if the objects are identical, return\n      return true;\n    } else if (Array.isArray(origValue)) {\n      if (!Array.isArray(currentValue) || origValue.length !== currentValue.length) {\n        return false;\n      }\n\n      for (var i = 0, len = origValue.length; i < len; i++) {\n        if (!_isEqual(origValue[i], currentValue[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    } else if (origValue && typeof origValue === 'object') {\n      var keys = Object.keys(origValue),\n          key;\n\n      if (!currentValue || typeof currentValue !== 'object' || !firstPass && keys.length !== Object.keys(currentValue).length) {\n        return false;\n      }\n\n      for (var i = 0, len = keys.length; i < len; i++) {\n        key = keys[i]; // since clipPath is in the statefull cache list and the clipPath objects\n        // would be iterated as an object, this would lead to possible infinite recursion\n\n        if (key === 'canvas') {\n          continue;\n        }\n\n        if (!_isEqual(origValue[key], currentValue[key])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  }\n\n  fabric.util.object.extend(fabric.Object.prototype,\n  /** @lends fabric.Object.prototype */\n  {\n    /**\n     * Returns true if object state (one of its state properties) was changed\n     * @param {String} [propertySet] optional name for the set of property we want to save\n     * @return {Boolean} true if instance' state has changed since `{@link fabric.Object#saveState}` was called\n     */\n    hasStateChanged: function hasStateChanged(propertySet) {\n      propertySet = propertySet || originalSet;\n      var dashedPropertySet = '_' + propertySet;\n\n      if (Object.keys(this[dashedPropertySet]).length < this[propertySet].length) {\n        return true;\n      }\n\n      return !_isEqual(this[dashedPropertySet], this, true);\n    },\n\n    /**\n     * Saves state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    saveState: function saveState(options) {\n      var propertySet = options && options.propertySet || originalSet,\n          destination = '_' + propertySet;\n\n      if (!this[destination]) {\n        return this.setupState(options);\n      }\n\n      saveProps(this, destination, this[propertySet]);\n\n      if (options && options.stateProperties) {\n        saveProps(this, destination, options.stateProperties);\n      }\n\n      return this;\n    },\n\n    /**\n     * Setups state of an object\n     * @param {Object} [options] Object with additional `stateProperties` array to include when saving state\n     * @return {fabric.Object} thisArg\n     */\n    setupState: function setupState(options) {\n      options = options || {};\n      var propertySet = options.propertySet || originalSet;\n      options.propertySet = propertySet;\n      this['_' + propertySet] = {};\n      this.saveState(options);\n      return this;\n    }\n  });\n})();\n\n(function () {\n  var degreesToRadians = fabric.util.degreesToRadians;\n  fabric.util.object.extend(fabric.Object.prototype,\n  /** @lends fabric.Object.prototype */\n  {\n    /**\n     * The object interactivity controls.\n     * @private\n     */\n    _controlsVisibility: null,\n\n    /**\n     * Determines which corner has been clicked\n     * @private\n     * @param {Object} pointer The pointer indicating the mouse position\n     * @return {String|Boolean} corner code (tl, tr, bl, br, etc.), or false if nothing is found\n     */\n    _findTargetCorner: function _findTargetCorner(pointer) {\n      // objects in group, anykind, are not self modificable,\n      // must not return an hovered corner.\n      if (!this.hasControls || this.group || !this.canvas || this.canvas._activeObject !== this) {\n        return false;\n      }\n\n      var ex = pointer.x,\n          ey = pointer.y,\n          xPoints,\n          lines;\n      this.__corner = 0;\n\n      for (var i in this.oCoords) {\n        if (!this.isControlVisible(i)) {\n          continue;\n        }\n\n        if (i === 'mtr' && !this.hasRotatingPoint) {\n          continue;\n        }\n\n        if (this.get('lockUniScaling') && (i === 'mt' || i === 'mr' || i === 'mb' || i === 'ml')) {\n          continue;\n        }\n\n        lines = this._getImageLines(this.oCoords[i].corner); // debugging\n        // canvas.contextTop.fillRect(lines.bottomline.d.x, lines.bottomline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.bottomline.o.x, lines.bottomline.o.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.leftline.d.x, lines.leftline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.leftline.o.x, lines.leftline.o.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.topline.d.x, lines.topline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.topline.o.x, lines.topline.o.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.rightline.d.x, lines.rightline.d.y, 2, 2);\n        // canvas.contextTop.fillRect(lines.rightline.o.x, lines.rightline.o.y, 2, 2);\n\n        xPoints = this._findCrossPoints({\n          x: ex,\n          y: ey\n        }, lines);\n\n        if (xPoints !== 0 && xPoints % 2 === 1) {\n          this.__corner = i;\n          return i;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Sets the coordinates of the draggable boxes in the corners of\n     * the image used to scale/rotate it.\n     * @private\n     */\n    _setCornerCoords: function _setCornerCoords() {\n      var coords = this.oCoords,\n          newTheta = degreesToRadians(45 - this.angle),\n\n      /* Math.sqrt(2 * Math.pow(this.cornerSize, 2)) / 2, */\n\n      /* 0.707106 stands for sqrt(2)/2 */\n      cornerHypotenuse = this.cornerSize * 0.707106,\n          cosHalfOffset = cornerHypotenuse * fabric.util.cos(newTheta),\n          sinHalfOffset = cornerHypotenuse * fabric.util.sin(newTheta),\n          x,\n          y;\n\n      for (var point in coords) {\n        x = coords[point].x;\n        y = coords[point].y;\n        coords[point].corner = {\n          tl: {\n            x: x - sinHalfOffset,\n            y: y - cosHalfOffset\n          },\n          tr: {\n            x: x + cosHalfOffset,\n            y: y - sinHalfOffset\n          },\n          bl: {\n            x: x - cosHalfOffset,\n            y: y + sinHalfOffset\n          },\n          br: {\n            x: x + sinHalfOffset,\n            y: y + cosHalfOffset\n          }\n        };\n      }\n    },\n\n    /**\n     * Draws a colored layer behind the object, inside its selection borders.\n     * Requires public options: padding, selectionBackgroundColor\n     * this function is called when the context is transformed\n     * has checks to be skipped when the object is on a staticCanvas\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawSelectionBackground: function drawSelectionBackground(ctx) {\n      if (!this.selectionBackgroundColor || this.canvas && !this.canvas.interactive || this.canvas && this.canvas._activeObject !== this) {\n        return this;\n      }\n\n      ctx.save();\n\n      var center = this.getCenterPoint(),\n          wh = this._calculateCurrentDimensions(),\n          vpt = this.canvas.viewportTransform;\n\n      ctx.translate(center.x, center.y);\n      ctx.scale(1 / vpt[0], 1 / vpt[3]);\n      ctx.rotate(degreesToRadians(this.angle));\n      ctx.fillStyle = this.selectionBackgroundColor;\n      ctx.fillRect(-wh.x / 2, -wh.y / 2, wh.x, wh.y);\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBorders: function drawBorders(ctx, styleOverride) {\n      styleOverride = styleOverride || {};\n\n      var wh = this._calculateCurrentDimensions(),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth,\n          drawRotatingPoint = typeof styleOverride.hasRotatingPoint !== 'undefined' ? styleOverride.hasRotatingPoint : this.hasRotatingPoint,\n          hasControls = typeof styleOverride.hasControls !== 'undefined' ? styleOverride.hasControls : this.hasControls,\n          rotatingPointOffset = typeof styleOverride.rotatingPointOffset !== 'undefined' ? styleOverride.rotatingPointOffset : this.rotatingPointOffset;\n\n      ctx.save();\n      ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\n\n      this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\n\n      ctx.strokeRect(-width / 2, -height / 2, width, height);\n\n      if (drawRotatingPoint && this.isControlVisible('mtr') && hasControls) {\n        var rotateHeight = -height / 2;\n        ctx.beginPath();\n        ctx.moveTo(0, rotateHeight);\n        ctx.lineTo(0, rotateHeight - rotatingPointOffset);\n        ctx.stroke();\n      }\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws borders of an object's bounding box when it is inside a group.\n     * Requires public properties: width, height\n     * Requires public options: padding, borderColor\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {object} options object representing current object parameters\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawBordersInGroup: function drawBordersInGroup(ctx, options, styleOverride) {\n      styleOverride = styleOverride || {};\n\n      var p = this._getNonTransformedDimensions(),\n          matrix = fabric.util.customTransformMatrix(options.scaleX, options.scaleY, options.skewX),\n          wh = fabric.util.transformPoint(p, matrix),\n          strokeWidth = 1 / this.borderScaleFactor,\n          width = wh.x + strokeWidth,\n          height = wh.y + strokeWidth;\n\n      ctx.save();\n\n      this._setLineDash(ctx, styleOverride.borderDashArray || this.borderDashArray, null);\n\n      ctx.strokeStyle = styleOverride.borderColor || this.borderColor;\n      ctx.strokeRect(-width / 2, -height / 2, width, height);\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * Draws corners of an object's bounding box.\n     * Requires public properties: width, height\n     * Requires public options: cornerSize, padding\n     * @param {CanvasRenderingContext2D} ctx Context to draw on\n     * @param {Object} styleOverride object to override the object style\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    drawControls: function drawControls(ctx, styleOverride) {\n      styleOverride = styleOverride || {};\n\n      var wh = this._calculateCurrentDimensions(),\n          width = wh.x,\n          height = wh.y,\n          scaleOffset = styleOverride.cornerSize || this.cornerSize,\n          left = -(width + scaleOffset) / 2,\n          top = -(height + scaleOffset) / 2,\n          transparentCorners = typeof styleOverride.transparentCorners !== 'undefined' ? styleOverride.transparentCorners : this.transparentCorners,\n          hasRotatingPoint = typeof styleOverride.hasRotatingPoint !== 'undefined' ? styleOverride.hasRotatingPoint : this.hasRotatingPoint,\n          methodName = transparentCorners ? 'stroke' : 'fill';\n\n      ctx.save();\n      ctx.strokeStyle = ctx.fillStyle = styleOverride.cornerColor || this.cornerColor;\n\n      if (!this.transparentCorners) {\n        ctx.strokeStyle = styleOverride.cornerStrokeColor || this.cornerStrokeColor;\n      }\n\n      this._setLineDash(ctx, styleOverride.cornerDashArray || this.cornerDashArray, null); // top-left\n\n\n      this._drawControl('tl', ctx, methodName, left, top, styleOverride); // top-right\n\n\n      this._drawControl('tr', ctx, methodName, left + width, top, styleOverride); // bottom-left\n\n\n      this._drawControl('bl', ctx, methodName, left, top + height, styleOverride); // bottom-right\n\n\n      this._drawControl('br', ctx, methodName, left + width, top + height, styleOverride);\n\n      if (!this.get('lockUniScaling')) {\n        // middle-top\n        this._drawControl('mt', ctx, methodName, left + width / 2, top, styleOverride); // middle-bottom\n\n\n        this._drawControl('mb', ctx, methodName, left + width / 2, top + height, styleOverride); // middle-right\n\n\n        this._drawControl('mr', ctx, methodName, left + width, top + height / 2, styleOverride); // middle-left\n\n\n        this._drawControl('ml', ctx, methodName, left, top + height / 2, styleOverride);\n      } // middle-top-rotate\n\n\n      if (hasRotatingPoint) {\n        this._drawControl('mtr', ctx, methodName, left + width / 2, top - this.rotatingPointOffset, styleOverride);\n      }\n\n      ctx.restore();\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _drawControl: function _drawControl(control, ctx, methodName, left, top, styleOverride) {\n      styleOverride = styleOverride || {};\n\n      if (!this.isControlVisible(control)) {\n        return;\n      }\n\n      var size = this.cornerSize,\n          stroke = !this.transparentCorners && this.cornerStrokeColor;\n\n      switch (styleOverride.cornerStyle || this.cornerStyle) {\n        case 'circle':\n          ctx.beginPath();\n          ctx.arc(left + size / 2, top + size / 2, size / 2, 0, 2 * Math.PI, false);\n          ctx[methodName]();\n\n          if (stroke) {\n            ctx.stroke();\n          }\n\n          break;\n\n        default:\n          this.transparentCorners || ctx.clearRect(left, top, size, size);\n          ctx[methodName + 'Rect'](left, top, size, size);\n\n          if (stroke) {\n            ctx.strokeRect(left, top, size, size);\n          }\n\n      }\n    },\n\n    /**\n     * Returns true if the specified control is visible, false otherwise.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @returns {Boolean} true if the specified control is visible, false otherwise\n     */\n    isControlVisible: function isControlVisible(controlName) {\n      return this._getControlsVisibility()[controlName];\n    },\n\n    /**\n     * Sets the visibility of the specified control.\n     * @param {String} controlName The name of the control. Possible values are 'tl', 'tr', 'br', 'bl', 'ml', 'mt', 'mr', 'mb', 'mtr'.\n     * @param {Boolean} visible true to set the specified control visible, false otherwise\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlVisible: function setControlVisible(controlName, visible) {\n      this._getControlsVisibility()[controlName] = visible;\n      return this;\n    },\n\n    /**\n     * Sets the visibility state of object controls.\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.bl] true to enable the bottom-left control, false to disable it\n     * @param {Boolean} [options.br] true to enable the bottom-right control, false to disable it\n     * @param {Boolean} [options.mb] true to enable the middle-bottom control, false to disable it\n     * @param {Boolean} [options.ml] true to enable the middle-left control, false to disable it\n     * @param {Boolean} [options.mr] true to enable the middle-right control, false to disable it\n     * @param {Boolean} [options.mt] true to enable the middle-top control, false to disable it\n     * @param {Boolean} [options.tl] true to enable the top-left control, false to disable it\n     * @param {Boolean} [options.tr] true to enable the top-right control, false to disable it\n     * @param {Boolean} [options.mtr] true to enable the middle-top-rotate control, false to disable it\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    setControlsVisibility: function setControlsVisibility(options) {\n      options || (options = {});\n\n      for (var p in options) {\n        this.setControlVisible(p, options[p]);\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns the instance of the control visibility set for this object.\n     * @private\n     * @returns {Object}\n     */\n    _getControlsVisibility: function _getControlsVisibility() {\n      if (!this._controlsVisibility) {\n        this._controlsVisibility = {\n          tl: true,\n          tr: true,\n          br: true,\n          bl: true,\n          ml: true,\n          mt: true,\n          mr: true,\n          mb: true,\n          mtr: true\n        };\n      }\n\n      return this._controlsVisibility;\n    },\n\n    /**\n     * This callback function is called every time _discardActiveObject or _setActiveObject\n     * try to to deselect this object. If the function returns true, the process is cancelled\n     * @param {Object} [options] options sent from the upper functions\n     * @param {Event} [options.e] event if the process is generated by an event\n     */\n    onDeselect: function onDeselect() {// implemented by sub-classes, as needed.\n    },\n\n    /**\n     * This callback function is called every time _discardActiveObject or _setActiveObject\n     * try to to select this object. If the function returns true, the process is cancelled\n     * @param {Object} [options] options sent from the upper functions\n     * @param {Event} [options.e] event if the process is generated by an event\n     */\n    onSelect: function onSelect() {// implemented by sub-classes, as needed.\n    }\n  });\n})();\n\nfabric.util.object.extend(fabric.StaticCanvas.prototype,\n/** @lends fabric.StaticCanvas.prototype */\n{\n  /**\n   * Animation duration (in ms) for fx* methods\n   * @type Number\n   * @default\n   */\n  FX_DURATION: 500,\n\n  /**\n   * Centers object horizontally with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectH: function fxCenterObjectH(object, callbacks) {\n    callbacks = callbacks || {};\n\n    var empty = function empty() {},\n        _onComplete = callbacks.onComplete || empty,\n        _onChange = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.left,\n      endValue: this.getCenter().left,\n      duration: this.FX_DURATION,\n      onChange: function onChange(value) {\n        object.set('left', value);\n\n        _this.requestRenderAll();\n\n        _onChange();\n      },\n      onComplete: function onComplete() {\n        object.setCoords();\n\n        _onComplete();\n      }\n    });\n    return this;\n  },\n\n  /**\n   * Centers object vertically with animation.\n   * @param {fabric.Object} object Object to center\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxCenterObjectV: function fxCenterObjectV(object, callbacks) {\n    callbacks = callbacks || {};\n\n    var empty = function empty() {},\n        _onComplete2 = callbacks.onComplete || empty,\n        _onChange2 = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.top,\n      endValue: this.getCenter().top,\n      duration: this.FX_DURATION,\n      onChange: function onChange(value) {\n        object.set('top', value);\n\n        _this.requestRenderAll();\n\n        _onChange2();\n      },\n      onComplete: function onComplete() {\n        object.setCoords();\n\n        _onComplete2();\n      }\n    });\n    return this;\n  },\n\n  /**\n   * Same as `fabric.Canvas#remove` but animated\n   * @param {fabric.Object} object Object to remove\n   * @param {Object} [callbacks] Callbacks object with optional \"onComplete\" and/or \"onChange\" properties\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxRemove: function fxRemove(object, callbacks) {\n    callbacks = callbacks || {};\n\n    var empty = function empty() {},\n        _onComplete3 = callbacks.onComplete || empty,\n        _onChange3 = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: object.opacity,\n      endValue: 0,\n      duration: this.FX_DURATION,\n      onChange: function onChange(value) {\n        object.set('opacity', value);\n\n        _this.requestRenderAll();\n\n        _onChange3();\n      },\n      onComplete: function onComplete() {\n        _this.remove(object);\n\n        _onComplete3();\n      }\n    });\n    return this;\n  }\n});\nfabric.util.object.extend(fabric.Object.prototype,\n/** @lends fabric.Object.prototype */\n{\n  /**\n   * Animates object's properties\n   * @param {String|Object} property Property to animate (if string) or properties to animate (if object)\n   * @param {Number|Object} value Value to animate property to (if string was given first) or options object\n   * @return {fabric.Object} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#animation}\n   * @chainable\n   *\n   * As object — multiple properties\n   *\n   * object.animate({ left: ..., top: ... });\n   * object.animate({ left: ..., top: ... }, { duration: ... });\n   *\n   * As string — one property\n   *\n   * object.animate('left', ...);\n   * object.animate('left', { duration: ... });\n   *\n   */\n  animate: function animate() {\n    if (arguments[0] && typeof arguments[0] === 'object') {\n      var propsToAnimate = [],\n          prop,\n          skipCallbacks;\n\n      for (prop in arguments[0]) {\n        propsToAnimate.push(prop);\n      }\n\n      for (var i = 0, len = propsToAnimate.length; i < len; i++) {\n        prop = propsToAnimate[i];\n        skipCallbacks = i !== len - 1;\n\n        this._animate(prop, arguments[0][prop], arguments[1], skipCallbacks);\n      }\n    } else {\n      this._animate.apply(this, arguments);\n    }\n\n    return this;\n  },\n\n  /**\n   * @private\n   * @param {String} property Property to animate\n   * @param {String} to Value to animate to\n   * @param {Object} [options] Options object\n   * @param {Boolean} [skipCallbacks] When true, callbacks like onchange and oncomplete are not invoked\n   */\n  _animate: function _animate(property, to, options, skipCallbacks) {\n    var _this = this,\n        propPair;\n\n    to = to.toString();\n\n    if (!options) {\n      options = {};\n    } else {\n      options = fabric.util.object.clone(options);\n    }\n\n    if (~property.indexOf('.')) {\n      propPair = property.split('.');\n    }\n\n    var currentValue = propPair ? this.get(propPair[0])[propPair[1]] : this.get(property);\n\n    if (!('from' in options)) {\n      options.from = currentValue;\n    }\n\n    if (~to.indexOf('=')) {\n      to = currentValue + parseFloat(to.replace('=', ''));\n    } else {\n      to = parseFloat(to);\n    }\n\n    fabric.util.animate({\n      startValue: options.from,\n      endValue: to,\n      byValue: options.by,\n      easing: options.easing,\n      duration: options.duration,\n      abort: options.abort && function () {\n        return options.abort.call(_this);\n      },\n      onChange: function onChange(value, valueProgress, timeProgress) {\n        if (propPair) {\n          _this[propPair[0]][propPair[1]] = value;\n        } else {\n          _this.set(property, value);\n        }\n\n        if (skipCallbacks) {\n          return;\n        }\n\n        options.onChange && options.onChange(value, valueProgress, timeProgress);\n      },\n      onComplete: function onComplete(value, valueProgress, timeProgress) {\n        if (skipCallbacks) {\n          return;\n        }\n\n        _this.setCoords();\n\n        options.onComplete && options.onComplete(value, valueProgress, timeProgress);\n      }\n    });\n  }\n});\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      extend = fabric.util.object.extend,\n      clone = fabric.util.object.clone,\n      coordProps = {\n    x1: 1,\n    x2: 1,\n    y1: 1,\n    y2: 1\n  },\n      supportsLineDash = fabric.StaticCanvas.supports('setLineDash');\n\n  if (fabric.Line) {\n    fabric.warn('fabric.Line is already defined');\n    return;\n  }\n  /**\n   * Line class\n   * @class fabric.Line\n   * @extends fabric.Object\n   * @see {@link fabric.Line#initialize} for constructor definition\n   */\n\n\n  fabric.Line = fabric.util.createClass(fabric.Object,\n  /** @lends fabric.Line.prototype */\n  {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'line',\n\n    /**\n     * x value or first line edge\n     * @type Number\n     * @default\n     */\n    x1: 0,\n\n    /**\n     * y value or first line edge\n     * @type Number\n     * @default\n     */\n    y1: 0,\n\n    /**\n     * x value or second line edge\n     * @type Number\n     * @default\n     */\n    x2: 0,\n\n    /**\n     * y value or second line edge\n     * @type Number\n     * @default\n     */\n    y2: 0,\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('x1', 'x2', 'y1', 'y2'),\n\n    /**\n     * Constructor\n     * @param {Array} [points] Array of points\n     * @param {Object} [options] Options object\n     * @return {fabric.Line} thisArg\n     */\n    initialize: function initialize(points, options) {\n      if (!points) {\n        points = [0, 0, 0, 0];\n      }\n\n      this.callSuper('initialize', options);\n      this.set('x1', points[0]);\n      this.set('y1', points[1]);\n      this.set('x2', points[2]);\n      this.set('y2', points[3]);\n\n      this._setWidthHeight(options);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options\n     */\n    _setWidthHeight: function _setWidthHeight(options) {\n      options || (options = {});\n      this.width = Math.abs(this.x2 - this.x1);\n      this.height = Math.abs(this.y2 - this.y1);\n      this.left = 'left' in options ? options.left : this._getLeftToOriginX();\n      this.top = 'top' in options ? options.top : this._getTopToOriginY();\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     */\n    _set: function _set(key, value) {\n      this.callSuper('_set', key, value);\n\n      if (typeof coordProps[key] !== 'undefined') {\n        this._setWidthHeight();\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     * @return {Number} leftToOriginX Distance from left edge of canvas to originX of Line.\n     */\n    _getLeftToOriginX: makeEdgeToOriginGetter({\n      // property names\n      origin: 'originX',\n      axis1: 'x1',\n      axis2: 'x2',\n      dimension: 'width'\n    }, {\n      // possible values of origin\n      nearest: 'left',\n      center: 'center',\n      farthest: 'right'\n    }),\n\n    /**\n     * @private\n     * @return {Number} topToOriginY Distance from top edge of canvas to originY of Line.\n     */\n    _getTopToOriginY: makeEdgeToOriginGetter({\n      // property names\n      origin: 'originY',\n      axis1: 'y1',\n      axis2: 'y2',\n      dimension: 'height'\n    }, {\n      // possible values of origin\n      nearest: 'top',\n      center: 'center',\n      farthest: 'bottom'\n    }),\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function _render(ctx) {\n      ctx.beginPath();\n\n      if (!this.strokeDashArray || this.strokeDashArray && supportsLineDash) {\n        // move from center (of virtual box) to its left/top corner\n        // we can't assume x1, y1 is top left and x2, y2 is bottom right\n        var p = this.calcLinePoints();\n        ctx.moveTo(p.x1, p.y1);\n        ctx.lineTo(p.x2, p.y2);\n      }\n\n      ctx.lineWidth = this.strokeWidth; // TODO: test this\n      // make sure setting \"fill\" changes color of a line\n      // (by copying fillStyle to strokeStyle, since line is stroked, not filled)\n\n      var origStrokeStyle = ctx.strokeStyle;\n      ctx.strokeStyle = this.stroke || ctx.fillStyle;\n      this.stroke && this._renderStroke(ctx);\n      ctx.strokeStyle = origStrokeStyle;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function _renderDashedStroke(ctx) {\n      var p = this.calcLinePoints();\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, p.x1, p.y1, p.x2, p.y2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * This function is an helper for svg import. it returns the center of the object in the svg\n     * untransformed coordinates\n     * @private\n     * @return {Object} center point from element coordinates\n     */\n    _findCenterFromElement: function _findCenterFromElement() {\n      return {\n        x: (this.x1 + this.x2) / 2,\n        y: (this.y1 + this.y2) / 2\n      };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @methd toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function toObject(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), this.calcLinePoints());\n    },\n\n    /*\n     * Calculate object dimensions from its properties\n     * @private\n     */\n    _getNonTransformedDimensions: function _getNonTransformedDimensions() {\n      var dim = this.callSuper('_getNonTransformedDimensions');\n\n      if (this.strokeLineCap === 'butt') {\n        if (this.width === 0) {\n          dim.y -= this.strokeWidth;\n        }\n\n        if (this.height === 0) {\n          dim.x -= this.strokeWidth;\n        }\n      }\n\n      return dim;\n    },\n\n    /**\n     * Recalculates line points given width and height\n     * @private\n     */\n    calcLinePoints: function calcLinePoints() {\n      var xMult = this.x1 <= this.x2 ? -1 : 1,\n          yMult = this.y1 <= this.y2 ? -1 : 1,\n          x1 = xMult * this.width * 0.5,\n          y1 = yMult * this.height * 0.5,\n          x2 = xMult * this.width * -0.5,\n          y2 = yMult * this.height * -0.5;\n      return {\n        x1: x1,\n        x2: x2,\n        y1: y1,\n        y2: y2\n      };\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function _toSVG() {\n      var p = this.calcLinePoints();\n      return ['<line ', 'COMMON_PARTS', 'x1=\"', p.x1, '\" y1=\"', p.y1, '\" x2=\"', p.x2, '\" y2=\"', p.y2, '\" />\\n'];\n    }\n    /* _TO_SVG_END_ */\n\n  });\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Line.fromElement})\n   * @static\n   * @memberOf fabric.Line\n   * @see http://www.w3.org/TR/SVG/shapes.html#LineElement\n   */\n\n  fabric.Line.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x1 y1 x2 y2'.split(' '));\n  /**\n   * Returns fabric.Line instance from an SVG element\n   * @static\n   * @memberOf fabric.Line\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] callback function invoked after parsing\n   */\n\n  fabric.Line.fromElement = function (element, callback, options) {\n    options = options || {};\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Line.ATTRIBUTE_NAMES),\n        points = [parsedAttributes.x1 || 0, parsedAttributes.y1 || 0, parsedAttributes.x2 || 0, parsedAttributes.y2 || 0];\n    callback(new fabric.Line(points, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Line instance from an object representation\n   * @static\n   * @memberOf fabric.Line\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   */\n\n\n  fabric.Line.fromObject = function (object, callback) {\n    function _callback(instance) {\n      delete instance.points;\n      callback && callback(instance);\n    }\n\n    ;\n    var options = clone(object, true);\n    options.points = [object.x1, object.y1, object.x2, object.y2];\n\n    fabric.Object._fromObject('Line', options, _callback, 'points');\n  };\n  /**\n   * Produces a function that calculates distance from canvas edge to Line origin.\n   */\n\n\n  function makeEdgeToOriginGetter(propertyNames, originValues) {\n    var origin = propertyNames.origin,\n        axis1 = propertyNames.axis1,\n        axis2 = propertyNames.axis2,\n        dimension = propertyNames.dimension,\n        nearest = originValues.nearest,\n        center = originValues.center,\n        farthest = originValues.farthest;\n    return function () {\n      switch (this.get(origin)) {\n        case nearest:\n          return Math.min(this.get(axis1), this.get(axis2));\n\n        case center:\n          return Math.min(this.get(axis1), this.get(axis2)) + 0.5 * this.get(dimension);\n\n        case farthest:\n          return Math.max(this.get(axis1), this.get(axis2));\n      }\n    };\n  }\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      pi = Math.PI;\n\n  if (fabric.Circle) {\n    fabric.warn('fabric.Circle is already defined.');\n    return;\n  }\n  /**\n   * Circle class\n   * @class fabric.Circle\n   * @extends fabric.Object\n   * @see {@link fabric.Circle#initialize} for constructor definition\n   */\n\n\n  fabric.Circle = fabric.util.createClass(fabric.Object,\n  /** @lends fabric.Circle.prototype */\n  {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'circle',\n\n    /**\n     * Radius of this circle\n     * @type Number\n     * @default\n     */\n    radius: 0,\n\n    /**\n     * Start angle of the circle, moving clockwise\n     * deprectated type, this should be in degree, this was an oversight.\n     * probably will change to degrees in next major version\n     * @type Number\n     * @default 0\n     */\n    startAngle: 0,\n\n    /**\n     * End angle of the circle\n     * deprectated type, this should be in degree, this was an oversight.\n     * probably will change to degrees in next major version\n     * @type Number\n     * @default 2Pi\n     */\n    endAngle: pi * 2,\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('radius', 'startAngle', 'endAngle'),\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Circle} thisArg\n     */\n    _set: function _set(key, value) {\n      this.callSuper('_set', key, value);\n\n      if (key === 'radius') {\n        this.setRadius(value);\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function toObject(propertiesToInclude) {\n      return this.callSuper('toObject', ['radius', 'startAngle', 'endAngle'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function _toSVG() {\n      var svgString,\n          x = 0,\n          y = 0,\n          angle = (this.endAngle - this.startAngle) % (2 * pi);\n\n      if (angle === 0) {\n        svgString = ['<circle ', 'COMMON_PARTS', 'cx=\"' + x + '\" cy=\"' + y + '\" ', 'r=\"', this.radius, '\" />\\n'];\n      } else {\n        var startX = fabric.util.cos(this.startAngle) * this.radius,\n            startY = fabric.util.sin(this.startAngle) * this.radius,\n            endX = fabric.util.cos(this.endAngle) * this.radius,\n            endY = fabric.util.sin(this.endAngle) * this.radius,\n            largeFlag = angle > pi ? '1' : '0';\n        svgString = ['<path d=\"M ' + startX + ' ' + startY, ' A ' + this.radius + ' ' + this.radius, ' 0 ', +largeFlag + ' 1', ' ' + endX + ' ' + endY, '\" ', 'COMMON_PARTS', ' />\\n'];\n      }\n\n      return svgString;\n    },\n\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     */\n    _render: function _render(ctx) {\n      ctx.beginPath();\n      ctx.arc(0, 0, this.radius, this.startAngle, this.endAngle, false);\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusX: function getRadiusX() {\n      return this.get('radius') * this.get('scaleX');\n    },\n\n    /**\n     * Returns vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRadiusY: function getRadiusY() {\n      return this.get('radius') * this.get('scaleY');\n    },\n\n    /**\n     * Sets radius of an object (and updates width accordingly)\n     * @return {fabric.Circle} thisArg\n     */\n    setRadius: function setRadius(value) {\n      this.radius = value;\n      return this.set('width', value * 2).set('height', value * 2);\n    }\n  });\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Circle.fromElement})\n   * @static\n   * @memberOf fabric.Circle\n   * @see: http://www.w3.org/TR/SVG/shapes.html#CircleElement\n   */\n\n  fabric.Circle.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy r'.split(' '));\n  /**\n   * Returns {@link fabric.Circle} instance from an SVG element\n   * @static\n   * @memberOf fabric.Circle\n   * @param {SVGElement} element Element to parse\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   * @param {Object} [options] Options object\n   * @throws {Error} If value of `r` attribute is missing or invalid\n   */\n\n  fabric.Circle.fromElement = function (element, callback) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Circle.ATTRIBUTE_NAMES);\n\n    if (!isValidRadius(parsedAttributes)) {\n      throw new Error('value of `r` attribute is required and can not be negative');\n    }\n\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.radius;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.radius;\n    callback(new fabric.Circle(parsedAttributes));\n  };\n  /**\n   * @private\n   */\n\n\n  function isValidRadius(attributes) {\n    return 'radius' in attributes && attributes.radius >= 0;\n  }\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Circle} instance from an object representation\n   * @static\n   * @memberOf fabric.Circle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {Object} Instance of fabric.Circle\n   */\n\n\n  fabric.Circle.fromObject = function (object, callback) {\n    return fabric.Object._fromObject('Circle', object, callback);\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {});\n\n  if (fabric.Triangle) {\n    fabric.warn('fabric.Triangle is already defined');\n    return;\n  }\n  /**\n   * Triangle class\n   * @class fabric.Triangle\n   * @extends fabric.Object\n   * @return {fabric.Triangle} thisArg\n   * @see {@link fabric.Triangle#initialize} for constructor definition\n   */\n\n\n  fabric.Triangle = fabric.util.createClass(fabric.Object,\n  /** @lends fabric.Triangle.prototype */\n  {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'triangle',\n\n    /**\n     * Width is set to 100 to compensate the old initialize code that was setting it to 100\n     * @type Number\n     * @default\n     */\n    width: 100,\n\n    /**\n     * Height is set to 100 to compensate the old initialize code that was setting it to 100\n     * @type Number\n     * @default\n     */\n    height: 100,\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function _render(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n      ctx.beginPath();\n      ctx.moveTo(-widthBy2, heightBy2);\n      ctx.lineTo(0, -heightBy2);\n      ctx.lineTo(widthBy2, heightBy2);\n      ctx.closePath();\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function _renderDashedStroke(ctx) {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2;\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, -widthBy2, heightBy2, 0, -heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, 0, -heightBy2, widthBy2, heightBy2, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, widthBy2, heightBy2, -widthBy2, heightBy2, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function _toSVG() {\n      var widthBy2 = this.width / 2,\n          heightBy2 = this.height / 2,\n          points = [-widthBy2 + ' ' + heightBy2, '0 ' + -heightBy2, widthBy2 + ' ' + heightBy2].join(',');\n      return ['<polygon ', 'COMMON_PARTS', 'points=\"', points, '\" />'];\n    }\n    /* _TO_SVG_END_ */\n\n  });\n  /**\n   * Returns {@link fabric.Triangle} instance from an object representation\n   * @static\n   * @memberOf fabric.Triangle\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   */\n\n  fabric.Triangle.fromObject = function (object, callback) {\n    return fabric.Object._fromObject('Triangle', object, callback);\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      piBy2 = Math.PI * 2;\n\n  if (fabric.Ellipse) {\n    fabric.warn('fabric.Ellipse is already defined.');\n    return;\n  }\n  /**\n   * Ellipse class\n   * @class fabric.Ellipse\n   * @extends fabric.Object\n   * @return {fabric.Ellipse} thisArg\n   * @see {@link fabric.Ellipse#initialize} for constructor definition\n   */\n\n\n  fabric.Ellipse = fabric.util.createClass(fabric.Object,\n  /** @lends fabric.Ellipse.prototype */\n  {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'ellipse',\n\n    /**\n     * Horizontal radius\n     * @type Number\n     * @default\n     */\n    rx: 0,\n\n    /**\n     * Vertical radius\n     * @type Number\n     * @default\n     */\n    ry: 0,\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {fabric.Ellipse} thisArg\n     */\n    initialize: function initialize(options) {\n      this.callSuper('initialize', options);\n      this.set('rx', options && options.rx || 0);\n      this.set('ry', options && options.ry || 0);\n    },\n\n    /**\n     * @private\n     * @param {String} key\n     * @param {*} value\n     * @return {fabric.Ellipse} thisArg\n     */\n    _set: function _set(key, value) {\n      this.callSuper('_set', key, value);\n\n      switch (key) {\n        case 'rx':\n          this.rx = value;\n          this.set('width', value * 2);\n          break;\n\n        case 'ry':\n          this.ry = value;\n          this.set('height', value * 2);\n          break;\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns horizontal radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRx: function getRx() {\n      return this.get('rx') * this.get('scaleX');\n    },\n\n    /**\n     * Returns Vertical radius of an object (according to how an object is scaled)\n     * @return {Number}\n     */\n    getRy: function getRy() {\n      return this.get('ry') * this.get('scaleY');\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function toObject(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function _toSVG() {\n      return ['<ellipse ', 'COMMON_PARTS', 'cx=\"0\" cy=\"0\" ', 'rx=\"', this.rx, '\" ry=\"', this.ry, '\" />\\n'];\n    },\n\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render on\n     */\n    _render: function _render(ctx) {\n      ctx.beginPath();\n      ctx.save();\n      ctx.transform(1, 0, 0, this.ry / this.rx, 0, 0);\n      ctx.arc(0, 0, this.rx, 0, piBy2, false);\n      ctx.restore();\n\n      this._renderPaintInOrder(ctx);\n    }\n  });\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Ellipse.fromElement})\n   * @static\n   * @memberOf fabric.Ellipse\n   * @see http://www.w3.org/TR/SVG/shapes.html#EllipseElement\n   */\n\n  fabric.Ellipse.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('cx cy rx ry'.split(' '));\n  /**\n   * Returns {@link fabric.Ellipse} instance from an SVG element\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {SVGElement} element Element to parse\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   * @return {fabric.Ellipse}\n   */\n\n  fabric.Ellipse.fromElement = function (element, callback) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Ellipse.ATTRIBUTE_NAMES);\n    parsedAttributes.left = (parsedAttributes.left || 0) - parsedAttributes.rx;\n    parsedAttributes.top = (parsedAttributes.top || 0) - parsedAttributes.ry;\n    callback(new fabric.Ellipse(parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Ellipse} instance from an object representation\n   * @static\n   * @memberOf fabric.Ellipse\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as first argument\n   * @return {fabric.Ellipse}\n   */\n\n\n  fabric.Ellipse.fromObject = function (object, callback) {\n    return fabric.Object._fromObject('Ellipse', object, callback);\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      extend = fabric.util.object.extend;\n\n  if (fabric.Rect) {\n    fabric.warn('fabric.Rect is already defined');\n    return;\n  }\n  /**\n   * Rectangle class\n   * @class fabric.Rect\n   * @extends fabric.Object\n   * @return {fabric.Rect} thisArg\n   * @see {@link fabric.Rect#initialize} for constructor definition\n   */\n\n\n  fabric.Rect = fabric.util.createClass(fabric.Object,\n  /** @lends fabric.Rect.prototype */\n  {\n    /**\n     * List of properties to consider when checking if state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('rx', 'ry'),\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'rect',\n\n    /**\n     * Horizontal border radius\n     * @type Number\n     * @default\n     */\n    rx: 0,\n\n    /**\n     * Vertical border radius\n     * @type Number\n     * @default\n     */\n    ry: 0,\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('rx', 'ry'),\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function initialize(options) {\n      this.callSuper('initialize', options);\n\n      this._initRxRy();\n    },\n\n    /**\n     * Initializes rx/ry attributes\n     * @private\n     */\n    _initRxRy: function _initRxRy() {\n      if (this.rx && !this.ry) {\n        this.ry = this.rx;\n      } else if (this.ry && !this.rx) {\n        this.rx = this.ry;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function _render(ctx) {\n      // 1x1 case (used in spray brush) optimization was removed because\n      // with caching and higher zoom level this makes more damage than help\n      var rx = this.rx ? Math.min(this.rx, this.width / 2) : 0,\n          ry = this.ry ? Math.min(this.ry, this.height / 2) : 0,\n          w = this.width,\n          h = this.height,\n          x = -this.width / 2,\n          y = -this.height / 2,\n          isRounded = rx !== 0 || ry !== 0,\n\n      /* \"magic number\" for bezier approximations of arcs (http://itc.ktu.lt/itc354/Riskus354.pdf) */\n      k = 1 - 0.5522847498;\n      ctx.beginPath();\n      ctx.moveTo(x + rx, y);\n      ctx.lineTo(x + w - rx, y);\n      isRounded && ctx.bezierCurveTo(x + w - k * rx, y, x + w, y + k * ry, x + w, y + ry);\n      ctx.lineTo(x + w, y + h - ry);\n      isRounded && ctx.bezierCurveTo(x + w, y + h - k * ry, x + w - k * rx, y + h, x + w - rx, y + h);\n      ctx.lineTo(x + rx, y + h);\n      isRounded && ctx.bezierCurveTo(x + k * rx, y + h, x, y + h - k * ry, x, y + h - ry);\n      ctx.lineTo(x, y + ry);\n      isRounded && ctx.bezierCurveTo(x, y + k * ry, x + k * rx, y, x + rx, y);\n      ctx.closePath();\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function _renderDashedStroke(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function toObject(propertiesToInclude) {\n      return this.callSuper('toObject', ['rx', 'ry'].concat(propertiesToInclude));\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function _toSVG() {\n      var x = -this.width / 2,\n          y = -this.height / 2;\n      return ['<rect ', 'COMMON_PARTS', 'x=\"', x, '\" y=\"', y, '\" rx=\"', this.rx, '\" ry=\"', this.ry, '\" width=\"', this.width, '\" height=\"', this.height, '\" />\\n'];\n    }\n    /* _TO_SVG_END_ */\n\n  });\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Rect.fromElement`)\n   * @static\n   * @memberOf fabric.Rect\n   * @see: http://www.w3.org/TR/SVG/shapes.html#RectElement\n   */\n\n  fabric.Rect.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y rx ry width height'.split(' '));\n  /**\n   * Returns {@link fabric.Rect} instance from an SVG element\n   * @static\n   * @memberOf fabric.Rect\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n\n  fabric.Rect.fromElement = function (element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n\n    options = options || {};\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Rect.ATTRIBUTE_NAMES);\n    parsedAttributes.left = parsedAttributes.left || 0;\n    parsedAttributes.top = parsedAttributes.top || 0;\n    parsedAttributes.height = parsedAttributes.height || 0;\n    parsedAttributes.width = parsedAttributes.width || 0;\n    var rect = new fabric.Rect(extend(options ? fabric.util.object.clone(options) : {}, parsedAttributes));\n    rect.visible = rect.visible && rect.width > 0 && rect.height > 0;\n    callback(rect);\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns {@link fabric.Rect} instance from an object representation\n   * @static\n   * @memberOf fabric.Rect\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Rect instance is created\n   */\n\n\n  fabric.Rect.fromObject = function (object, callback) {\n    return fabric.Object._fromObject('Rect', object, callback);\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      extend = fabric.util.object.extend,\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      toFixed = fabric.util.toFixed;\n\n  if (fabric.Polyline) {\n    fabric.warn('fabric.Polyline is already defined');\n    return;\n  }\n  /**\n   * Polyline class\n   * @class fabric.Polyline\n   * @extends fabric.Object\n   * @see {@link fabric.Polyline#initialize} for constructor definition\n   */\n\n\n  fabric.Polyline = fabric.util.createClass(fabric.Object,\n  /** @lends fabric.Polyline.prototype */\n  {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polyline',\n\n    /**\n     * Points array\n     * @type Array\n     * @default\n     */\n    points: null,\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('points'),\n\n    /**\n     * Constructor\n     * @param {Array} points Array of points (where each point is an object with x and y)\n     * @param {Object} [options] Options object\n     * @return {fabric.Polyline} thisArg\n     * @example\n     * var poly = new fabric.Polyline([\n     *     { x: 10, y: 10 },\n     *     { x: 50, y: 30 },\n     *     { x: 40, y: 70 },\n     *     { x: 60, y: 50 },\n     *     { x: 100, y: 150 },\n     *     { x: 40, y: 100 }\n     *   ], {\n     *   stroke: 'red',\n     *   left: 100,\n     *   top: 100\n     * });\n     */\n    initialize: function initialize(points, options) {\n      options = options || {};\n      this.points = points || [];\n      this.callSuper('initialize', options);\n\n      this._setPositionDimensions(options);\n    },\n    _setPositionDimensions: function _setPositionDimensions(options) {\n      var calcDim = this._calcDimensions(options),\n          correctLeftTop;\n\n      this.width = calcDim.width;\n      this.height = calcDim.height;\n\n      if (!options.fromSVG) {\n        correctLeftTop = this.translateToGivenOrigin({\n          x: calcDim.left - this.strokeWidth / 2,\n          y: calcDim.top - this.strokeWidth / 2\n        }, 'left', 'top', this.originX, this.originY);\n      }\n\n      if (typeof options.left === 'undefined') {\n        this.left = options.fromSVG ? calcDim.left : correctLeftTop.x;\n      }\n\n      if (typeof options.top === 'undefined') {\n        this.top = options.fromSVG ? calcDim.top : correctLeftTop.y;\n      }\n\n      this.pathOffset = {\n        x: calcDim.left + this.width / 2,\n        y: calcDim.top + this.height / 2\n      };\n    },\n\n    /**\n     * Calculate the polygon min and max point from points array,\n     * returning an object with left, top, widht, height to measure the\n     * polygon size\n     * @return {Object} object.left X coordinate of the polygon leftmost point\n     * @return {Object} object.top Y coordinate of the polygon topmost point\n     * @return {Object} object.width distance between X coordinates of the polygon leftmost and rightmost point\n     * @return {Object} object.height distance between Y coordinates of the polygon topmost and bottommost point\n     * @private\n     */\n    _calcDimensions: function _calcDimensions() {\n      var points = this.points,\n          minX = min(points, 'x') || 0,\n          minY = min(points, 'y') || 0,\n          maxX = max(points, 'x') || 0,\n          maxY = max(points, 'y') || 0,\n          width = maxX - minX,\n          height = maxY - minY;\n      return {\n        left: minX,\n        top: minY,\n        width: width,\n        height: height\n      };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function toObject(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        points: this.points.concat()\n      });\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function _toSVG() {\n      var points = [],\n          diffX = this.pathOffset.x,\n          diffY = this.pathOffset.y,\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        points.push(toFixed(this.points[i].x - diffX, NUM_FRACTION_DIGITS), ',', toFixed(this.points[i].y - diffY, NUM_FRACTION_DIGITS), ' ');\n      }\n\n      return ['<' + this.type + ' ', 'COMMON_PARTS', 'points=\"', points.join(''), '\" />\\n'];\n    },\n\n    /* _TO_SVG_END_ */\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    commonRender: function commonRender(ctx) {\n      var point,\n          len = this.points.length,\n          x = this.pathOffset.x,\n          y = this.pathOffset.y;\n\n      if (!len || isNaN(this.points[len - 1].y)) {\n        // do not draw if no points or odd points\n        // NaN comes from parseFloat of a empty string in parser\n        return false;\n      }\n\n      ctx.beginPath();\n      ctx.moveTo(this.points[0].x - x, this.points[0].y - y);\n\n      for (var i = 0; i < len; i++) {\n        point = this.points[i];\n        ctx.lineTo(point.x - x, point.y - y);\n      }\n\n      return true;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function _render(ctx) {\n      if (!this.commonRender(ctx)) {\n        return;\n      }\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function _renderDashedStroke(ctx) {\n      var p1, p2;\n      ctx.beginPath();\n\n      for (var i = 0, len = this.points.length; i < len; i++) {\n        p1 = this.points[i];\n        p2 = this.points[i + 1] || p1;\n        fabric.util.drawDashedLine(ctx, p1.x, p1.y, p2.x, p2.y, this.strokeDashArray);\n      }\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity of this instance\n     */\n    complexity: function complexity() {\n      return this.get('points').length;\n    }\n  });\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Polyline.fromElement})\n   * @static\n   * @memberOf fabric.Polyline\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolylineElement\n   */\n\n  fabric.Polyline.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n  /**\n   * Returns fabric.Polyline instance from an SVG element\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {SVGElement} element Element to parser\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n\n  fabric.Polyline.fromElementGenerator = function (_class) {\n    return function (element, callback, options) {\n      if (!element) {\n        return callback(null);\n      }\n\n      options || (options = {});\n      var points = fabric.parsePointsAttribute(element.getAttribute('points')),\n          parsedAttributes = fabric.parseAttributes(element, fabric[_class].ATTRIBUTE_NAMES);\n      parsedAttributes.fromSVG = true;\n      callback(new fabric[_class](points, extend(parsedAttributes, options)));\n    };\n  };\n\n  fabric.Polyline.fromElement = fabric.Polyline.fromElementGenerator('Polyline');\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polyline instance from an object representation\n   * @static\n   * @memberOf fabric.Polyline\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n\n  fabric.Polyline.fromObject = function (object, callback) {\n    return fabric.Object._fromObject('Polyline', object, callback, 'points');\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {});\n\n  if (fabric.Polygon) {\n    fabric.warn('fabric.Polygon is already defined');\n    return;\n  }\n  /**\n   * Polygon class\n   * @class fabric.Polygon\n   * @extends fabric.Polyline\n   * @see {@link fabric.Polygon#initialize} for constructor definition\n   */\n\n\n  fabric.Polygon = fabric.util.createClass(fabric.Polyline,\n  /** @lends fabric.Polygon.prototype */\n  {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'polygon',\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function _render(ctx) {\n      if (!this.commonRender(ctx)) {\n        return;\n      }\n\n      ctx.closePath();\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function _renderDashedStroke(ctx) {\n      this.callSuper('_renderDashedStroke', ctx);\n      ctx.closePath();\n    }\n  });\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Polygon.fromElement`)\n   * @static\n   * @memberOf fabric.Polygon\n   * @see: http://www.w3.org/TR/SVG/shapes.html#PolygonElement\n   */\n\n  fabric.Polygon.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat();\n  /**\n   * Returns {@link fabric.Polygon} instance from an SVG element\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n\n  fabric.Polygon.fromElement = fabric.Polyline.fromElementGenerator('Polygon');\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Polygon instance from an object representation\n   * @static\n   * @memberOf fabric.Polygon\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n\n  fabric.Polygon.fromObject = function (object, callback) {\n    return fabric.Object._fromObject('Polygon', object, callback, 'points');\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      min = fabric.util.array.min,\n      max = fabric.util.array.max,\n      extend = fabric.util.object.extend,\n      _toString = Object.prototype.toString,\n      drawArc = fabric.util.drawArc,\n      toFixed = fabric.util.toFixed,\n      commandLengths = {\n    m: 2,\n    l: 2,\n    h: 1,\n    v: 1,\n    c: 6,\n    s: 4,\n    q: 4,\n    t: 2,\n    a: 7\n  },\n      repeatedCommands = {\n    m: 'l',\n    M: 'L'\n  };\n\n  if (fabric.Path) {\n    fabric.warn('fabric.Path is already defined');\n    return;\n  }\n  /**\n   * Path class\n   * @class fabric.Path\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#path_and_pathgroup}\n   * @see {@link fabric.Path#initialize} for constructor definition\n   */\n\n\n  fabric.Path = fabric.util.createClass(fabric.Object,\n  /** @lends fabric.Path.prototype */\n  {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'path',\n\n    /**\n     * Array of path points\n     * @type Array\n     * @default\n     */\n    path: null,\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('path', 'fillRule'),\n    stateProperties: fabric.Object.prototype.stateProperties.concat('path'),\n\n    /**\n     * Constructor\n     * @param {Array|String} path Path data (sequence of coordinates and corresponding \"command\" tokens)\n     * @param {Object} [options] Options object\n     * @return {fabric.Path} thisArg\n     */\n    initialize: function initialize(path, options) {\n      options = options || {};\n      this.callSuper('initialize', options);\n\n      if (!path) {\n        path = [];\n      }\n\n      var fromArray = _toString.call(path) === '[object Array]';\n      this.path = fromArray ? path // one of commands (m,M,l,L,q,Q,c,C,etc.) followed by non-command characters (i.e. command values)\n      : path.match && path.match(/[mzlhvcsqta][^mzlhvcsqta]*/gi);\n\n      if (!this.path) {\n        return;\n      }\n\n      if (!fromArray) {\n        this.path = this._parsePath();\n      }\n\n      fabric.Polyline.prototype._setPositionDimensions.call(this, options);\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _renderPathCommands: function _renderPathCommands(ctx) {\n      var current,\n          // current instruction\n      previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0,\n          // current x\n      y = 0,\n          // current y\n      controlX = 0,\n          // current control point x\n      controlY = 0,\n          // current control point y\n      tempX,\n          tempY,\n          l = -this.pathOffset.x,\n          t = -this.pathOffset.y;\n      ctx.beginPath();\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n        current = this.path[i];\n\n        switch (current[0]) {\n          // first letter\n          case 'l':\n            // lineto, relative\n            x += current[1];\n            y += current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'L':\n            // lineto, absolute\n            x = current[1];\n            y = current[2];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'h':\n            // horizontal lineto, relative\n            x += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'H':\n            // horizontal lineto, absolute\n            x = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'v':\n            // vertical lineto, relative\n            y += current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'V':\n            // verical lineto, absolute\n            y = current[1];\n            ctx.lineTo(x + l, y + t);\n            break;\n\n          case 'm':\n            // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'M':\n            // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            ctx.moveTo(x + l, y + t);\n            break;\n\n          case 'c':\n            // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            ctx.bezierCurveTo(x + current[1] + l, // x1\n            y + current[2] + t, // y1\n            controlX + l, // x2\n            controlY + t, // y2\n            tempX + l, tempY + t);\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C':\n            // bezierCurveTo, absolute\n            x = current[5];\n            y = current[6];\n            controlX = current[3];\n            controlY = current[4];\n            ctx.bezierCurveTo(current[1] + l, current[2] + t, controlX + l, controlY + t, x + l, y + t);\n            break;\n\n          case 's':\n            // shorthand cubic bezierCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            } else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.bezierCurveTo(controlX + l, controlY + t, x + current[1] + l, y + current[2] + t, tempX + l, tempY + t); // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n\n            controlX = x + current[1];\n            controlY = y + current[2];\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S':\n            // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            } else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.bezierCurveTo(controlX + l, controlY + t, current[1] + l, current[2] + t, tempX + l, tempY + t);\n            x = tempX;\n            y = tempY; // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 'q':\n            // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n            controlX = x + current[1];\n            controlY = y + current[2];\n            ctx.quadraticCurveTo(controlX + l, controlY + t, tempX + l, tempY + t);\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q':\n            // quadraticCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n            ctx.quadraticCurveTo(current[1] + l, current[2] + t, tempX + l, tempY + t);\n            x = tempX;\n            y = tempY;\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 't':\n            // shorthand quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            } else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.quadraticCurveTo(controlX + l, controlY + t, tempX + l, tempY + t);\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            } else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            ctx.quadraticCurveTo(controlX + l, controlY + t, tempX + l, tempY + t);\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [current[1], current[2], current[3], current[4], current[5], current[6] + x + l, current[7] + y + t]);\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            drawArc(ctx, x + l, y + t, [current[1], current[2], current[3], current[4], current[5], current[6] + l, current[7] + t]);\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            ctx.closePath();\n            break;\n        }\n\n        previous = current;\n      }\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx context to render path on\n     */\n    _render: function _render(ctx) {\n      this._renderPathCommands(ctx);\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} string representation of an instance\n     */\n    toString: function toString() {\n      return '#<fabric.Path (' + this.complexity() + '): { \"top\": ' + this.top + ', \"left\": ' + this.left + ' }>';\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function toObject(propertiesToInclude) {\n      return extend(this.callSuper('toObject', propertiesToInclude), {\n        path: this.path.map(function (item) {\n          return item.slice();\n        })\n      });\n    },\n\n    /**\n     * Returns dataless object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function toDatalessObject(propertiesToInclude) {\n      var o = this.toObject(['sourcePath'].concat(propertiesToInclude));\n\n      if (o.sourcePath) {\n        delete o.path;\n      }\n\n      return o;\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function _toSVG() {\n      var path = this.path.map(function (path) {\n        return path.join(' ');\n      }).join(' ');\n      return ['<path ', 'COMMON_PARTS', 'd=\"', path, '\" stroke-linecap=\"round\" ', '/>\\n'];\n    },\n    _getOffsetTransform: function _getOffsetTransform() {\n      var digits = fabric.Object.NUM_FRACTION_DIGITS;\n      return ' translate(' + toFixed(-this.pathOffset.x, digits) + ', ' + toFixed(-this.pathOffset.y, digits) + ')';\n    },\n\n    /**\n     * Returns svg clipPath representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toClipPathSVG: function toClipPathSVG(reviver) {\n      var additionalTransform = this._getOffsetTransform();\n\n      return '\\t' + this._createBaseClipPathSVGMarkup(this._toSVG(), {\n        reviver: reviver,\n        additionalTransform: additionalTransform\n      });\n    },\n\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function toSVG(reviver) {\n      var additionalTransform = this._getOffsetTransform();\n\n      return this._createBaseSVGMarkup(this._toSVG(), {\n        reviver: reviver,\n        additionalTransform: additionalTransform\n      });\n    },\n\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns number representation of an instance complexity\n     * @return {Number} complexity of this instance\n     */\n    complexity: function complexity() {\n      return this.path.length;\n    },\n\n    /**\n     * @private\n     */\n    _parsePath: function _parsePath() {\n      var result = [],\n          coords = [],\n          currentPath,\n          parsed,\n          re = /([-+]?((\\d+\\.\\d+)|((\\d+)|(\\.\\d+)))(?:e[-+]?\\d+)?)/ig,\n          match,\n          coordsStr;\n\n      for (var i = 0, coordsParsed, len = this.path.length; i < len; i++) {\n        currentPath = this.path[i];\n        coordsStr = currentPath.slice(1).trim();\n        coords.length = 0;\n\n        while (match = re.exec(coordsStr)) {\n          coords.push(match[0]);\n        }\n\n        coordsParsed = [currentPath.charAt(0)];\n\n        for (var j = 0, jlen = coords.length; j < jlen; j++) {\n          parsed = parseFloat(coords[j]);\n\n          if (!isNaN(parsed)) {\n            coordsParsed.push(parsed);\n          }\n        }\n\n        var command = coordsParsed[0],\n            commandLength = commandLengths[command.toLowerCase()],\n            repeatedCommand = repeatedCommands[command] || command;\n\n        if (coordsParsed.length - 1 > commandLength) {\n          for (var k = 1, klen = coordsParsed.length; k < klen; k += commandLength) {\n            result.push([command].concat(coordsParsed.slice(k, k + commandLength)));\n            command = repeatedCommand;\n          }\n        } else {\n          result.push(coordsParsed);\n        }\n      }\n\n      return result;\n    },\n\n    /**\n     * @private\n     */\n    _calcDimensions: function _calcDimensions() {\n      var aX = [],\n          aY = [],\n          current,\n          // current instruction\n      previous = null,\n          subpathStartX = 0,\n          subpathStartY = 0,\n          x = 0,\n          // current x\n      y = 0,\n          // current y\n      controlX = 0,\n          // current control point x\n      controlY = 0,\n          // current control point y\n      tempX,\n          tempY,\n          bounds;\n\n      for (var i = 0, len = this.path.length; i < len; ++i) {\n        current = this.path[i];\n\n        switch (current[0]) {\n          // first letter\n          case 'l':\n            // lineto, relative\n            x += current[1];\n            y += current[2];\n            bounds = [];\n            break;\n\n          case 'L':\n            // lineto, absolute\n            x = current[1];\n            y = current[2];\n            bounds = [];\n            break;\n\n          case 'h':\n            // horizontal lineto, relative\n            x += current[1];\n            bounds = [];\n            break;\n\n          case 'H':\n            // horizontal lineto, absolute\n            x = current[1];\n            bounds = [];\n            break;\n\n          case 'v':\n            // vertical lineto, relative\n            y += current[1];\n            bounds = [];\n            break;\n\n          case 'V':\n            // verical lineto, absolute\n            y = current[1];\n            bounds = [];\n            break;\n\n          case 'm':\n            // moveTo, relative\n            x += current[1];\n            y += current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'M':\n            // moveTo, absolute\n            x = current[1];\n            y = current[2];\n            subpathStartX = x;\n            subpathStartY = y;\n            bounds = [];\n            break;\n\n          case 'c':\n            // bezierCurveTo, relative\n            tempX = x + current[5];\n            tempY = y + current[6];\n            controlX = x + current[3];\n            controlY = y + current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y, x + current[1], // x1\n            y + current[2], // y1\n            controlX, // x2\n            controlY, // y2\n            tempX, tempY);\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'C':\n            // bezierCurveTo, absolute\n            controlX = current[3];\n            controlY = current[4];\n            bounds = fabric.util.getBoundsOfCurve(x, y, current[1], current[2], controlX, controlY, current[5], current[6]);\n            x = current[5];\n            y = current[6];\n            break;\n\n          case 's':\n            // shorthand cubic bezierCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            } else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y, controlX, controlY, x + current[1], y + current[2], tempX, tempY); // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n\n            controlX = x + current[1];\n            controlY = y + current[2];\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'S':\n            // shorthand cubic bezierCurveTo, absolute\n            tempX = current[3];\n            tempY = current[4];\n\n            if (previous[0].match(/[CcSs]/) === null) {\n              // If there is no previous command or if the previous command was not a C, c, S, or s,\n              // the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            } else {\n              // calculate reflection of previous control points\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y, controlX, controlY, current[1], current[2], tempX, tempY);\n            x = tempX;\n            y = tempY; // set control point to 2nd one of this command\n            // \"... the first control point is assumed to be\n            // the reflection of the second control point on\n            // the previous command relative to the current point.\"\n\n            controlX = current[1];\n            controlY = current[2];\n            break;\n\n          case 'q':\n            // quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[3];\n            tempY = y + current[4];\n            controlX = x + current[1];\n            controlY = y + current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y, controlX, controlY, controlX, controlY, tempX, tempY);\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'Q':\n            // quadraticCurveTo, absolute\n            controlX = current[1];\n            controlY = current[2];\n            bounds = fabric.util.getBoundsOfCurve(x, y, controlX, controlY, controlX, controlY, current[3], current[4]);\n            x = current[3];\n            y = current[4];\n            break;\n\n          case 't':\n            // shorthand quadraticCurveTo, relative\n            // transform to absolute x,y\n            tempX = x + current[1];\n            tempY = y + current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            } else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y, controlX, controlY, controlX, controlY, tempX, tempY);\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'T':\n            tempX = current[1];\n            tempY = current[2];\n\n            if (previous[0].match(/[QqTt]/) === null) {\n              // If there is no previous command or if the previous command was not a Q, q, T or t,\n              // assume the control point is coincident with the current point\n              controlX = x;\n              controlY = y;\n            } else {\n              // calculate reflection of previous control point\n              controlX = 2 * x - controlX;\n              controlY = 2 * y - controlY;\n            }\n\n            bounds = fabric.util.getBoundsOfCurve(x, y, controlX, controlY, controlX, controlY, tempX, tempY);\n            x = tempX;\n            y = tempY;\n            break;\n\n          case 'a':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y, current[1], current[2], current[3], current[4], current[5], current[6] + x, current[7] + y);\n            x += current[6];\n            y += current[7];\n            break;\n\n          case 'A':\n            // TODO: optimize this\n            bounds = fabric.util.getBoundsOfArc(x, y, current[1], current[2], current[3], current[4], current[5], current[6], current[7]);\n            x = current[6];\n            y = current[7];\n            break;\n\n          case 'z':\n          case 'Z':\n            x = subpathStartX;\n            y = subpathStartY;\n            break;\n        }\n\n        previous = current;\n        bounds.forEach(function (point) {\n          aX.push(point.x);\n          aY.push(point.y);\n        });\n        aX.push(x);\n        aY.push(y);\n      }\n\n      var minX = min(aX) || 0,\n          minY = min(aY) || 0,\n          maxX = max(aX) || 0,\n          maxY = max(aY) || 0,\n          deltaX = maxX - minX,\n          deltaY = maxY - minY;\n      return {\n        left: minX,\n        top: minY,\n        width: deltaX,\n        height: deltaY\n      };\n    }\n  });\n  /**\n   * Creates an instance of fabric.Path from an object\n   * @static\n   * @memberOf fabric.Path\n   * @param {Object} object\n   * @param {Function} [callback] Callback to invoke when an fabric.Path instance is created\n   */\n\n  fabric.Path.fromObject = function (object, callback) {\n    if (typeof object.sourcePath === 'string') {\n      var pathUrl = object.sourcePath;\n      fabric.loadSVGFromURL(pathUrl, function (elements) {\n        var path = elements[0];\n        path.setOptions(object);\n        callback && callback(path);\n      });\n    } else {\n      fabric.Object._fromObject('Path', object, callback, 'path');\n    }\n  };\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by `fabric.Path.fromElement`)\n   * @static\n   * @memberOf fabric.Path\n   * @see http://www.w3.org/TR/SVG/paths.html#PathElement\n   */\n\n\n  fabric.Path.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat(['d']);\n  /**\n   * Creates an instance of fabric.Path from an SVG <path> element\n   * @static\n   * @memberOf fabric.Path\n   * @param {SVGElement} element to parse\n   * @param {Function} callback Callback to invoke when an fabric.Path instance is created\n   * @param {Object} [options] Options object\n   * @param {Function} [callback] Options callback invoked after parsing is finished\n   */\n\n  fabric.Path.fromElement = function (element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Path.ATTRIBUTE_NAMES);\n    parsedAttributes.fromSVG = true;\n    callback(new fabric.Path(parsedAttributes.d, extend(parsedAttributes, options)));\n  };\n  /* _FROM_SVG_END_ */\n\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      min = fabric.util.array.min,\n      max = fabric.util.array.max;\n\n  if (fabric.Group) {\n    return;\n  }\n  /**\n   * Group class\n   * @class fabric.Group\n   * @extends fabric.Object\n   * @mixes fabric.Collection\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.Group#initialize} for constructor definition\n   */\n\n\n  fabric.Group = fabric.util.createClass(fabric.Object, fabric.Collection,\n  /** @lends fabric.Group.prototype */\n  {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'group',\n\n    /**\n     * Width of stroke\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * Indicates if click events should also check for subtargets\n     * @type Boolean\n     * @default\n     */\n    subTargetCheck: false,\n\n    /**\n     * Groups are container, do not render anything on theyr own, ence no cache properties\n     * @type Array\n     * @default\n     */\n    cacheProperties: [],\n\n    /**\n     * setOnGroup is a method used for TextBox that is no more used since 2.0.0 The behavior is still\n     * available setting this boolean to true.\n     * @type Boolean\n     * @since 2.0.0\n     * @default\n     */\n    useSetOnGroup: false,\n\n    /**\n     * Constructor\n     * @param {Object} objects Group objects\n     * @param {Object} [options] Options object\n     * @param {Boolean} [isAlreadyGrouped] if true, objects have been grouped already.\n     * @return {Object} thisArg\n     */\n    initialize: function initialize(objects, options, isAlreadyGrouped) {\n      options = options || {};\n      this._objects = []; // if objects enclosed in a group have been grouped already,\n      // we cannot change properties of objects.\n      // Thus we need to set options to group without objects,\n\n      isAlreadyGrouped && this.callSuper('initialize', options);\n      this._objects = objects || [];\n\n      for (var i = this._objects.length; i--;) {\n        this._objects[i].group = this;\n      }\n\n      if (!isAlreadyGrouped) {\n        var center = options && options.centerPoint; // we want to set origins before calculating the bounding box.\n        // so that the topleft can be set with that in mind.\n        // if specific top and left are passed, are overwritten later\n        // with the callSuper('initialize', options)\n\n        if (options.originX !== undefined) {\n          this.originX = options.originX;\n        }\n\n        if (options.originY !== undefined) {\n          this.originY = options.originY;\n        } // if coming from svg i do not want to calc bounds.\n        // i assume width and height are passed along options\n\n\n        center || this._calcBounds();\n\n        this._updateObjectsCoords(center);\n\n        delete options.centerPoint;\n        this.callSuper('initialize', options);\n      } else {\n        this._updateObjectsACoords();\n      }\n\n      this.setCoords();\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsACoords: function _updateObjectsACoords() {\n      var ignoreZoom = true,\n          skipAbsolute = true;\n\n      for (var i = this._objects.length; i--;) {\n        this._objects[i].setCoords(ignoreZoom, skipAbsolute);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Boolean} [skipCoordsChange] if true, coordinates of objects enclosed in a group do not change\n     */\n    _updateObjectsCoords: function _updateObjectsCoords(center) {\n      var center = center || this.getCenterPoint();\n\n      for (var i = this._objects.length; i--;) {\n        this._updateObjectCoords(this._objects[i], center);\n      }\n    },\n\n    /**\n     * @private\n     * @param {Object} object\n     * @param {fabric.Point} center, current center of group.\n     */\n    _updateObjectCoords: function _updateObjectCoords(object, center) {\n      var objectLeft = object.left,\n          objectTop = object.top,\n          ignoreZoom = true,\n          skipAbsolute = true;\n      object.set({\n        left: objectLeft - center.x,\n        top: objectTop - center.y\n      });\n      object.group = this;\n      object.setCoords(ignoreZoom, skipAbsolute);\n    },\n\n    /**\n     * Returns string represenation of a group\n     * @return {String}\n     */\n    toString: function toString() {\n      return '#<fabric.Group: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * Adds an object to a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    addWithUpdate: function addWithUpdate(object) {\n      this._restoreObjectsState();\n\n      fabric.util.resetObjectTransform(this);\n\n      if (object) {\n        this._objects.push(object);\n\n        object.group = this;\n\n        object._set('canvas', this.canvas);\n      }\n\n      this._calcBounds();\n\n      this._updateObjectsCoords();\n\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * Removes an object from a group; Then recalculates group's dimension, position.\n     * @param {Object} object\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    removeWithUpdate: function removeWithUpdate(object) {\n      this._restoreObjectsState();\n\n      fabric.util.resetObjectTransform(this);\n      this.remove(object);\n\n      this._calcBounds();\n\n      this._updateObjectsCoords();\n\n      this.setCoords();\n      this.dirty = true;\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _onObjectAdded: function _onObjectAdded(object) {\n      this.dirty = true;\n      object.group = this;\n\n      object._set('canvas', this.canvas);\n    },\n\n    /**\n     * @private\n     */\n    _onObjectRemoved: function _onObjectRemoved(object) {\n      this.dirty = true;\n      delete object.group;\n    },\n\n    /**\n     * @private\n     */\n    _set: function _set(key, value) {\n      var i = this._objects.length;\n\n      if (this.useSetOnGroup) {\n        while (i--) {\n          this._objects[i].setOnGroup(key, value);\n        }\n      }\n\n      if (key === 'canvas') {\n        while (i--) {\n          this._objects[i]._set(key, value);\n        }\n      }\n\n      fabric.Object.prototype._set.call(this, key, value);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function toObject(propertiesToInclude) {\n      var _includeDefaultValues = this.includeDefaultValues;\n\n      var objsToObject = this._objects.map(function (obj) {\n        var originalDefaults = obj.includeDefaultValues;\n        obj.includeDefaultValues = _includeDefaultValues;\n\n        var _obj = obj.toObject(propertiesToInclude);\n\n        obj.includeDefaultValues = originalDefaults;\n        return _obj;\n      });\n\n      var obj = fabric.Object.prototype.toObject.call(this, propertiesToInclude);\n      obj.objects = objsToObject;\n      return obj;\n    },\n\n    /**\n     * Returns object representation of an instance, in dataless mode.\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toDatalessObject: function toDatalessObject(propertiesToInclude) {\n      var objsToObject,\n          sourcePath = this.sourcePath;\n\n      if (sourcePath) {\n        objsToObject = sourcePath;\n      } else {\n        var _includeDefaultValues = this.includeDefaultValues;\n        objsToObject = this._objects.map(function (obj) {\n          var originalDefaults = obj.includeDefaultValues;\n          obj.includeDefaultValues = _includeDefaultValues;\n\n          var _obj = obj.toDatalessObject(propertiesToInclude);\n\n          obj.includeDefaultValues = originalDefaults;\n          return _obj;\n        });\n      }\n\n      var obj = fabric.Object.prototype.toDatalessObject.call(this, propertiesToInclude);\n      obj.objects = objsToObject;\n      return obj;\n    },\n\n    /**\n     * Renders instance on a given context\n     * @param {CanvasRenderingContext2D} ctx context to render instance on\n     */\n    render: function render(ctx) {\n      this._transformDone = true;\n      this.callSuper('render', ctx);\n      this._transformDone = false;\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group is already cached.\n     * @return {Boolean}\n     */\n    shouldCache: function shouldCache() {\n      var ownCache = fabric.Object.prototype.shouldCache.call(this);\n\n      if (ownCache) {\n        for (var i = 0, len = this._objects.length; i < len; i++) {\n          if (this._objects[i].willDrawShadow()) {\n            this.ownCaching = false;\n            return false;\n          }\n        }\n      }\n\n      return ownCache;\n    },\n\n    /**\n     * Check if this object or a child object will cast a shadow\n     * @return {Boolean}\n     */\n    willDrawShadow: function willDrawShadow() {\n      if (this.shadow) {\n        return fabric.Object.prototype.willDrawShadow.call(this);\n      }\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].willDrawShadow()) {\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isOnACache: function isOnACache() {\n      return this.ownCaching || this.group && this.group.isOnACache();\n    },\n\n    /**\n     * Execute the drawing operation for an object on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    drawObject: function drawObject(ctx) {\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i].render(ctx);\n      }\n\n      this._drawClipPath(ctx);\n    },\n\n    /**\n     * Check if cache is dirty\n     */\n    isCacheDirty: function isCacheDirty(skipCanvas) {\n      if (this.callSuper('isCacheDirty', skipCanvas)) {\n        return true;\n      }\n\n      if (!this.statefullCache) {\n        return false;\n      }\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        if (this._objects[i].isCacheDirty(true)) {\n          if (this._cacheCanvas) {\n            // if this group has not a cache canvas there is nothing to clean\n            var x = this.cacheWidth / this.zoomX,\n                y = this.cacheHeight / this.zoomY;\n\n            this._cacheContext.clearRect(-x / 2, -y / 2, x, y);\n          }\n\n          return true;\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Retores original state of each of group objects (original state is that which was before group was created).\n     * @private\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    _restoreObjectsState: function _restoreObjectsState() {\n      this._objects.forEach(this._restoreObjectState, this);\n\n      return this;\n    },\n\n    /**\n     * Realises the transform from this group onto the supplied object\n     * i.e. it tells you what would happen if the supplied object was in\n     * the group, and then the group was destroyed. It mutates the supplied\n     * object.\n     * @param {fabric.Object} object\n     * @return {fabric.Object} transformedObject\n     */\n    realizeTransform: function realizeTransform(object) {\n      var matrix = object.calcTransformMatrix(),\n          options = fabric.util.qrDecompose(matrix),\n          center = new fabric.Point(options.translateX, options.translateY);\n      object.flipX = false;\n      object.flipY = false;\n      object.set('scaleX', options.scaleX);\n      object.set('scaleY', options.scaleY);\n      object.skewX = options.skewX;\n      object.skewY = options.skewY;\n      object.angle = options.angle;\n      object.setPositionByOrigin(center, 'center', 'center');\n      return object;\n    },\n\n    /**\n     * Restores original state of a specified object in group\n     * @private\n     * @param {fabric.Object} object\n     * @return {fabric.Group} thisArg\n     */\n    _restoreObjectState: function _restoreObjectState(object) {\n      this.realizeTransform(object);\n      object.setCoords();\n      delete object.group;\n      return this;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    destroy: function destroy() {\n      // when group is destroyed objects needs to get a repaint to be eventually\n      // displayed on canvas.\n      this._objects.forEach(function (object) {\n        object.set('dirty', true);\n      });\n\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * make a group an active selection, remove the group from canvas\n     * the group has to be on canvas for this to work.\n     * @return {fabric.ActiveSelection} thisArg\n     * @chainable\n     */\n    toActiveSelection: function toActiveSelection() {\n      if (!this.canvas) {\n        return;\n      }\n\n      var objects = this._objects,\n          canvas = this.canvas;\n      this._objects = [];\n      var options = this.toObject();\n      delete options.objects;\n      var activeSelection = new fabric.ActiveSelection([]);\n      activeSelection.set(options);\n      activeSelection.type = 'activeSelection';\n      canvas.remove(this);\n      objects.forEach(function (object) {\n        object.group = activeSelection;\n        object.dirty = true;\n        canvas.add(object);\n      });\n      activeSelection.canvas = canvas;\n      activeSelection._objects = objects;\n      canvas._activeObject = activeSelection;\n      activeSelection.setCoords();\n      return activeSelection;\n    },\n\n    /**\n     * Destroys a group (restoring state of its objects)\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    ungroupOnCanvas: function ungroupOnCanvas() {\n      return this._restoreObjectsState();\n    },\n\n    /**\n     * Sets coordinates of all objects inside group\n     * @return {fabric.Group} thisArg\n     * @chainable\n     */\n    setObjectsCoords: function setObjectsCoords() {\n      var ignoreZoom = true,\n          skipAbsolute = true;\n      this.forEachObject(function (object) {\n        object.setCoords(ignoreZoom, skipAbsolute);\n      });\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _calcBounds: function _calcBounds(onlyWidthHeight) {\n      var aX = [],\n          aY = [],\n          o,\n          prop,\n          props = ['tr', 'br', 'bl', 'tl'],\n          i = 0,\n          iLen = this._objects.length,\n          j,\n          jLen = props.length,\n          ignoreZoom = true;\n\n      for (; i < iLen; ++i) {\n        o = this._objects[i];\n        o.setCoords(ignoreZoom);\n\n        for (j = 0; j < jLen; j++) {\n          prop = props[j];\n          aX.push(o.oCoords[prop].x);\n          aY.push(o.oCoords[prop].y);\n        }\n      }\n\n      this._getBounds(aX, aY, onlyWidthHeight);\n    },\n\n    /**\n     * @private\n     */\n    _getBounds: function _getBounds(aX, aY, onlyWidthHeight) {\n      var minXY = new fabric.Point(min(aX), min(aY)),\n          maxXY = new fabric.Point(max(aX), max(aY)),\n          top = minXY.y || 0,\n          left = minXY.x || 0,\n          width = maxXY.x - minXY.x || 0,\n          height = maxXY.y - minXY.y || 0;\n      this.width = width;\n      this.height = height;\n\n      if (!onlyWidthHeight) {\n        // the bounding box always finds the topleft most corner.\n        // whatever is the group origin, we set up here the left/top position.\n        this.setPositionByOrigin({\n          x: left,\n          y: top\n        }, 'left', 'top');\n      }\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function toSVG(reviver) {\n      var svgString = [];\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        svgString.push('\\t', this._objects[i].toSVG(reviver));\n      }\n\n      return this._createBaseSVGMarkup(this._toSVG(), {\n        reviver: reviver,\n        noStyle: true,\n        withShadow: true\n      });\n    },\n\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    _toSVG: function _toSVG(reviver) {\n      var svgString = [];\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        svgString.push('\\t', this._objects[i].toSVG(reviver));\n      }\n\n      return svgString;\n    },\n\n    /**\n     * Returns svg clipPath representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toClipPathSVG: function toClipPathSVG(reviver) {\n      var svgString = [];\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        svgString.push('\\t', this._objects[i].toClipPathSVG(reviver));\n      }\n\n      return this._createBaseClipPathSVGMarkup(svgString, {\n        reviver: reviver\n      });\n    }\n    /* _TO_SVG_END_ */\n\n  });\n  /**\n   * Returns {@link fabric.Group} instance from an object representation\n   * @static\n   * @memberOf fabric.Group\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an group instance is created\n   */\n\n  fabric.Group.fromObject = function (object, callback) {\n    fabric.util.enlivenObjects(object.objects, function (enlivenedObjects) {\n      fabric.util.enlivenObjects([object.clipPath], function (enlivedClipPath) {\n        var options = fabric.util.object.clone(object, true);\n        options.clipPath = enlivedClipPath[0];\n        delete options.objects;\n        callback && callback(new fabric.Group(enlivenedObjects, options, true));\n      });\n    });\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {});\n\n  if (fabric.ActiveSelection) {\n    return;\n  }\n  /**\n   * Group class\n   * @class fabric.ActiveSelection\n   * @extends fabric.Group\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-3#groups}\n   * @see {@link fabric.ActiveSelection#initialize} for constructor definition\n   */\n\n\n  fabric.ActiveSelection = fabric.util.createClass(fabric.Group,\n  /** @lends fabric.ActiveSelection.prototype */\n  {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'activeSelection',\n\n    /**\n     * Constructor\n     * @param {Object} objects ActiveSelection objects\n     * @param {Object} [options] Options object\n     * @return {Object} thisArg\n     */\n    initialize: function initialize(objects, options) {\n      options = options || {};\n      this._objects = objects || [];\n\n      for (var i = this._objects.length; i--;) {\n        this._objects[i].group = this;\n      }\n\n      if (options.originX) {\n        this.originX = options.originX;\n      }\n\n      if (options.originY) {\n        this.originY = options.originY;\n      }\n\n      this._calcBounds();\n\n      this._updateObjectsCoords();\n\n      fabric.Object.prototype.initialize.call(this, options);\n      this.setCoords();\n    },\n\n    /**\n     * Change te activeSelection to a normal group,\n     * High level function that automatically adds it to canvas as\n     * active object. no events fired.\n     * @since 2.0.0\n     * @return {fabric.Group}\n     */\n    toGroup: function toGroup() {\n      var objects = this._objects.concat();\n\n      this._objects = [];\n      var options = fabric.Object.prototype.toObject.call(this);\n      var newGroup = new fabric.Group([]);\n      delete options.type;\n      newGroup.set(options);\n      objects.forEach(function (object) {\n        object.canvas.remove(object);\n        object.group = newGroup;\n      });\n      newGroup._objects = objects;\n\n      if (!this.canvas) {\n        return newGroup;\n      }\n\n      var canvas = this.canvas;\n      canvas.add(newGroup);\n      canvas._activeObject = newGroup;\n      newGroup.setCoords();\n      return newGroup;\n    },\n\n    /**\n     * If returns true, deselection is cancelled.\n     * @since 2.0.0\n     * @return {Boolean} [cancel]\n     */\n    onDeselect: function onDeselect() {\n      this.destroy();\n      return false;\n    },\n\n    /**\n     * Returns string representation of a group\n     * @return {String}\n     */\n    toString: function toString() {\n      return '#<fabric.ActiveSelection: (' + this.complexity() + ')>';\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * objectCaching is a global flag, wins over everything\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * @return {Boolean}\n     */\n    shouldCache: function shouldCache() {\n      return false;\n    },\n\n    /**\n     * Check if this group or its parent group are caching, recursively up\n     * @return {Boolean}\n     */\n    isOnACache: function isOnACache() {\n      return false;\n    },\n\n    /**\n     * Renders controls and borders for the object\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [styleOverride] properties to override the object style\n     * @param {Object} [childrenOverride] properties to override the children overrides\n     */\n    _renderControls: function _renderControls(ctx, styleOverride, childrenOverride) {\n      ctx.save();\n      ctx.globalAlpha = this.isMoving ? this.borderOpacityWhenMoving : 1;\n      this.callSuper('_renderControls', ctx, styleOverride);\n      childrenOverride = childrenOverride || {};\n\n      if (typeof childrenOverride.hasControls === 'undefined') {\n        childrenOverride.hasControls = false;\n      }\n\n      if (typeof childrenOverride.hasRotatingPoint === 'undefined') {\n        childrenOverride.hasRotatingPoint = false;\n      }\n\n      childrenOverride.forActiveSelection = true;\n\n      for (var i = 0, len = this._objects.length; i < len; i++) {\n        this._objects[i]._renderControls(ctx, childrenOverride);\n      }\n\n      ctx.restore();\n    }\n  });\n  /**\n   * Returns {@link fabric.ActiveSelection} instance from an object representation\n   * @static\n   * @memberOf fabric.ActiveSelection\n   * @param {Object} object Object to create a group from\n   * @param {Function} [callback] Callback to invoke when an ActiveSelection instance is created\n   */\n\n  fabric.ActiveSelection.fromObject = function (object, callback) {\n    fabric.util.enlivenObjects(object.objects, function (enlivenedObjects) {\n      delete object.objects;\n      callback && callback(new fabric.ActiveSelection(enlivenedObjects, object, true));\n    });\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var extend = fabric.util.object.extend;\n\n  if (!global.fabric) {\n    global.fabric = {};\n  }\n\n  if (global.fabric.Image) {\n    fabric.warn('fabric.Image is already defined.');\n    return;\n  }\n  /**\n   * Image class\n   * @class fabric.Image\n   * @extends fabric.Object\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-1#images}\n   * @see {@link fabric.Image#initialize} for constructor definition\n   */\n\n\n  fabric.Image = fabric.util.createClass(fabric.Object,\n  /** @lends fabric.Image.prototype */\n  {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'image',\n\n    /**\n     * crossOrigin value (one of \"\", \"anonymous\", \"use-credentials\")\n     * @see https://developer.mozilla.org/en-US/docs/HTML/CORS_settings_attributes\n     * @type String\n     * @default\n     */\n    crossOrigin: '',\n\n    /**\n     * Width of a stroke.\n     * For image quality a stroke multiple of 2 gives better results.\n     * @type Number\n     * @default\n     */\n    strokeWidth: 0,\n\n    /**\n     * When calling {@link fabric.Image.getSrc}, return value from element src with `element.getAttribute('src')`.\n     * This allows for relative urls as image src.\n     * @since 2.7.0\n     * @type Boolean\n     * @default\n     */\n    srcFromAttribute: false,\n\n    /**\n     * private\n     * contains last value of scaleX to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleX: 1,\n\n    /**\n     * private\n     * contains last value of scaleY to detect\n     * if the Image got resized after the last Render\n     * @type Number\n     */\n    _lastScaleY: 1,\n\n    /**\n     * private\n     * contains last value of scaling applied by the apply filter chain\n     * @type Number\n     */\n    _filterScalingX: 1,\n\n    /**\n     * private\n     * contains last value of scaling applied by the apply filter chain\n     * @type Number\n     */\n    _filterScalingY: 1,\n\n    /**\n     * minimum scale factor under which any resizeFilter is triggered to resize the image\n     * 0 will disable the automatic resize. 1 will trigger automatically always.\n     * number bigger than 1 are not implemented yet.\n     * @type Number\n     */\n    minimumScaleTrigger: 0.5,\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('cropX', 'cropY'),\n\n    /**\n     * key used to retrieve the texture representing this image\n     * @since 2.0.0\n     * @type String\n     * @default\n     */\n    cacheKey: '',\n\n    /**\n     * Image crop in pixels from original image size.\n     * @since 2.0.0\n     * @type Number\n     * @default\n     */\n    cropX: 0,\n\n    /**\n     * Image crop in pixels from original image size.\n     * @since 2.0.0\n     * @type Number\n     * @default\n     */\n    cropY: 0,\n\n    /**\n     * Constructor\n     * @param {HTMLImageElement | String} element Image element\n     * @param {Object} [options] Options object\n     * @param {function} [callback] callback function to call after eventual filters applied.\n     * @return {fabric.Image} thisArg\n     */\n    initialize: function initialize(element, options) {\n      options || (options = {});\n      this.filters = [];\n      this.cacheKey = 'texture' + fabric.Object.__uid++;\n      this.callSuper('initialize', options);\n\n      this._initElement(element, options);\n    },\n\n    /**\n     * Returns image element which this instance if based on\n     * @return {HTMLImageElement} Image element\n     */\n    getElement: function getElement() {\n      return this._element || {};\n    },\n\n    /**\n     * Sets image element for this instance to a specified one.\n     * If filters defined they are applied to new image.\n     * You might need to call `canvas.renderAll` and `object.setCoords` after replacing, to render new image and update controls area.\n     * @param {HTMLImageElement} element\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setElement: function setElement(element, options) {\n      this.removeTexture(this.cacheKey);\n      this.removeTexture(this.cacheKey + '_filtered');\n      this._element = element;\n      this._originalElement = element;\n\n      this._initConfig(options);\n\n      if (this.filters.length !== 0) {\n        this.applyFilters();\n      } // resizeFilters work on the already filtered copy.\n      // we need to apply resizeFilters AFTER normal filters.\n      // applyResizeFilters is run more often than normal fiters\n      // and is triggered by user interactions rather than dev code\n\n\n      if (this.resizeFilter) {\n        this.applyResizeFilters();\n      }\n\n      return this;\n    },\n\n    /**\n     * Delete a single texture if in webgl mode\n     */\n    removeTexture: function removeTexture(key) {\n      var backend = fabric.filterBackend;\n\n      if (backend && backend.evictCachesForKey) {\n        backend.evictCachesForKey(key);\n      }\n    },\n\n    /**\n     * Delete textures, reference to elements and eventually JSDOM cleanup\n     */\n    dispose: function dispose() {\n      this.removeTexture(this.cacheKey);\n      this.removeTexture(this.cacheKey + '_filtered');\n      this._cacheContext = undefined;\n      ['_originalElement', '_element', '_filteredEl', '_cacheCanvas'].forEach(function (element) {\n        fabric.util.cleanUpJsdomNode(this[element]);\n        this[element] = undefined;\n      }.bind(this));\n    },\n\n    /**\n     * Sets crossOrigin value (on an instance and corresponding image element)\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setCrossOrigin: function setCrossOrigin(value) {\n      this.crossOrigin = value;\n      this._element.crossOrigin = value;\n      return this;\n    },\n\n    /**\n     * Returns original size of an image\n     * @return {Object} Object with \"width\" and \"height\" properties\n     */\n    getOriginalSize: function getOriginalSize() {\n      var element = this.getElement();\n      return {\n        width: element.naturalWidth || element.width,\n        height: element.naturalHeight || element.height\n      };\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _stroke: function _stroke(ctx) {\n      if (!this.stroke || this.strokeWidth === 0) {\n        return;\n      }\n\n      var w = this.width / 2,\n          h = this.height / 2;\n      ctx.beginPath();\n      ctx.moveTo(-w, -h);\n      ctx.lineTo(w, -h);\n      ctx.lineTo(w, h);\n      ctx.lineTo(-w, h);\n      ctx.lineTo(-w, -h);\n      ctx.closePath();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderDashedStroke: function _renderDashedStroke(ctx) {\n      var x = -this.width / 2,\n          y = -this.height / 2,\n          w = this.width,\n          h = this.height;\n      ctx.save();\n\n      this._setStrokeStyles(ctx, this);\n\n      ctx.beginPath();\n      fabric.util.drawDashedLine(ctx, x, y, x + w, y, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y, x + w, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x + w, y + h, x, y + h, this.strokeDashArray);\n      fabric.util.drawDashedLine(ctx, x, y + h, x, y, this.strokeDashArray);\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function toObject(propertiesToInclude) {\n      var filters = [];\n      this.filters.forEach(function (filterObj) {\n        if (filterObj) {\n          filters.push(filterObj.toObject());\n        }\n      });\n      var object = extend(this.callSuper('toObject', ['crossOrigin', 'cropX', 'cropY'].concat(propertiesToInclude)), {\n        src: this.getSrc(),\n        filters: filters\n      });\n\n      if (this.resizeFilter) {\n        object.resizeFilter = this.resizeFilter.toObject();\n      }\n\n      return object;\n    },\n\n    /**\n     * Returns true if an image has crop applied, inspecting values of cropX,cropY,width,hight.\n     * @return {Boolean}\n     */\n    hasCrop: function hasCrop() {\n      return this.cropX || this.cropY || this.width < this._element.width || this.height < this._element.height;\n    },\n\n    /* _TO_SVG_START_ */\n\n    /**\n     * Returns svg representation of an instance\n     * @return {Array} an array of strings with the specific svg representation\n     * of the instance\n     */\n    _toSVG: function _toSVG() {\n      var svgString = [],\n          imageMarkup = [],\n          strokeSvg,\n          x = -this.width / 2,\n          y = -this.height / 2,\n          clipPath = '';\n\n      if (this.hasCrop()) {\n        var clipPathId = fabric.Object.__uid++;\n        svgString.push('<clipPath id=\"imageCrop_' + clipPathId + '\">\\n', '\\t<rect x=\"' + x + '\" y=\"' + y + '\" width=\"' + this.width + '\" height=\"' + this.height + '\" />\\n', '</clipPath>\\n');\n        clipPath = ' clip-path=\"url(#imageCrop_' + clipPathId + ')\" ';\n      }\n\n      imageMarkup.push('\\t<image ', 'COMMON_PARTS', 'xlink:href=\"', this.getSvgSrc(true), '\" x=\"', x - this.cropX, '\" y=\"', y - this.cropY, // we're essentially moving origin of transformation from top/left corner to the center of the shape\n      // by wrapping it in container <g> element with actual transformation, then offsetting object to the top/left\n      // so that object's center aligns with container's left/top\n      '\" width=\"', this._element.width || this._element.naturalWidth, '\" height=\"', this._element.height || this._element.height, '\"', clipPath, '></image>\\n');\n\n      if (this.stroke || this.strokeDashArray) {\n        var origFill = this.fill;\n        this.fill = null;\n        strokeSvg = ['\\t<rect ', 'x=\"', x, '\" y=\"', y, '\" width=\"', this.width, '\" height=\"', this.height, '\" style=\"', this.getSvgStyles(), '\"/>\\n'];\n        this.fill = origFill;\n      }\n\n      if (this.paintFirst !== 'fill') {\n        svgString = svgString.concat(strokeSvg, imageMarkup);\n      } else {\n        svgString = svgString.concat(imageMarkup, strokeSvg);\n      }\n\n      return svgString;\n    },\n\n    /* _TO_SVG_END_ */\n\n    /**\n     * Returns source of an image\n     * @param {Boolean} filtered indicates if the src is needed for svg\n     * @return {String} Source of an image\n     */\n    getSrc: function getSrc(filtered) {\n      var element = filtered ? this._element : this._originalElement;\n\n      if (element) {\n        if (element.toDataURL) {\n          return element.toDataURL();\n        }\n\n        if (this.srcFromAttribute) {\n          return element.getAttribute('src');\n        } else {\n          return element.src;\n        }\n      } else {\n        return this.src || '';\n      }\n    },\n\n    /**\n     * Sets source of an image\n     * @param {String} src Source string (URL)\n     * @param {Function} [callback] Callback is invoked when image has been loaded (and all filters have been applied)\n     * @param {Object} [options] Options object\n     * @return {fabric.Image} thisArg\n     * @chainable\n     */\n    setSrc: function setSrc(src, callback, options) {\n      fabric.util.loadImage(src, function (img) {\n        this.setElement(img, options);\n\n        this._setWidthHeight();\n\n        callback && callback(this);\n      }, this, options && options.crossOrigin);\n      return this;\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of an instance\n     */\n    toString: function toString() {\n      return '#<fabric.Image: { src: \"' + this.getSrc() + '\" }>';\n    },\n    applyResizeFilters: function applyResizeFilters() {\n      var filter = this.resizeFilter,\n          minimumScale = this.minimumScaleTrigger,\n          objectScale = this.getTotalObjectScaling(),\n          scaleX = objectScale.scaleX,\n          scaleY = objectScale.scaleY,\n          elementToFilter = this._filteredEl || this._originalElement;\n\n      if (this.group) {\n        this.set('dirty', true);\n      }\n\n      if (!filter || scaleX > minimumScale && scaleY > minimumScale) {\n        this._element = elementToFilter;\n        this._filterScalingX = 1;\n        this._filterScalingY = 1;\n        this._lastScaleX = scaleX;\n        this._lastScaleY = scaleY;\n        return;\n      }\n\n      if (!fabric.filterBackend) {\n        fabric.filterBackend = fabric.initFilterBackend();\n      }\n\n      var canvasEl = fabric.util.createCanvasElement(),\n          cacheKey = this._filteredEl ? this.cacheKey + '_filtered' : this.cacheKey,\n          sourceWidth = elementToFilter.width,\n          sourceHeight = elementToFilter.height;\n      canvasEl.width = sourceWidth;\n      canvasEl.height = sourceHeight;\n      this._element = canvasEl;\n      this._lastScaleX = filter.scaleX = scaleX;\n      this._lastScaleY = filter.scaleY = scaleY;\n      fabric.filterBackend.applyFilters([filter], elementToFilter, sourceWidth, sourceHeight, this._element, cacheKey);\n      this._filterScalingX = canvasEl.width / this._originalElement.width;\n      this._filterScalingY = canvasEl.height / this._originalElement.height;\n    },\n\n    /**\n     * Applies filters assigned to this image (from \"filters\" array) or from filter param\n     * @method applyFilters\n     * @param {Array} filters to be applied\n     * @param {Boolean} forResizing specify if the filter operation is a resize operation\n     * @return {thisArg} return the fabric.Image object\n     * @chainable\n     */\n    applyFilters: function applyFilters(filters) {\n      filters = filters || this.filters || [];\n      filters = filters.filter(function (filter) {\n        return filter && !filter.isNeutralState();\n      });\n      this.set('dirty', true); // needs to clear out or WEBGL will not resize correctly\n\n      this.removeTexture(this.cacheKey + '_filtered');\n\n      if (filters.length === 0) {\n        this._element = this._originalElement;\n        this._filteredEl = null;\n        this._filterScalingX = 1;\n        this._filterScalingY = 1;\n        return this;\n      }\n\n      var imgElement = this._originalElement,\n          sourceWidth = imgElement.naturalWidth || imgElement.width,\n          sourceHeight = imgElement.naturalHeight || imgElement.height;\n\n      if (this._element === this._originalElement) {\n        // if the element is the same we need to create a new element\n        var canvasEl = fabric.util.createCanvasElement();\n        canvasEl.width = sourceWidth;\n        canvasEl.height = sourceHeight;\n        this._element = canvasEl;\n        this._filteredEl = canvasEl;\n      } else {\n        // clear the existing element to get new filter data\n        // also dereference the eventual resized _element\n        this._element = this._filteredEl;\n\n        this._filteredEl.getContext('2d').clearRect(0, 0, sourceWidth, sourceHeight); // we also need to resize again at next renderAll, so remove saved _lastScaleX/Y\n\n\n        this._lastScaleX = 1;\n        this._lastScaleY = 1;\n      }\n\n      if (!fabric.filterBackend) {\n        fabric.filterBackend = fabric.initFilterBackend();\n      }\n\n      fabric.filterBackend.applyFilters(filters, this._originalElement, sourceWidth, sourceHeight, this._element, this.cacheKey);\n\n      if (this._originalElement.width !== this._element.width || this._originalElement.height !== this._element.height) {\n        this._filterScalingX = this._element.width / this._originalElement.width;\n        this._filterScalingY = this._element.height / this._originalElement.height;\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function _render(ctx) {\n      if (this.isMoving !== true && this.resizeFilter && this._needsResize()) {\n        this.applyResizeFilters();\n      }\n\n      this._stroke(ctx);\n\n      this._renderPaintInOrder(ctx);\n    },\n\n    /**\n     * Decide if the object should cache or not. Create its own cache level\n     * needsItsOwnCache should be used when the object drawing method requires\n     * a cache step. None of the fabric classes requires it.\n     * Generally you do not cache objects in groups because the group outside is cached.\n     * This is the special image version where we would like to avoid caching where possible.\n     * Essentially images do not benefit from caching. They may require caching, and in that\n     * case we do it. Also caching an image usually ends in a loss of details.\n     * A full performance audit should be done.\n     * @return {Boolean}\n     */\n    shouldCache: function shouldCache() {\n      return this.needsItsOwnCache();\n    },\n    _renderFill: function _renderFill(ctx) {\n      var elementToDraw = this._element,\n          w = this.width,\n          h = this.height,\n          sW = Math.min(elementToDraw.naturalWidth || elementToDraw.width, w * this._filterScalingX),\n          sH = Math.min(elementToDraw.naturalHeight || elementToDraw.height, h * this._filterScalingY),\n          x = -w / 2,\n          y = -h / 2,\n          sX = Math.max(0, this.cropX * this._filterScalingX),\n          sY = Math.max(0, this.cropY * this._filterScalingY);\n      elementToDraw && ctx.drawImage(elementToDraw, sX, sY, sW, sH, x, y, w, h);\n    },\n\n    /**\n     * @private, needed to check if image needs resize\n     */\n    _needsResize: function _needsResize() {\n      var scale = this.getTotalObjectScaling();\n      return scale.scaleX !== this._lastScaleX || scale.scaleY !== this._lastScaleY;\n    },\n\n    /**\n     * @private\n     */\n    _resetWidthHeight: function _resetWidthHeight() {\n      this.set(this.getOriginalSize());\n    },\n\n    /**\n     * The Image class's initialization method. This method is automatically\n     * called by the constructor.\n     * @private\n     * @param {HTMLImageElement|String} element The element representing the image\n     * @param {Object} [options] Options object\n     */\n    _initElement: function _initElement(element, options) {\n      this.setElement(fabric.util.getById(element), options);\n      fabric.util.addClass(this.getElement(), fabric.Image.CSS_CANVAS);\n    },\n\n    /**\n     * @private\n     * @param {Object} [options] Options object\n     */\n    _initConfig: function _initConfig(options) {\n      options || (options = {});\n      this.setOptions(options);\n\n      this._setWidthHeight(options);\n\n      if (this._element && this.crossOrigin) {\n        this._element.crossOrigin = this.crossOrigin;\n      }\n    },\n\n    /**\n     * @private\n     * @param {Array} filters to be initialized\n     * @param {Function} callback Callback to invoke when all fabric.Image.filters instances are created\n     */\n    _initFilters: function _initFilters(filters, callback) {\n      if (filters && filters.length) {\n        fabric.util.enlivenObjects(filters, function (enlivenedObjects) {\n          callback && callback(enlivenedObjects);\n        }, 'fabric.Image.filters');\n      } else {\n        callback && callback();\n      }\n    },\n\n    /**\n     * @private\n     * Set the width and the height of the image object, using the element or the\n     * options.\n     * @param {Object} [options] Object with width/height properties\n     */\n    _setWidthHeight: function _setWidthHeight(options) {\n      options || (options = {});\n      var el = this.getElement();\n      this.width = options.width || el.naturalWidth || el.width || 0;\n      this.height = options.height || el.naturalHeight || el.height || 0;\n    },\n\n    /**\n     * Calculate offset for center and scale factor for the image in order to respect\n     * the preserveAspectRatio attribute\n     * @private\n     * @return {Object}\n     */\n    parsePreserveAspectRatioAttribute: function parsePreserveAspectRatioAttribute() {\n      var pAR = fabric.util.parsePreserveAspectRatioAttribute(this.preserveAspectRatio || ''),\n          rWidth = this._element.width,\n          rHeight = this._element.height,\n          scaleX = 1,\n          scaleY = 1,\n          offsetLeft = 0,\n          offsetTop = 0,\n          cropX = 0,\n          cropY = 0,\n          offset,\n          pWidth = this.width,\n          pHeight = this.height,\n          parsedAttributes = {\n        width: pWidth,\n        height: pHeight\n      };\n\n      if (pAR && (pAR.alignX !== 'none' || pAR.alignY !== 'none')) {\n        if (pAR.meetOrSlice === 'meet') {\n          scaleX = scaleY = fabric.util.findScaleToFit(this._element, parsedAttributes);\n          offset = (pWidth - rWidth * scaleX) / 2;\n\n          if (pAR.alignX === 'Min') {\n            offsetLeft = -offset;\n          }\n\n          if (pAR.alignX === 'Max') {\n            offsetLeft = offset;\n          }\n\n          offset = (pHeight - rHeight * scaleY) / 2;\n\n          if (pAR.alignY === 'Min') {\n            offsetTop = -offset;\n          }\n\n          if (pAR.alignY === 'Max') {\n            offsetTop = offset;\n          }\n        }\n\n        if (pAR.meetOrSlice === 'slice') {\n          scaleX = scaleY = fabric.util.findScaleToCover(this._element, parsedAttributes);\n          offset = rWidth - pWidth / scaleX;\n\n          if (pAR.alignX === 'Mid') {\n            cropX = offset / 2;\n          }\n\n          if (pAR.alignX === 'Max') {\n            cropX = offset;\n          }\n\n          offset = rHeight - pHeight / scaleY;\n\n          if (pAR.alignY === 'Mid') {\n            cropY = offset / 2;\n          }\n\n          if (pAR.alignY === 'Max') {\n            cropY = offset;\n          }\n\n          rWidth = pWidth / scaleX;\n          rHeight = pHeight / scaleY;\n        }\n      } else {\n        scaleX = pWidth / rWidth;\n        scaleY = pHeight / rHeight;\n      }\n\n      return {\n        width: rWidth,\n        height: rHeight,\n        scaleX: scaleX,\n        scaleY: scaleY,\n        offsetLeft: offsetLeft,\n        offsetTop: offsetTop,\n        cropX: cropX,\n        cropY: cropY\n      };\n    }\n  });\n  /**\n   * Default CSS class name for canvas\n   * @static\n   * @type String\n   * @default\n   */\n\n  fabric.Image.CSS_CANVAS = 'canvas-img';\n  /**\n   * Alias for getSrc\n   * @static\n   */\n\n  fabric.Image.prototype.getSvgSrc = fabric.Image.prototype.getSrc;\n  /**\n   * Creates an instance of fabric.Image from its object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} callback Callback to invoke when an image instance is created\n   */\n\n  fabric.Image.fromObject = function (_object, callback) {\n    var object = fabric.util.object.clone(_object);\n    fabric.util.loadImage(object.src, function (img, error) {\n      if (error) {\n        callback && callback(null, error);\n        return;\n      }\n\n      fabric.Image.prototype._initFilters.call(object, object.filters, function (filters) {\n        object.filters = filters || [];\n\n        fabric.Image.prototype._initFilters.call(object, [object.resizeFilter], function (resizeFilters) {\n          object.resizeFilter = resizeFilters[0];\n          fabric.util.enlivenObjects([object.clipPath], function (enlivedProps) {\n            object.clipPath = enlivedProps[0];\n            var image = new fabric.Image(img, object);\n            callback(image);\n          });\n        });\n      });\n    }, null, object.crossOrigin);\n  };\n  /**\n   * Creates an instance of fabric.Image from an URL string\n   * @static\n   * @param {String} url URL to create an image from\n   * @param {Function} [callback] Callback to invoke when image is created (newly created image is passed as a first argument)\n   * @param {Object} [imgOptions] Options object\n   */\n\n\n  fabric.Image.fromURL = function (url, callback, imgOptions) {\n    fabric.util.loadImage(url, function (img) {\n      callback && callback(new fabric.Image(img, imgOptions));\n    }, null, imgOptions && imgOptions.crossOrigin);\n  };\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Image.fromElement})\n   * @static\n   * @see {@link http://www.w3.org/TR/SVG/struct.html#ImageElement}\n   */\n\n\n  fabric.Image.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y width height preserveAspectRatio xlink:href crossOrigin'.split(' '));\n  /**\n   * Returns {@link fabric.Image} instance from an SVG element\n   * @static\n   * @param {SVGElement} element Element to parse\n   * @param {Object} [options] Options object\n   * @param {Function} callback Callback to execute when fabric.Image object is created\n   * @return {fabric.Image} Instance of fabric.Image\n   */\n\n  fabric.Image.fromElement = function (element, callback, options) {\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Image.ATTRIBUTE_NAMES);\n    fabric.Image.fromURL(parsedAttributes['xlink:href'], callback, extend(options ? fabric.util.object.clone(options) : {}, parsedAttributes));\n  };\n  /* _FROM_SVG_END_ */\n\n})(typeof exports !== 'undefined' ? exports : this);\n\nfabric.util.object.extend(fabric.Object.prototype,\n/** @lends fabric.Object.prototype */\n{\n  /**\n   * @private\n   * @return {Number} angle value\n   */\n  _getAngleValueForStraighten: function _getAngleValueForStraighten() {\n    var angle = this.angle % 360;\n\n    if (angle > 0) {\n      return Math.round((angle - 1) / 90) * 90;\n    }\n\n    return Math.round(angle / 90) * 90;\n  },\n\n  /**\n   * Straightens an object (rotating it from current angle to one of 0, 90, 180, 270, etc. depending on which is closer)\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  straighten: function straighten() {\n    this.rotate(this._getAngleValueForStraighten());\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Object.prototype.straighten} but with animation\n   * @param {Object} callbacks Object with callback functions\n   * @param {Function} [callbacks.onComplete] Invoked on completion\n   * @param {Function} [callbacks.onChange] Invoked on every step of animation\n   * @return {fabric.Object} thisArg\n   * @chainable\n   */\n  fxStraighten: function fxStraighten(callbacks) {\n    callbacks = callbacks || {};\n\n    var empty = function empty() {},\n        _onComplete4 = callbacks.onComplete || empty,\n        _onChange4 = callbacks.onChange || empty,\n        _this = this;\n\n    fabric.util.animate({\n      startValue: this.get('angle'),\n      endValue: this._getAngleValueForStraighten(),\n      duration: this.FX_DURATION,\n      onChange: function onChange(value) {\n        _this.rotate(value);\n\n        _onChange4();\n      },\n      onComplete: function onComplete() {\n        _this.setCoords();\n\n        _onComplete4();\n      }\n    });\n    return this;\n  }\n});\nfabric.util.object.extend(fabric.StaticCanvas.prototype,\n/** @lends fabric.StaticCanvas.prototype */\n{\n  /**\n   * Straightens object, then rerenders canvas\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  straightenObject: function straightenObject(object) {\n    object.straighten();\n    this.requestRenderAll();\n    return this;\n  },\n\n  /**\n   * Same as {@link fabric.Canvas.prototype.straightenObject}, but animated\n   * @param {fabric.Object} object Object to straighten\n   * @return {fabric.Canvas} thisArg\n   * @chainable\n   */\n  fxStraightenObject: function fxStraightenObject(object) {\n    object.fxStraighten({\n      onChange: this.requestRenderAllBound\n    });\n    return this;\n  }\n});\n\n(function () {\n  'use strict';\n  /**\n   * Tests if webgl supports certain precision\n   * @param {WebGL} Canvas WebGL context to test on\n   * @param {String} Precision to test can be any of following: 'lowp', 'mediump', 'highp'\n   * @returns {Boolean} Whether the user's browser WebGL supports given precision.\n   */\n\n  function testPrecision(gl, precision) {\n    var fragmentSource = 'precision ' + precision + ' float;\\nvoid main(){}';\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      return false;\n    }\n\n    return true;\n  }\n  /**\n   * Indicate whether this filtering backend is supported by the user's browser.\n   * @param {Number} tileSize check if the tileSize is supported\n   * @returns {Boolean} Whether the user's browser supports WebGL.\n   */\n\n\n  fabric.isWebglSupported = function (tileSize) {\n    if (fabric.isLikelyNode) {\n      return false;\n    }\n\n    tileSize = tileSize || fabric.WebglFilterBackend.prototype.tileSize;\n    var canvas = document.createElement('canvas');\n    var gl = canvas.getContext('webgl') || canvas.getContext('experimental-webgl');\n    var isSupported = false; // eslint-disable-next-line\n\n    if (gl) {\n      fabric.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n      isSupported = fabric.maxTextureSize >= tileSize;\n      var precisions = ['highp', 'mediump', 'lowp'];\n\n      for (var i = 0; i < 3; i++) {\n        if (testPrecision(gl, precisions[i])) {\n          fabric.webGlPrecision = precisions[i];\n          break;\n        }\n\n        ;\n      }\n    }\n\n    this.isSupported = isSupported;\n    return isSupported;\n  };\n\n  fabric.WebglFilterBackend = WebglFilterBackend;\n  /**\n   * WebGL filter backend.\n   */\n\n  function WebglFilterBackend(options) {\n    if (options && options.tileSize) {\n      this.tileSize = options.tileSize;\n    }\n\n    this.setupGLContext(this.tileSize, this.tileSize);\n    this.captureGPUInfo();\n  }\n\n  ;\n  WebglFilterBackend.prototype =\n  /** @lends fabric.WebglFilterBackend.prototype */\n  {\n    tileSize: 2048,\n\n    /**\n     * Experimental. This object is a sort of repository of help layers used to avoid\n     * of recreating them during frequent filtering. If you are previewing a filter with\n     * a slider you problably do not want to create help layers every filter step.\n     * in this object there will be appended some canvases, created once, resized sometimes\n     * cleared never. Clearing is left to the developer.\n     **/\n    resources: {},\n\n    /**\n     * Setup a WebGL context suitable for filtering, and bind any needed event handlers.\n     */\n    setupGLContext: function setupGLContext(width, height) {\n      this.dispose();\n      this.createWebGLCanvas(width, height); // eslint-disable-next-line\n\n      this.aPosition = new Float32Array([0, 0, 0, 1, 1, 0, 1, 1]);\n      this.chooseFastestCopyGLTo2DMethod(width, height);\n    },\n\n    /**\n     * Pick a method to copy data from GL context to 2d canvas.  In some browsers using\n     * putImageData is faster than drawImage for that specific operation.\n     */\n    chooseFastestCopyGLTo2DMethod: function chooseFastestCopyGLTo2DMethod(width, height) {\n      var canMeasurePerf = typeof window.performance !== 'undefined',\n          canUseImageData;\n\n      try {\n        new ImageData(1, 1);\n        canUseImageData = true;\n      } catch (e) {\n        canUseImageData = false;\n      } // eslint-disable-next-line no-undef\n\n\n      var canUseArrayBuffer = typeof ArrayBuffer !== 'undefined'; // eslint-disable-next-line no-undef\n\n      var canUseUint8Clamped = typeof Uint8ClampedArray !== 'undefined';\n\n      if (!(canMeasurePerf && canUseImageData && canUseArrayBuffer && canUseUint8Clamped)) {\n        return;\n      }\n\n      var targetCanvas = fabric.util.createCanvasElement(); // eslint-disable-next-line no-undef\n\n      var imageBuffer = new ArrayBuffer(width * height * 4);\n\n      if (fabric.forceGLPutImageData) {\n        this.imageBuffer = imageBuffer;\n        this.copyGLTo2D = copyGLTo2DPutImageData;\n        return;\n      }\n\n      var testContext = {\n        imageBuffer: imageBuffer,\n        destinationWidth: width,\n        destinationHeight: height,\n        targetCanvas: targetCanvas\n      };\n      var startTime, drawImageTime, putImageDataTime;\n      targetCanvas.width = width;\n      targetCanvas.height = height;\n      startTime = window.performance.now();\n      copyGLTo2DDrawImage.call(testContext, this.gl, testContext);\n      drawImageTime = window.performance.now() - startTime;\n      startTime = window.performance.now();\n      copyGLTo2DPutImageData.call(testContext, this.gl, testContext);\n      putImageDataTime = window.performance.now() - startTime;\n\n      if (drawImageTime > putImageDataTime) {\n        this.imageBuffer = imageBuffer;\n        this.copyGLTo2D = copyGLTo2DPutImageData;\n      } else {\n        this.copyGLTo2D = copyGLTo2DDrawImage;\n      }\n    },\n\n    /**\n     * Create a canvas element and associated WebGL context and attaches them as\n     * class properties to the GLFilterBackend class.\n     */\n    createWebGLCanvas: function createWebGLCanvas(width, height) {\n      var canvas = fabric.util.createCanvasElement();\n      canvas.width = width;\n      canvas.height = height;\n      var glOptions = {\n        alpha: true,\n        premultipliedAlpha: false,\n        depth: false,\n        stencil: false,\n        antialias: false\n      },\n          gl = canvas.getContext('webgl', glOptions);\n\n      if (!gl) {\n        gl = canvas.getContext('experimental-webgl', glOptions);\n      }\n\n      if (!gl) {\n        return;\n      }\n\n      gl.clearColor(0, 0, 0, 0); // this canvas can fire webglcontextlost and webglcontextrestored\n\n      this.canvas = canvas;\n      this.gl = gl;\n    },\n\n    /**\n     * Attempts to apply the requested filters to the source provided, drawing the filtered output\n     * to the provided target canvas.\n     *\n     * @param {Array} filters The filters to apply.\n     * @param {HTMLImageElement|HTMLCanvasElement} source The source to be filtered.\n     * @param {Number} width The width of the source input.\n     * @param {Number} height The height of the source input.\n     * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n     * @param {String|undefined} cacheKey A key used to cache resources related to the source. If\n     * omitted, caching will be skipped.\n     */\n    applyFilters: function applyFilters(filters, source, width, height, targetCanvas, cacheKey) {\n      var gl = this.gl;\n      var cachedTexture;\n\n      if (cacheKey) {\n        cachedTexture = this.getCachedTexture(cacheKey, source);\n      }\n\n      var pipelineState = {\n        originalWidth: source.width || source.originalWidth,\n        originalHeight: source.height || source.originalHeight,\n        sourceWidth: width,\n        sourceHeight: height,\n        destinationWidth: width,\n        destinationHeight: height,\n        context: gl,\n        sourceTexture: this.createTexture(gl, width, height, !cachedTexture && source),\n        targetTexture: this.createTexture(gl, width, height),\n        originalTexture: cachedTexture || this.createTexture(gl, width, height, !cachedTexture && source),\n        passes: filters.length,\n        webgl: true,\n        aPosition: this.aPosition,\n        programCache: this.programCache,\n        pass: 0,\n        filterBackend: this,\n        targetCanvas: targetCanvas\n      };\n      var tempFbo = gl.createFramebuffer();\n      gl.bindFramebuffer(gl.FRAMEBUFFER, tempFbo);\n      filters.forEach(function (filter) {\n        filter && filter.applyTo(pipelineState);\n      });\n      resizeCanvasIfNeeded(pipelineState);\n      this.copyGLTo2D(gl, pipelineState);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n      gl.deleteTexture(pipelineState.sourceTexture);\n      gl.deleteTexture(pipelineState.targetTexture);\n      gl.deleteFramebuffer(tempFbo);\n      targetCanvas.getContext('2d').setTransform(1, 0, 0, 1, 0, 0);\n      return pipelineState;\n    },\n\n    /**\n     * Detach event listeners, remove references, and clean up caches.\n     */\n    dispose: function dispose() {\n      if (this.canvas) {\n        this.canvas = null;\n        this.gl = null;\n      }\n\n      this.clearWebGLCaches();\n    },\n\n    /**\n     * Wipe out WebGL-related caches.\n     */\n    clearWebGLCaches: function clearWebGLCaches() {\n      this.programCache = {};\n      this.textureCache = {};\n    },\n\n    /**\n     * Create a WebGL texture object.\n     *\n     * Accepts specific dimensions to initialize the textuer to or a source image.\n     *\n     * @param {WebGLRenderingContext} gl The GL context to use for creating the texture.\n     * @param {Number} width The width to initialize the texture at.\n     * @param {Number} height The height to initialize the texture.\n     * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source for the texture data.\n     * @returns {WebGLTexture}\n     */\n    createTexture: function createTexture(gl, width, height, textureImageSource) {\n      var texture = gl.createTexture();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n\n      if (textureImageSource) {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, textureImageSource);\n      } else {\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, null);\n      }\n\n      return texture;\n    },\n\n    /**\n     * Can be optionally used to get a texture from the cache array\n     *\n     * If an existing texture is not found, a new texture is created and cached.\n     *\n     * @param {String} uniqueId A cache key to use to find an existing texture.\n     * @param {HTMLImageElement|HTMLCanvasElement} textureImageSource A source to use to create the\n     * texture cache entry if one does not already exist.\n     */\n    getCachedTexture: function getCachedTexture(uniqueId, textureImageSource) {\n      if (this.textureCache[uniqueId]) {\n        return this.textureCache[uniqueId];\n      } else {\n        var texture = this.createTexture(this.gl, textureImageSource.width, textureImageSource.height, textureImageSource);\n        this.textureCache[uniqueId] = texture;\n        return texture;\n      }\n    },\n\n    /**\n     * Clear out cached resources related to a source image that has been\n     * filtered previously.\n     *\n     * @param {String} cacheKey The cache key provided when the source image was filtered.\n     */\n    evictCachesForKey: function evictCachesForKey(cacheKey) {\n      if (this.textureCache[cacheKey]) {\n        this.gl.deleteTexture(this.textureCache[cacheKey]);\n        delete this.textureCache[cacheKey];\n      }\n    },\n    copyGLTo2D: copyGLTo2DDrawImage,\n\n    /**\n     * Attempt to extract GPU information strings from a WebGL context.\n     *\n     * Useful information when debugging or blacklisting specific GPUs.\n     *\n     * @returns {Object} A GPU info object with renderer and vendor strings.\n     */\n    captureGPUInfo: function captureGPUInfo() {\n      if (this.gpuInfo) {\n        return this.gpuInfo;\n      }\n\n      var gl = this.gl,\n          gpuInfo = {\n        renderer: '',\n        vendor: ''\n      };\n\n      if (!gl) {\n        return gpuInfo;\n      }\n\n      var ext = gl.getExtension('WEBGL_debug_renderer_info');\n\n      if (ext) {\n        var renderer = gl.getParameter(ext.UNMASKED_RENDERER_WEBGL);\n        var vendor = gl.getParameter(ext.UNMASKED_VENDOR_WEBGL);\n\n        if (renderer) {\n          gpuInfo.renderer = renderer.toLowerCase();\n        }\n\n        if (vendor) {\n          gpuInfo.vendor = vendor.toLowerCase();\n        }\n      }\n\n      this.gpuInfo = gpuInfo;\n      return gpuInfo;\n    }\n  };\n})();\n\nfunction resizeCanvasIfNeeded(pipelineState) {\n  var targetCanvas = pipelineState.targetCanvas,\n      width = targetCanvas.width,\n      height = targetCanvas.height,\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight;\n\n  if (width !== dWidth || height !== dHeight) {\n    targetCanvas.width = dWidth;\n    targetCanvas.height = dHeight;\n  }\n}\n/**\n * Copy an input WebGL canvas on to an output 2D canvas.\n *\n * The WebGL canvas is assumed to be upside down, with the top-left pixel of the\n * desired output image appearing in the bottom-left corner of the WebGL canvas.\n *\n * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n * @param {Object} pipelineState The 2D target canvas to copy on to.\n */\n\n\nfunction copyGLTo2DDrawImage(gl, pipelineState) {\n  var glCanvas = gl.canvas,\n      targetCanvas = pipelineState.targetCanvas,\n      ctx = targetCanvas.getContext('2d');\n  ctx.translate(0, targetCanvas.height); // move it down again\n\n  ctx.scale(1, -1); // vertical flip\n  // where is my image on the big glcanvas?\n\n  var sourceY = glCanvas.height - targetCanvas.height;\n  ctx.drawImage(glCanvas, 0, sourceY, targetCanvas.width, targetCanvas.height, 0, 0, targetCanvas.width, targetCanvas.height);\n}\n/**\n * Copy an input WebGL canvas on to an output 2D canvas using 2d canvas' putImageData\n * API. Measurably faster than using ctx.drawImage in Firefox (version 54 on OSX Sierra).\n *\n * @param {WebGLRenderingContext} sourceContext The WebGL context to copy from.\n * @param {HTMLCanvasElement} targetCanvas The 2D target canvas to copy on to.\n * @param {Object} pipelineState The 2D target canvas to copy on to.\n */\n\n\nfunction copyGLTo2DPutImageData(gl, pipelineState) {\n  var targetCanvas = pipelineState.targetCanvas,\n      ctx = targetCanvas.getContext('2d'),\n      dWidth = pipelineState.destinationWidth,\n      dHeight = pipelineState.destinationHeight,\n      numBytes = dWidth * dHeight * 4; // eslint-disable-next-line no-undef\n\n  var u8 = new Uint8Array(this.imageBuffer, 0, numBytes); // eslint-disable-next-line no-undef\n\n  var u8Clamped = new Uint8ClampedArray(this.imageBuffer, 0, numBytes);\n  gl.readPixels(0, 0, dWidth, dHeight, gl.RGBA, gl.UNSIGNED_BYTE, u8);\n  var imgData = new ImageData(u8Clamped, dWidth, dHeight);\n  ctx.putImageData(imgData, 0, 0);\n}\n\n(function () {\n  'use strict';\n\n  var noop = function noop() {};\n\n  fabric.Canvas2dFilterBackend = Canvas2dFilterBackend;\n  /**\n   * Canvas 2D filter backend.\n   */\n\n  function Canvas2dFilterBackend() {}\n\n  ;\n  Canvas2dFilterBackend.prototype =\n  /** @lends fabric.Canvas2dFilterBackend.prototype */\n  {\n    evictCachesForKey: noop,\n    dispose: noop,\n    clearWebGLCaches: noop,\n\n    /**\n     * Experimental. This object is a sort of repository of help layers used to avoid\n     * of recreating them during frequent filtering. If you are previewing a filter with\n     * a slider you probably do not want to create help layers every filter step.\n     * in this object there will be appended some canvases, created once, resized sometimes\n     * cleared never. Clearing is left to the developer.\n     **/\n    resources: {},\n\n    /**\n     * Apply a set of filters against a source image and draw the filtered output\n     * to the provided destination canvas.\n     *\n     * @param {EnhancedFilter} filters The filter to apply.\n     * @param {HTMLImageElement|HTMLCanvasElement} sourceElement The source to be filtered.\n     * @param {Number} sourceWidth The width of the source input.\n     * @param {Number} sourceHeight The height of the source input.\n     * @param {HTMLCanvasElement} targetCanvas The destination for filtered output to be drawn.\n     */\n    applyFilters: function applyFilters(filters, sourceElement, sourceWidth, sourceHeight, targetCanvas) {\n      var ctx = targetCanvas.getContext('2d');\n      ctx.drawImage(sourceElement, 0, 0, sourceWidth, sourceHeight);\n      var imageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n      var originalImageData = ctx.getImageData(0, 0, sourceWidth, sourceHeight);\n      var pipelineState = {\n        sourceWidth: sourceWidth,\n        sourceHeight: sourceHeight,\n        imageData: imageData,\n        originalEl: sourceElement,\n        originalImageData: originalImageData,\n        canvasEl: targetCanvas,\n        ctx: ctx,\n        filterBackend: this\n      };\n      filters.forEach(function (filter) {\n        filter.applyTo(pipelineState);\n      });\n\n      if (pipelineState.imageData.width !== sourceWidth || pipelineState.imageData.height !== sourceHeight) {\n        targetCanvas.width = pipelineState.imageData.width;\n        targetCanvas.height = pipelineState.imageData.height;\n      }\n\n      ctx.putImageData(pipelineState.imageData, 0, 0);\n      return pipelineState;\n    }\n  };\n})();\n/**\n * @namespace fabric.Image.filters\n * @memberOf fabric.Image\n * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#image_filters}\n * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n */\n\n\nfabric.Image = fabric.Image || {};\nfabric.Image.filters = fabric.Image.filters || {};\n/**\n * Root filter class from which all filter classes inherit from\n * @class fabric.Image.filters.BaseFilter\n * @memberOf fabric.Image.filters\n */\n\nfabric.Image.filters.BaseFilter = fabric.util.createClass(\n/** @lends fabric.Image.filters.BaseFilter.prototype */\n{\n  /**\n   * Filter type\n   * @param {String} type\n   * @default\n   */\n  type: 'BaseFilter',\n\n  /**\n   * Array of attributes to send with buffers. do not modify\n   * @private\n   */\n  vertexSource: 'attribute vec2 aPosition;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vTexCoord = aPosition;\\n' + 'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' + '}',\n  fragmentSource: 'precision highp float;\\n' + 'varying vec2 vTexCoord;\\n' + 'uniform sampler2D uTexture;\\n' + 'void main() {\\n' + 'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' + '}',\n\n  /**\n   * Constructor\n   * @param {Object} [options] Options object\n   */\n  initialize: function initialize(options) {\n    if (options) {\n      this.setOptions(options);\n    }\n  },\n\n  /**\n   * Sets filter's properties from options\n   * @param {Object} [options] Options object\n   */\n  setOptions: function setOptions(options) {\n    for (var prop in options) {\n      this[prop] = options[prop];\n    }\n  },\n\n  /**\n   * Compile this filter's shader program.\n   *\n   * @param {WebGLRenderingContext} gl The GL canvas context to use for shader compilation.\n   * @param {String} fragmentSource fragmentShader source for compilation\n   * @param {String} vertexSource vertexShader source for compilation\n   */\n  createProgram: function createProgram(gl, fragmentSource, vertexSource) {\n    fragmentSource = fragmentSource || this.fragmentSource;\n    vertexSource = vertexSource || this.vertexSource;\n\n    if (fabric.webGlPrecision !== 'highp') {\n      fragmentSource = fragmentSource.replace(/precision highp float/g, 'precision ' + fabric.webGlPrecision + ' float');\n    }\n\n    var vertexShader = gl.createShader(gl.VERTEX_SHADER);\n    gl.shaderSource(vertexShader, vertexSource);\n    gl.compileShader(vertexShader);\n\n    if (!gl.getShaderParameter(vertexShader, gl.COMPILE_STATUS)) {\n      throw new Error( // eslint-disable-next-line prefer-template\n      'Vertex shader compile error for ' + this.type + ': ' + gl.getShaderInfoLog(vertexShader));\n    }\n\n    var fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n    gl.shaderSource(fragmentShader, fragmentSource);\n    gl.compileShader(fragmentShader);\n\n    if (!gl.getShaderParameter(fragmentShader, gl.COMPILE_STATUS)) {\n      throw new Error( // eslint-disable-next-line prefer-template\n      'Fragment shader compile error for ' + this.type + ': ' + gl.getShaderInfoLog(fragmentShader));\n    }\n\n    var program = gl.createProgram();\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n\n    if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      throw new Error( // eslint-disable-next-line prefer-template\n      'Shader link error for \"${this.type}\" ' + gl.getProgramInfoLog(program));\n    }\n\n    var attributeLocations = this.getAttributeLocations(gl, program);\n    var uniformLocations = this.getUniformLocations(gl, program) || {};\n    uniformLocations.uStepW = gl.getUniformLocation(program, 'uStepW');\n    uniformLocations.uStepH = gl.getUniformLocation(program, 'uStepH');\n    return {\n      program: program,\n      attributeLocations: attributeLocations,\n      uniformLocations: uniformLocations\n    };\n  },\n\n  /**\n   * Return a map of attribute names to WebGLAttributeLocation objects.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take attribute locations.\n   * @returns {Object} A map of attribute names to attribute locations.\n   */\n  getAttributeLocations: function getAttributeLocations(gl, program) {\n    return {\n      aPosition: gl.getAttribLocation(program, 'aPosition')\n    };\n  },\n\n  /**\n   * Return a map of uniform names to WebGLUniformLocation objects.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {WebGLShaderProgram} program The shader program from which to take uniform locations.\n   * @returns {Object} A map of uniform names to uniform locations.\n   */\n  getUniformLocations: function getUniformLocations()\n  /* gl, program */\n  {\n    // in case i do not need any special uniform i need to return an empty object\n    return {};\n  },\n\n  /**\n   * Send attribute data from this filter to its shader program on the GPU.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} attributeLocations A map of shader attribute names to their locations.\n   */\n  sendAttributeData: function sendAttributeData(gl, attributeLocations, aPositionData) {\n    var attributeLocation = attributeLocations.aPosition;\n    var buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.enableVertexAttribArray(attributeLocation);\n    gl.vertexAttribPointer(attributeLocation, 2, gl.FLOAT, false, 0, 0);\n    gl.bufferData(gl.ARRAY_BUFFER, aPositionData, gl.STATIC_DRAW);\n  },\n  _setupFrameBuffer: function _setupFrameBuffer(options) {\n    var gl = options.context,\n        width,\n        height;\n\n    if (options.passes > 1) {\n      width = options.destinationWidth;\n      height = options.destinationHeight;\n\n      if (options.sourceWidth !== width || options.sourceHeight !== height) {\n        gl.deleteTexture(options.targetTexture);\n        options.targetTexture = options.filterBackend.createTexture(gl, width, height);\n      }\n\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, options.targetTexture, 0);\n    } else {\n      // draw last filter on canvas and not to framebuffer.\n      gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n      gl.finish();\n    }\n  },\n  _swapTextures: function _swapTextures(options) {\n    options.passes--;\n    options.pass++;\n    var temp = options.targetTexture;\n    options.targetTexture = options.sourceTexture;\n    options.sourceTexture = temp;\n  },\n\n  /**\n   * Generic isNeutral implementation for one parameter based filters.\n   * Used only in image applyFilters to discard filters that will not have an effect\n   * on the image\n   * Other filters may need their own verison ( ColorMatrix, HueRotation, gamma, ComposedFilter )\n   * @param {Object} options\n   **/\n  isNeutralState: function isNeutralState()\n  /* options */\n  {\n    var main = this.mainParameter,\n        _class = fabric.Image.filters[this.type].prototype;\n\n    if (main) {\n      if (Array.isArray(_class[main])) {\n        for (var i = _class[main].length; i--;) {\n          if (this[main][i] !== _class[main][i]) {\n            return false;\n          }\n        }\n\n        return true;\n      } else {\n        return _class[main] === this[main];\n      }\n    } else {\n      return false;\n    }\n  },\n\n  /**\n   * Apply this filter to the input image data provided.\n   *\n   * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyTo: function applyTo(options) {\n    if (options.webgl) {\n      this._setupFrameBuffer(options);\n\n      this.applyToWebGL(options);\n\n      this._swapTextures(options);\n    } else {\n      this.applyTo2d(options);\n    }\n  },\n\n  /**\n   * Retrieves the cached shader.\n   * @param {Object} options\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  retrieveShader: function retrieveShader(options) {\n    if (!options.programCache.hasOwnProperty(this.type)) {\n      options.programCache[this.type] = this.createProgram(options.context);\n    }\n\n    return options.programCache[this.type];\n  },\n\n  /**\n   * Apply this filter using webgl.\n   *\n   * @param {Object} options\n   * @param {Number} options.passes The number of filters remaining to be executed\n   * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n   * @param {WebGLTexture} options.originalTexture The texture of the original input image.\n   * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n   * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n   * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n   * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n   */\n  applyToWebGL: function applyToWebGL(options) {\n    var gl = options.context;\n    var shader = this.retrieveShader(options);\n\n    if (options.pass === 0 && options.originalTexture) {\n      gl.bindTexture(gl.TEXTURE_2D, options.originalTexture);\n    } else {\n      gl.bindTexture(gl.TEXTURE_2D, options.sourceTexture);\n    }\n\n    gl.useProgram(shader.program);\n    this.sendAttributeData(gl, shader.attributeLocations, options.aPosition);\n    gl.uniform1f(shader.uniformLocations.uStepW, 1 / options.sourceWidth);\n    gl.uniform1f(shader.uniformLocations.uStepH, 1 / options.sourceHeight);\n    this.sendUniformData(gl, shader.uniformLocations);\n    gl.viewport(0, 0, options.destinationWidth, options.destinationHeight);\n    gl.drawArrays(gl.TRIANGLE_STRIP, 0, 4);\n  },\n  bindAdditionalTexture: function bindAdditionalTexture(gl, texture, textureUnit) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, texture); // reset active texture to 0 as usual\n\n    gl.activeTexture(gl.TEXTURE0);\n  },\n  unbindAdditionalTexture: function unbindAdditionalTexture(gl, textureUnit) {\n    gl.activeTexture(textureUnit);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.activeTexture(gl.TEXTURE0);\n  },\n  getMainParameter: function getMainParameter() {\n    return this[this.mainParameter];\n  },\n  setMainParameter: function setMainParameter(value) {\n    this[this.mainParameter] = value;\n  },\n\n  /**\n   * Send uniform data from this filter to its shader program on the GPU.\n   *\n   * Intended to be overridden by subclasses.\n   *\n   * @param {WebGLRenderingContext} gl The canvas context used to compile the shader program.\n   * @param {Object} uniformLocations A map of shader uniform names to their locations.\n   */\n  sendUniformData: function sendUniformData()\n  /* gl, uniformLocations */\n  {// Intentionally left blank.  Override me in subclasses.\n  },\n\n  /**\n   * If needed by a 2d filter, this functions can create an helper canvas to be used\n   * remember that options.targetCanvas is available for use till end of chain.\n   */\n  createHelpLayer: function createHelpLayer(options) {\n    if (!options.helpLayer) {\n      var helpLayer = document.createElement('canvas');\n      helpLayer.width = options.sourceWidth;\n      helpLayer.height = options.sourceHeight;\n      options.helpLayer = helpLayer;\n    }\n  },\n\n  /**\n   * Returns object representation of an instance\n   * @return {Object} Object representation of an instance\n   */\n  toObject: function toObject() {\n    var object = {\n      type: this.type\n    },\n        mainP = this.mainParameter;\n\n    if (mainP) {\n      object[mainP] = this[mainP];\n    }\n\n    return object;\n  },\n\n  /**\n   * Returns a JSON representation of an instance\n   * @return {Object} JSON\n   */\n  toJSON: function toJSON() {\n    // delegate, not alias\n    return this.toObject();\n  }\n});\n\nfabric.Image.filters.BaseFilter.fromObject = function (object, callback) {\n  var filter = new fabric.Image.filters[object.type](object);\n  callback && callback(filter);\n  return filter;\n};\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Color Matrix filter class\n   * @class fabric.Image.filters.ColorMatrix\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.ColorMatrix#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @see {@Link http://www.webwasp.co.uk/tutorials/219/Color_Matrix_Filter.php}\n   * @see {@Link http://phoboslab.org/log/2013/11/fast-image-filters-with-webgl}\n   * @example <caption>Kodachrome filter</caption>\n   * var filter = new fabric.Image.filters.ColorMatrix({\n   *  matrix: [\n       1.1285582396593525, -0.3967382283601348, -0.03992559172921793, 0, 63.72958762196502,\n       -0.16404339962244616, 1.0835251566291304, -0.05498805115633132, 0, 24.732407896706203,\n       -0.16786010706155763, -0.5603416277695248, 1.6014850761964943, 0, 35.62982807460946,\n       0, 0, 0, 1, 0\n      ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n\n  filters.ColorMatrix = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.ColorMatrix.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'ColorMatrix',\n    fragmentSource: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'varying vec2 vTexCoord;\\n' + 'uniform mat4 uColorMatrix;\\n' + 'uniform vec4 uConstants;\\n' + 'void main() {\\n' + 'vec4 color = texture2D(uTexture, vTexCoord);\\n' + 'color *= uColorMatrix;\\n' + 'color += uConstants;\\n' + 'gl_FragColor = color;\\n' + '}',\n\n    /**\n     * Colormatrix for pixels.\n     * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n     * outside the -1, 1 range.\n     * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n     * @param {Array} matrix array of 20 numbers.\n     * @default\n     */\n    matrix: [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0],\n    mainParameter: 'matrix',\n\n    /**\n     * Lock the colormatrix on the color part, skipping alpha, manly for non webgl scenario\n     * to save some calculation\n     */\n    colorsOnly: true,\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function initialize(options) {\n      this.callSuper('initialize', options); // create a new array instead mutating the prototype with push\n\n      this.matrix = this.matrix.slice(0);\n    },\n\n    /**\n     * Apply the ColorMatrix operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function applyTo2d(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          iLen = data.length,\n          m = this.matrix,\n          r,\n          g,\n          b,\n          a,\n          i,\n          colorsOnly = this.colorsOnly;\n\n      for (i = 0; i < iLen; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        if (colorsOnly) {\n          data[i] = r * m[0] + g * m[1] + b * m[2] + m[4] * 255;\n          data[i + 1] = r * m[5] + g * m[6] + b * m[7] + m[9] * 255;\n          data[i + 2] = r * m[10] + g * m[11] + b * m[12] + m[14] * 255;\n        } else {\n          a = data[i + 3];\n          data[i] = r * m[0] + g * m[1] + b * m[2] + a * m[3] + m[4] * 255;\n          data[i + 1] = r * m[5] + g * m[6] + b * m[7] + a * m[8] + m[9] * 255;\n          data[i + 2] = r * m[10] + g * m[11] + b * m[12] + a * m[13] + m[14] * 255;\n          data[i + 3] = r * m[15] + g * m[16] + b * m[17] + a * m[18] + m[19] * 255;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function getUniformLocations(gl, program) {\n      return {\n        uColorMatrix: gl.getUniformLocation(program, 'uColorMatrix'),\n        uConstants: gl.getUniformLocation(program, 'uConstants')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function sendUniformData(gl, uniformLocations) {\n      var m = this.matrix,\n          matrix = [m[0], m[1], m[2], m[3], m[5], m[6], m[7], m[8], m[10], m[11], m[12], m[13], m[15], m[16], m[17], m[18]],\n          constants = [m[4], m[9], m[14], m[19]];\n      gl.uniformMatrix4fv(uniformLocations.uColorMatrix, false, matrix);\n      gl.uniform4fv(uniformLocations.uConstants, constants);\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] function to invoke after filter creation\n   * @return {fabric.Image.filters.ColorMatrix} Instance of fabric.Image.filters.ColorMatrix\n   */\n\n  fabric.Image.filters.ColorMatrix.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Brightness filter class\n   * @class fabric.Image.filters.Brightness\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Brightness#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Brightness({\n   *   brightness: 0.05\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n\n  filters.Brightness = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Brightness.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Brightness',\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uBrightness;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = texture2D(uTexture, vTexCoord);\\n' + 'color.rgb += uBrightness;\\n' + 'gl_FragColor = color;\\n' + '}',\n\n    /**\n     * Brightness value, from -1 to 1.\n     * translated to -255 to 255 for 2d\n     * 0.0039215686 is the part of 1 that get translated to 1 in 2d\n     * @param {Number} brightness\n     * @default\n     */\n    brightness: 0,\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'brightness',\n\n    /**\n    * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n    *\n    * @param {Object} options\n    * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n    */\n    applyTo2d: function applyTo2d(options) {\n      if (this.brightness === 0) {\n        return;\n      }\n\n      var imageData = options.imageData,\n          data = imageData.data,\n          i,\n          len = data.length,\n          brightness = Math.round(this.brightness * 255);\n\n      for (i = 0; i < len; i += 4) {\n        data[i] = data[i] + brightness;\n        data[i + 1] = data[i + 1] + brightness;\n        data[i + 2] = data[i + 2] + brightness;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function getUniformLocations(gl, program) {\n      return {\n        uBrightness: gl.getUniformLocation(program, 'uBrightness')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function sendUniformData(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uBrightness, this.brightness);\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Brightness} Instance of fabric.Image.filters.Brightness\n   */\n\n  fabric.Image.filters.Brightness.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Adapted from <a href=\"http://www.html5rocks.com/en/tutorials/canvas/imagefilters/\">html5rocks article</a>\n   * @class fabric.Image.filters.Convolute\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Convolute#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example <caption>Sharpen filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 0, -1,  0,\n   *            -1,  5, -1,\n   *             0, -1,  0 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Blur filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9,\n   *             1/9, 1/9, 1/9 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Emboss filter</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   * @example <caption>Emboss filter with opaqueness</caption>\n   * var filter = new fabric.Image.filters.Convolute({\n   *   opaque: true,\n   *   matrix: [ 1,   1,  1,\n   *             1, 0.7, -1,\n   *            -1,  -1, -1 ]\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.Convolute = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Convolute.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Convolute',\n\n    /*\n     * Opaque value (true/false)\n     */\n    opaque: false,\n\n    /*\n     * matrix for the filter, max 9x9\n     */\n    matrix: [0, 0, 0, 0, 1, 0, 0, 0, 0],\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: {\n      Convolute_3_1: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uMatrix[9];\\n' + 'uniform float uStepW;\\n' + 'uniform float uStepH;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = vec4(0, 0, 0, 0);\\n' + 'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' + 'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' + 'vec2 matrixPos = vec2(uStepW * (w - 1), uStepH * (h - 1));\\n' + 'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 3.0 + w)];\\n' + '}\\n' + '}\\n' + 'gl_FragColor = color;\\n' + '}',\n      Convolute_3_0: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uMatrix[9];\\n' + 'uniform float uStepW;\\n' + 'uniform float uStepH;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = vec4(0, 0, 0, 1);\\n' + 'for (float h = 0.0; h < 3.0; h+=1.0) {\\n' + 'for (float w = 0.0; w < 3.0; w+=1.0) {\\n' + 'vec2 matrixPos = vec2(uStepW * (w - 1.0), uStepH * (h - 1.0));\\n' + 'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 3.0 + w)];\\n' + '}\\n' + '}\\n' + 'float alpha = texture2D(uTexture, vTexCoord).a;\\n' + 'gl_FragColor = color;\\n' + 'gl_FragColor.a = alpha;\\n' + '}',\n      Convolute_5_1: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uMatrix[25];\\n' + 'uniform float uStepW;\\n' + 'uniform float uStepH;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = vec4(0, 0, 0, 0);\\n' + 'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' + 'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' + 'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' + 'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 5.0 + w)];\\n' + '}\\n' + '}\\n' + 'gl_FragColor = color;\\n' + '}',\n      Convolute_5_0: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uMatrix[25];\\n' + 'uniform float uStepW;\\n' + 'uniform float uStepH;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = vec4(0, 0, 0, 1);\\n' + 'for (float h = 0.0; h < 5.0; h+=1.0) {\\n' + 'for (float w = 0.0; w < 5.0; w+=1.0) {\\n' + 'vec2 matrixPos = vec2(uStepW * (w - 2.0), uStepH * (h - 2.0));\\n' + 'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 5.0 + w)];\\n' + '}\\n' + '}\\n' + 'float alpha = texture2D(uTexture, vTexCoord).a;\\n' + 'gl_FragColor = color;\\n' + 'gl_FragColor.a = alpha;\\n' + '}',\n      Convolute_7_1: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uMatrix[49];\\n' + 'uniform float uStepW;\\n' + 'uniform float uStepH;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = vec4(0, 0, 0, 0);\\n' + 'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' + 'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' + 'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' + 'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 7.0 + w)];\\n' + '}\\n' + '}\\n' + 'gl_FragColor = color;\\n' + '}',\n      Convolute_7_0: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uMatrix[49];\\n' + 'uniform float uStepW;\\n' + 'uniform float uStepH;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = vec4(0, 0, 0, 1);\\n' + 'for (float h = 0.0; h < 7.0; h+=1.0) {\\n' + 'for (float w = 0.0; w < 7.0; w+=1.0) {\\n' + 'vec2 matrixPos = vec2(uStepW * (w - 3.0), uStepH * (h - 3.0));\\n' + 'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 7.0 + w)];\\n' + '}\\n' + '}\\n' + 'float alpha = texture2D(uTexture, vTexCoord).a;\\n' + 'gl_FragColor = color;\\n' + 'gl_FragColor.a = alpha;\\n' + '}',\n      Convolute_9_1: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uMatrix[81];\\n' + 'uniform float uStepW;\\n' + 'uniform float uStepH;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = vec4(0, 0, 0, 0);\\n' + 'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' + 'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' + 'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' + 'color += texture2D(uTexture, vTexCoord + matrixPos) * uMatrix[int(h * 9.0 + w)];\\n' + '}\\n' + '}\\n' + 'gl_FragColor = color;\\n' + '}',\n      Convolute_9_0: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uMatrix[81];\\n' + 'uniform float uStepW;\\n' + 'uniform float uStepH;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = vec4(0, 0, 0, 1);\\n' + 'for (float h = 0.0; h < 9.0; h+=1.0) {\\n' + 'for (float w = 0.0; w < 9.0; w+=1.0) {\\n' + 'vec2 matrixPos = vec2(uStepW * (w - 4.0), uStepH * (h - 4.0));\\n' + 'color.rgb += texture2D(uTexture, vTexCoord + matrixPos).rgb * uMatrix[int(h * 9.0 + w)];\\n' + '}\\n' + '}\\n' + 'float alpha = texture2D(uTexture, vTexCoord).a;\\n' + 'gl_FragColor = color;\\n' + 'gl_FragColor.a = alpha;\\n' + '}'\n    },\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Convolute.prototype\n     * @param {Object} [options] Options object\n     * @param {Boolean} [options.opaque=false] Opaque value (true/false)\n     * @param {Array} [options.matrix] Filter matrix\n     */\n\n    /**\n    * Retrieves the cached shader.\n    * @param {Object} options\n    * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n    * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n    */\n    retrieveShader: function retrieveShader(options) {\n      var size = Math.sqrt(this.matrix.length);\n      var cacheKey = this.type + '_' + size + '_' + (this.opaque ? 1 : 0);\n      var shaderSource = this.fragmentSource[cacheKey];\n\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function applyTo2d(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          weights = this.matrix,\n          side = Math.round(Math.sqrt(weights.length)),\n          halfSide = Math.floor(side / 2),\n          sw = imageData.width,\n          sh = imageData.height,\n          output = options.ctx.createImageData(sw, sh),\n          dst = output.data,\n          // go through the destination image pixels\n      alphaFac = this.opaque ? 1 : 0,\n          r,\n          g,\n          b,\n          a,\n          dstOff,\n          scx,\n          scy,\n          srcOff,\n          wt,\n          x,\n          y,\n          cx,\n          cy;\n\n      for (y = 0; y < sh; y++) {\n        for (x = 0; x < sw; x++) {\n          dstOff = (y * sw + x) * 4; // calculate the weighed sum of the source image pixels that\n          // fall under the convolution matrix\n\n          r = 0;\n          g = 0;\n          b = 0;\n          a = 0;\n\n          for (cy = 0; cy < side; cy++) {\n            for (cx = 0; cx < side; cx++) {\n              scy = y + cy - halfSide;\n              scx = x + cx - halfSide; // eslint-disable-next-line max-depth\n\n              if (scy < 0 || scy > sh || scx < 0 || scx > sw) {\n                continue;\n              }\n\n              srcOff = (scy * sw + scx) * 4;\n              wt = weights[cy * side + cx];\n              r += data[srcOff] * wt;\n              g += data[srcOff + 1] * wt;\n              b += data[srcOff + 2] * wt; // eslint-disable-next-line max-depth\n\n              if (!alphaFac) {\n                a += data[srcOff + 3] * wt;\n              }\n            }\n          }\n\n          dst[dstOff] = r;\n          dst[dstOff + 1] = g;\n          dst[dstOff + 2] = b;\n\n          if (!alphaFac) {\n            dst[dstOff + 3] = a;\n          } else {\n            dst[dstOff + 3] = data[dstOff + 3];\n          }\n        }\n      }\n\n      options.imageData = output;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function getUniformLocations(gl, program) {\n      return {\n        uMatrix: gl.getUniformLocation(program, 'uMatrix'),\n        uOpaque: gl.getUniformLocation(program, 'uOpaque'),\n        uHalfSize: gl.getUniformLocation(program, 'uHalfSize'),\n        uSize: gl.getUniformLocation(program, 'uSize')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function sendUniformData(gl, uniformLocations) {\n      gl.uniform1fv(uniformLocations.uMatrix, this.matrix);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function toObject() {\n      return extend(this.callSuper('toObject'), {\n        opaque: this.opaque,\n        matrix: this.matrix\n      });\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Convolute} Instance of fabric.Image.filters.Convolute\n   */\n\n  fabric.Image.filters.Convolute.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Grayscale image filter class\n   * @class fabric.Image.filters.Grayscale\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Grayscale();\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n\n  filters.Grayscale = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Grayscale.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Grayscale',\n    fragmentSource: {\n      average: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = texture2D(uTexture, vTexCoord);\\n' + 'float average = (color.r + color.b + color.g) / 3.0;\\n' + 'gl_FragColor = vec4(average, average, average, color.a);\\n' + '}',\n      lightness: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform int uMode;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 col = texture2D(uTexture, vTexCoord);\\n' + 'float average = (max(max(col.r, col.g),col.b) + min(min(col.r, col.g),col.b)) / 2.0;\\n' + 'gl_FragColor = vec4(average, average, average, col.a);\\n' + '}',\n      luminosity: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform int uMode;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 col = texture2D(uTexture, vTexCoord);\\n' + 'float average = 0.21 * col.r + 0.72 * col.g + 0.07 * col.b;\\n' + 'gl_FragColor = vec4(average, average, average, col.a);\\n' + '}'\n    },\n\n    /**\n     * Grayscale mode, between 'average', 'lightness', 'luminosity'\n     * @param {String} type\n     * @default\n     */\n    mode: 'average',\n    mainParameter: 'mode',\n\n    /**\n     * Apply the Grayscale operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function applyTo2d(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          i,\n          len = data.length,\n          value,\n          mode = this.mode;\n\n      for (i = 0; i < len; i += 4) {\n        if (mode === 'average') {\n          value = (data[i] + data[i + 1] + data[i + 2]) / 3;\n        } else if (mode === 'lightness') {\n          value = (Math.min(data[i], data[i + 1], data[i + 2]) + Math.max(data[i], data[i + 1], data[i + 2])) / 2;\n        } else if (mode === 'luminosity') {\n          value = 0.21 * data[i] + 0.72 * data[i + 1] + 0.07 * data[i + 2];\n        }\n\n        data[i] = value;\n        data[i + 1] = value;\n        data[i + 2] = value;\n      }\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function retrieveShader(options) {\n      var cacheKey = this.type + '_' + this.mode;\n\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        var shaderSource = this.fragmentSource[this.mode];\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function getUniformLocations(gl, program) {\n      return {\n        uMode: gl.getUniformLocation(program, 'uMode')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function sendUniformData(gl, uniformLocations) {\n      // default average mode.\n      var mode = 1;\n      gl.uniform1i(uniformLocations.uMode, mode);\n    },\n\n    /**\n     * Grayscale filter isNeutralState implementation\n     * The filter is never neutral\n     * on the image\n     **/\n    isNeutralState: function isNeutralState() {\n      return false;\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Grayscale} Instance of fabric.Image.filters.Grayscale\n   */\n\n  fabric.Image.filters.Grayscale.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Invert filter class\n   * @class fabric.Image.filters.Invert\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Invert();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n\n  filters.Invert = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Invert.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Invert',\n    fragmentSource: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform int uInvert;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = texture2D(uTexture, vTexCoord);\\n' + 'if (uInvert == 1) {\\n' + 'gl_FragColor = vec4(1.0 - color.r,1.0 -color.g,1.0 -color.b,color.a);\\n' + '} else {\\n' + 'gl_FragColor = color;\\n' + '}\\n' + '}',\n\n    /**\n     * Filter invert. if false, does nothing\n     * @param {Boolean} invert\n     * @default\n     */\n    invert: true,\n    mainParameter: 'invert',\n\n    /**\n     * Apply the Invert operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function applyTo2d(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          i,\n          len = data.length;\n\n      for (i = 0; i < len; i += 4) {\n        data[i] = 255 - data[i];\n        data[i + 1] = 255 - data[i + 1];\n        data[i + 2] = 255 - data[i + 2];\n      }\n    },\n\n    /**\n     * Invert filter isNeutralState implementation\n     * Used only in image applyFilters to discard filters that will not have an effect\n     * on the image\n     * @param {Object} options\n     **/\n    isNeutralState: function isNeutralState() {\n      return !this.invert;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function getUniformLocations(gl, program) {\n      return {\n        uInvert: gl.getUniformLocation(program, 'uInvert')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function sendUniformData(gl, uniformLocations) {\n      gl.uniform1i(uniformLocations.uInvert, this.invert);\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Invert} Instance of fabric.Image.filters.Invert\n   */\n\n  fabric.Image.filters.Invert.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Noise filter class\n   * @class fabric.Image.filters.Noise\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Noise#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Noise({\n   *   noise: 700\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.Noise = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Noise.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Noise',\n\n    /**\n     * Fragment source for the noise program\n     */\n    fragmentSource: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uStepH;\\n' + 'uniform float uNoise;\\n' + 'uniform float uSeed;\\n' + 'varying vec2 vTexCoord;\\n' + 'float rand(vec2 co, float seed, float vScale) {\\n' + 'return fract(sin(dot(co.xy * vScale ,vec2(12.9898 , 78.233))) * 43758.5453 * (seed + 0.01) / 2.0);\\n' + '}\\n' + 'void main() {\\n' + 'vec4 color = texture2D(uTexture, vTexCoord);\\n' + 'color.rgb += (0.5 - rand(vTexCoord, uSeed, 0.1 / uStepH)) * uNoise;\\n' + 'gl_FragColor = color;\\n' + '}',\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'noise',\n\n    /**\n     * Noise value, from\n     * @param {Number} noise\n     * @default\n     */\n    noise: 0,\n\n    /**\n     * Apply the Brightness operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function applyTo2d(options) {\n      if (this.noise === 0) {\n        return;\n      }\n\n      var imageData = options.imageData,\n          data = imageData.data,\n          i,\n          len = data.length,\n          noise = this.noise,\n          rand;\n\n      for (i = 0, len = data.length; i < len; i += 4) {\n        rand = (0.5 - Math.random()) * noise;\n        data[i] += rand;\n        data[i + 1] += rand;\n        data[i + 2] += rand;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function getUniformLocations(gl, program) {\n      return {\n        uNoise: gl.getUniformLocation(program, 'uNoise'),\n        uSeed: gl.getUniformLocation(program, 'uSeed')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function sendUniformData(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uNoise, this.noise / 255);\n      gl.uniform1f(uniformLocations.uSeed, Math.random());\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function toObject() {\n      return extend(this.callSuper('toObject'), {\n        noise: this.noise\n      });\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Noise} Instance of fabric.Image.filters.Noise\n   */\n\n  fabric.Image.filters.Noise.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Pixelate filter class\n   * @class fabric.Image.filters.Pixelate\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Pixelate#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Pixelate({\n   *   blocksize: 8\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n\n  filters.Pixelate = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Pixelate.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Pixelate',\n    blocksize: 4,\n    mainParameter: 'blocksize',\n\n    /**\n     * Fragment source for the Pixelate program\n     */\n    fragmentSource: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uBlocksize;\\n' + 'uniform float uStepW;\\n' + 'uniform float uStepH;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'float blockW = uBlocksize * uStepW;\\n' + 'float blockH = uBlocksize * uStepW;\\n' + 'int posX = int(vTexCoord.x / blockW);\\n' + 'int posY = int(vTexCoord.y / blockH);\\n' + 'float fposX = float(posX);\\n' + 'float fposY = float(posY);\\n' + 'vec2 squareCoords = vec2(fposX * blockW, fposY * blockH);\\n' + 'vec4 color = texture2D(uTexture, squareCoords);\\n' + 'gl_FragColor = color;\\n' + '}',\n\n    /**\n     * Apply the Pixelate operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function applyTo2d(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          iLen = imageData.height,\n          jLen = imageData.width,\n          index,\n          i,\n          j,\n          r,\n          g,\n          b,\n          a,\n          _i,\n          _j,\n          _iLen,\n          _jLen;\n\n      for (i = 0; i < iLen; i += this.blocksize) {\n        for (j = 0; j < jLen; j += this.blocksize) {\n          index = i * 4 * jLen + j * 4;\n          r = data[index];\n          g = data[index + 1];\n          b = data[index + 2];\n          a = data[index + 3];\n          _iLen = Math.min(i + this.blocksize, iLen);\n          _jLen = Math.min(j + this.blocksize, jLen);\n\n          for (_i = i; _i < _iLen; _i++) {\n            for (_j = j; _j < _jLen; _j++) {\n              index = _i * 4 * jLen + _j * 4;\n              data[index] = r;\n              data[index + 1] = g;\n              data[index + 2] = b;\n              data[index + 3] = a;\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Indicate when the filter is not gonna apply changes to the image\n     **/\n    isNeutralState: function isNeutralState() {\n      return this.blocksize === 1;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function getUniformLocations(gl, program) {\n      return {\n        uBlocksize: gl.getUniformLocation(program, 'uBlocksize'),\n        uStepW: gl.getUniformLocation(program, 'uStepW'),\n        uStepH: gl.getUniformLocation(program, 'uStepH')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function sendUniformData(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uBlocksize, this.blocksize);\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Pixelate} Instance of fabric.Image.filters.Pixelate\n   */\n\n  fabric.Image.filters.Pixelate.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      extend = fabric.util.object.extend,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Remove white filter class\n   * @class fabric.Image.filters.RemoveColor\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.RemoveColor#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.RemoveColor({\n   *   threshold: 0.2,\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.RemoveColor = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.RemoveColor.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'RemoveColor',\n\n    /**\n     * Color to remove, in any format understood by fabric.Color.\n     * @param {String} type\n     * @default\n     */\n    color: '#FFFFFF',\n\n    /**\n     * Fragment source for the brightness program\n     */\n    fragmentSource: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform vec4 uLow;\\n' + 'uniform vec4 uHigh;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'gl_FragColor = texture2D(uTexture, vTexCoord);\\n' + 'if(all(greaterThan(gl_FragColor.rgb,uLow.rgb)) && all(greaterThan(uHigh.rgb,gl_FragColor.rgb))) {\\n' + 'gl_FragColor.a = 0.0;\\n' + '}\\n' + '}',\n\n    /**\n     * distance to actual color, as value up or down from each r,g,b\n     * between 0 and 1\n     **/\n    distance: 0.02,\n\n    /**\n     * For color to remove inside distance, use alpha channel for a smoother deletion\n     * NOT IMPLEMENTED YET\n     **/\n    useAlpha: false,\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.RemoveWhite.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.color=#RRGGBB] Threshold value\n     * @param {Number} [options.distance=10] Distance value\n     */\n\n    /**\n     * Applies filter to canvas element\n     * @param {Object} canvasEl Canvas element to apply filter to\n     */\n    applyTo2d: function applyTo2d(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          i,\n          distance = this.distance * 255,\n          r,\n          g,\n          b,\n          source = new fabric.Color(this.color).getSource(),\n          lowC = [source[0] - distance, source[1] - distance, source[2] - distance],\n          highC = [source[0] + distance, source[1] + distance, source[2] + distance];\n\n      for (i = 0; i < data.length; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        if (r > lowC[0] && g > lowC[1] && b > lowC[2] && r < highC[0] && g < highC[1] && b < highC[2]) {\n          data[i + 3] = 0;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function getUniformLocations(gl, program) {\n      return {\n        uLow: gl.getUniformLocation(program, 'uLow'),\n        uHigh: gl.getUniformLocation(program, 'uHigh')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function sendUniformData(gl, uniformLocations) {\n      var source = new fabric.Color(this.color).getSource(),\n          distance = parseFloat(this.distance),\n          lowC = [0 + source[0] / 255 - distance, 0 + source[1] / 255 - distance, 0 + source[2] / 255 - distance, 1],\n          highC = [source[0] / 255 + distance, source[1] / 255 + distance, source[2] / 255 + distance, 1];\n      gl.uniform4fv(uniformLocations.uLow, lowC);\n      gl.uniform4fv(uniformLocations.uHigh, highC);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function toObject() {\n      return extend(this.callSuper('toObject'), {\n        color: this.color,\n        distance: this.distance\n      });\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.RemoveColor} Instance of fabric.Image.filters.RemoveWhite\n   */\n\n  fabric.Image.filters.RemoveColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  var matrices = {\n    Brownie: [0.59970, 0.34553, -0.27082, 0, 0.186, -0.03770, 0.86095, 0.15059, 0, -0.1449, 0.24113, -0.07441, 0.44972, 0, -0.02965, 0, 0, 0, 1, 0],\n    Vintage: [0.62793, 0.32021, -0.03965, 0, 0.03784, 0.02578, 0.64411, 0.03259, 0, 0.02926, 0.04660, -0.08512, 0.52416, 0, 0.02023, 0, 0, 0, 1, 0],\n    Kodachrome: [1.12855, -0.39673, -0.03992, 0, 0.24991, -0.16404, 1.08352, -0.05498, 0, 0.09698, -0.16786, -0.56034, 1.60148, 0, 0.13972, 0, 0, 0, 1, 0],\n    Technicolor: [1.91252, -0.85453, -0.09155, 0, 0.04624, -0.30878, 1.76589, -0.10601, 0, -0.27589, -0.23110, -0.75018, 1.84759, 0, 0.12137, 0, 0, 0, 1, 0],\n    Polaroid: [1.438, -0.062, -0.062, 0, 0, -0.122, 1.378, -0.122, 0, 0, -0.016, -0.016, 1.483, 0, 0, 0, 0, 0, 1, 0],\n    Sepia: [0.393, 0.769, 0.189, 0, 0, 0.349, 0.686, 0.168, 0, 0, 0.272, 0.534, 0.131, 0, 0, 0, 0, 0, 1, 0],\n    BlackWhite: [1.5, 1.5, 1.5, 0, -1, 1.5, 1.5, 1.5, 0, -1, 1.5, 1.5, 1.5, 0, -1, 0, 0, 0, 1, 0]\n  };\n\n  for (var key in matrices) {\n    filters[key] = createClass(filters.ColorMatrix,\n    /** @lends fabric.Image.filters.Sepia.prototype */\n    {\n      /**\n       * Filter type\n       * @param {String} type\n       * @default\n       */\n      type: key,\n\n      /**\n       * Colormatrix for the effect\n       * array of 20 floats. Numbers in positions 4, 9, 14, 19 loose meaning\n       * outside the -1, 1 range.\n       * @param {Array} matrix array of 20 numbers.\n       * @default\n       */\n      matrix: matrices[key],\n\n      /**\n       * Lock the matrix export for this kind of static, parameter less filters.\n       */\n      mainParameter: false,\n\n      /**\n       * Lock the colormatrix on the color part, skipping alpha\n       */\n      colorsOnly: true\n    });\n    fabric.Image.filters[key].fromObject = fabric.Image.filters.BaseFilter.fromObject;\n  }\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Color Blend filter class\n   * @class fabric.Image.filter.BlendColor\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.BlendColor({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.BlendImage({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.BlendColor = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Blend.prototype */\n  {\n    type: 'BlendColor',\n\n    /**\n     * Color to make the blend operation with. default to a reddish color since black or white\n     * gives always strong result.\n     **/\n    color: '#F95C63',\n\n    /**\n     * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\n     * darken, lighten, overlay, exclusion, tint.\n     **/\n    mode: 'multiply',\n\n    /**\n     * alpha value. represent the strength of the blend color operation.\n     **/\n    alpha: 1,\n\n    /**\n     * Fragment source for the Multiply program\n     */\n    fragmentSource: {\n      multiply: 'gl_FragColor.rgb *= uColor.rgb;\\n',\n      screen: 'gl_FragColor.rgb = 1.0 - (1.0 - gl_FragColor.rgb) * (1.0 - uColor.rgb);\\n',\n      add: 'gl_FragColor.rgb += uColor.rgb;\\n',\n      diff: 'gl_FragColor.rgb = abs(gl_FragColor.rgb - uColor.rgb);\\n',\n      subtract: 'gl_FragColor.rgb -= uColor.rgb;\\n',\n      lighten: 'gl_FragColor.rgb = max(gl_FragColor.rgb, uColor.rgb);\\n',\n      darken: 'gl_FragColor.rgb = min(gl_FragColor.rgb, uColor.rgb);\\n',\n      exclusion: 'gl_FragColor.rgb += uColor.rgb - 2.0 * (uColor.rgb * gl_FragColor.rgb);\\n',\n      overlay: 'if (uColor.r < 0.5) {\\n' + 'gl_FragColor.r *= 2.0 * uColor.r;\\n' + '} else {\\n' + 'gl_FragColor.r = 1.0 - 2.0 * (1.0 - gl_FragColor.r) * (1.0 - uColor.r);\\n' + '}\\n' + 'if (uColor.g < 0.5) {\\n' + 'gl_FragColor.g *= 2.0 * uColor.g;\\n' + '} else {\\n' + 'gl_FragColor.g = 1.0 - 2.0 * (1.0 - gl_FragColor.g) * (1.0 - uColor.g);\\n' + '}\\n' + 'if (uColor.b < 0.5) {\\n' + 'gl_FragColor.b *= 2.0 * uColor.b;\\n' + '} else {\\n' + 'gl_FragColor.b = 1.0 - 2.0 * (1.0 - gl_FragColor.b) * (1.0 - uColor.b);\\n' + '}\\n',\n      tint: 'gl_FragColor.rgb *= (1.0 - uColor.a);\\n' + 'gl_FragColor.rgb += uColor.rgb;\\n'\n    },\n\n    /**\n     * build the fragment source for the filters, joining the common part with\n     * the specific one.\n     * @param {String} mode the mode of the filter, a key of this.fragmentSource\n     * @return {String} the source to be compiled\n     * @private\n     */\n    buildSource: function buildSource(mode) {\n      return 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform vec4 uColor;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = texture2D(uTexture, vTexCoord);\\n' + 'gl_FragColor = color;\\n' + 'if (color.a > 0.0) {\\n' + this.fragmentSource[mode] + '}\\n' + '}';\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function retrieveShader(options) {\n      var cacheKey = this.type + '_' + this.mode,\n          shaderSource;\n\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        shaderSource = this.buildSource(this.mode);\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n\n      return options.programCache[cacheKey];\n    },\n\n    /**\n     * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function applyTo2d(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          iLen = data.length,\n          tr,\n          tg,\n          tb,\n          r,\n          g,\n          b,\n          source,\n          alpha1 = 1 - this.alpha;\n      source = new fabric.Color(this.color).getSource();\n      tr = source[0] * this.alpha;\n      tg = source[1] * this.alpha;\n      tb = source[2] * this.alpha;\n\n      for (var i = 0; i < iLen; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            break;\n\n          case 'screen':\n            data[i] = 255 - (255 - r) * (255 - tr) / 255;\n            data[i + 1] = 255 - (255 - g) * (255 - tg) / 255;\n            data[i + 2] = 255 - (255 - b) * (255 - tb) / 255;\n            break;\n\n          case 'add':\n            data[i] = r + tr;\n            data[i + 1] = g + tg;\n            data[i + 2] = b + tb;\n            break;\n\n          case 'diff':\n          case 'difference':\n            data[i] = Math.abs(r - tr);\n            data[i + 1] = Math.abs(g - tg);\n            data[i + 2] = Math.abs(b - tb);\n            break;\n\n          case 'subtract':\n            data[i] = r - tr;\n            data[i + 1] = g - tg;\n            data[i + 2] = b - tb;\n            break;\n\n          case 'darken':\n            data[i] = Math.min(r, tr);\n            data[i + 1] = Math.min(g, tg);\n            data[i + 2] = Math.min(b, tb);\n            break;\n\n          case 'lighten':\n            data[i] = Math.max(r, tr);\n            data[i + 1] = Math.max(g, tg);\n            data[i + 2] = Math.max(b, tb);\n            break;\n\n          case 'overlay':\n            data[i] = tr < 128 ? 2 * r * tr / 255 : 255 - 2 * (255 - r) * (255 - tr) / 255;\n            data[i + 1] = tg < 128 ? 2 * g * tg / 255 : 255 - 2 * (255 - g) * (255 - tg) / 255;\n            data[i + 2] = tb < 128 ? 2 * b * tb / 255 : 255 - 2 * (255 - b) * (255 - tb) / 255;\n            break;\n\n          case 'exclusion':\n            data[i] = tr + r - 2 * tr * r / 255;\n            data[i + 1] = tg + g - 2 * tg * g / 255;\n            data[i + 2] = tb + b - 2 * tb * b / 255;\n            break;\n\n          case 'tint':\n            data[i] = tr + r * alpha1;\n            data[i + 1] = tg + g * alpha1;\n            data[i + 2] = tb + b * alpha1;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function getUniformLocations(gl, program) {\n      return {\n        uColor: gl.getUniformLocation(program, 'uColor')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function sendUniformData(gl, uniformLocations) {\n      var source = new fabric.Color(this.color).getSource();\n      source[0] = this.alpha * source[0] / 255;\n      source[1] = this.alpha * source[1] / 255;\n      source[2] = this.alpha * source[2] / 255;\n      source[3] = this.alpha;\n      gl.uniform4fv(uniformLocations.uColor, source);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function toObject() {\n      return {\n        type: this.type,\n        color: this.color,\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.BlendColor} Instance of fabric.Image.filters.BlendColor\n   */\n\n  fabric.Image.filters.BlendColor.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Image Blend filter class\n   * @class fabric.Image.filter.BlendImage\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @example\n   * var filter = new fabric.Image.filters.BlendColor({\n   *  color: '#000',\n   *  mode: 'multiply'\n   * });\n   *\n   * var filter = new fabric.Image.filters.BlendImage({\n   *  image: fabricImageObject,\n   *  mode: 'multiply',\n   *  alpha: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.BlendImage = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.BlendImage.prototype */\n  {\n    type: 'BlendImage',\n\n    /**\n     * Color to make the blend operation with. default to a reddish color since black or white\n     * gives always strong result.\n     **/\n    image: null,\n\n    /**\n     * Blend mode for the filter: one of multiply, add, diff, screen, subtract,\n     * darken, lighten, overlay, exclusion, tint.\n     **/\n    mode: 'multiply',\n\n    /**\n     * alpha value. represent the strength of the blend image operation.\n     * not implemented.\n     **/\n    alpha: 1,\n    vertexSource: 'attribute vec2 aPosition;\\n' + 'varying vec2 vTexCoord;\\n' + 'varying vec2 vTexCoord2;\\n' + 'uniform mat3 uTransformMatrix;\\n' + 'void main() {\\n' + 'vTexCoord = aPosition;\\n' + 'vTexCoord2 = (uTransformMatrix * vec3(aPosition, 1.0)).xy;\\n' + 'gl_Position = vec4(aPosition * 2.0 - 1.0, 0.0, 1.0);\\n' + '}',\n\n    /**\n     * Fragment source for the Multiply program\n     */\n    fragmentSource: {\n      multiply: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform sampler2D uImage;\\n' + 'uniform vec4 uColor;\\n' + 'varying vec2 vTexCoord;\\n' + 'varying vec2 vTexCoord2;\\n' + 'void main() {\\n' + 'vec4 color = texture2D(uTexture, vTexCoord);\\n' + 'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' + 'color.rgba *= color2.rgba;\\n' + 'gl_FragColor = color;\\n' + '}',\n      mask: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform sampler2D uImage;\\n' + 'uniform vec4 uColor;\\n' + 'varying vec2 vTexCoord;\\n' + 'varying vec2 vTexCoord2;\\n' + 'void main() {\\n' + 'vec4 color = texture2D(uTexture, vTexCoord);\\n' + 'vec4 color2 = texture2D(uImage, vTexCoord2);\\n' + 'color.a = color2.a;\\n' + 'gl_FragColor = color;\\n' + '}'\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function retrieveShader(options) {\n      var cacheKey = this.type + '_' + this.mode;\n      var shaderSource = this.fragmentSource[this.mode];\n\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        options.programCache[cacheKey] = this.createProgram(options.context, shaderSource);\n      }\n\n      return options.programCache[cacheKey];\n    },\n    applyToWebGL: function applyToWebGL(options) {\n      // load texture to blend.\n      var gl = options.context,\n          texture = this.createTexture(options.filterBackend, this.image);\n      this.bindAdditionalTexture(gl, texture, gl.TEXTURE1);\n      this.callSuper('applyToWebGL', options);\n      this.unbindAdditionalTexture(gl, gl.TEXTURE1);\n    },\n    createTexture: function createTexture(backend, image) {\n      return backend.getCachedTexture(image.cacheKey, image._element);\n    },\n\n    /**\n     * Calculate a transformMatrix to adapt the image to blend over\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    calculateMatrix: function calculateMatrix() {\n      var image = this.image,\n          width = image._element.width,\n          height = image._element.height;\n      return [1 / image.scaleX, 0, 0, 0, 1 / image.scaleY, 0, -image.left / width, -image.top / height, 1];\n    },\n\n    /**\n     * Apply the Blend operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function applyTo2d(options) {\n      var imageData = options.imageData,\n          resources = options.filterBackend.resources,\n          data = imageData.data,\n          iLen = data.length,\n          width = imageData.width,\n          height = imageData.height,\n          tr,\n          tg,\n          tb,\n          ta,\n          r,\n          g,\n          b,\n          a,\n          canvas1,\n          context,\n          image = this.image,\n          blendData;\n\n      if (!resources.blendImage) {\n        resources.blendImage = fabric.util.createCanvasElement();\n      }\n\n      canvas1 = resources.blendImage;\n      context = canvas1.getContext('2d');\n\n      if (canvas1.width !== width || canvas1.height !== height) {\n        canvas1.width = width;\n        canvas1.height = height;\n      } else {\n        context.clearRect(0, 0, width, height);\n      }\n\n      context.setTransform(image.scaleX, 0, 0, image.scaleY, image.left, image.top);\n      context.drawImage(image._element, 0, 0, width, height);\n      blendData = context.getImageData(0, 0, width, height).data;\n\n      for (var i = 0; i < iLen; i += 4) {\n        r = data[i];\n        g = data[i + 1];\n        b = data[i + 2];\n        a = data[i + 3];\n        tr = blendData[i];\n        tg = blendData[i + 1];\n        tb = blendData[i + 2];\n        ta = blendData[i + 3];\n\n        switch (this.mode) {\n          case 'multiply':\n            data[i] = r * tr / 255;\n            data[i + 1] = g * tg / 255;\n            data[i + 2] = b * tb / 255;\n            data[i + 3] = a * ta / 255;\n            break;\n\n          case 'mask':\n            data[i + 3] = ta;\n            break;\n        }\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function getUniformLocations(gl, program) {\n      return {\n        uTransformMatrix: gl.getUniformLocation(program, 'uTransformMatrix'),\n        uImage: gl.getUniformLocation(program, 'uImage')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function sendUniformData(gl, uniformLocations) {\n      var matrix = this.calculateMatrix();\n      gl.uniform1i(uniformLocations.uImage, 1); // texture unit 1.\n\n      gl.uniformMatrix3fv(uniformLocations.uTransformMatrix, false, matrix);\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function toObject() {\n      return {\n        type: this.type,\n        image: this.image && this.image.toObject(),\n        mode: this.mode,\n        alpha: this.alpha\n      };\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} callback to be invoked after filter creation\n   * @return {fabric.Image.filters.BlendImage} Instance of fabric.Image.filters.BlendImage\n   */\n\n  fabric.Image.filters.BlendImage.fromObject = function (object, callback) {\n    fabric.Image.fromObject(object.image, function (image) {\n      var options = fabric.util.object.clone(object);\n      options.image = image;\n      callback(new fabric.Image.filters.BlendImage(options));\n    });\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      pow = Math.pow,\n      floor = Math.floor,\n      sqrt = Math.sqrt,\n      abs = Math.abs,\n      round = Math.round,\n      sin = Math.sin,\n      ceil = Math.ceil,\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Resize image filter class\n   * @class fabric.Image.filters.Resize\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Resize();\n   * object.filters.push(filter);\n   * object.applyFilters(canvas.renderAll.bind(canvas));\n   */\n\n  filters.Resize = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Resize.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Resize',\n\n    /**\n     * Resize type\n     * for webgl resizeType is just lanczos, for canvas2d can be:\n     * bilinear, hermite, sliceHack, lanczos.\n     * @param {String} resizeType\n     * @default\n     */\n    resizeType: 'hermite',\n\n    /**\n     * Scale factor for resizing, x axis\n     * @param {Number} scaleX\n     * @default\n     */\n    scaleX: 1,\n\n    /**\n     * Scale factor for resizing, y axis\n     * @param {Number} scaleY\n     * @default\n     */\n    scaleY: 1,\n\n    /**\n     * LanczosLobes parameter for lanczos filter, valid for resizeType lanczos\n     * @param {Number} lanczosLobes\n     * @default\n     */\n    lanczosLobes: 3,\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function getUniformLocations(gl, program) {\n      return {\n        uDelta: gl.getUniformLocation(program, 'uDelta'),\n        uTaps: gl.getUniformLocation(program, 'uTaps')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function sendUniformData(gl, uniformLocations) {\n      gl.uniform2fv(uniformLocations.uDelta, this.horizontal ? [1 / this.width, 0] : [0, 1 / this.height]);\n      gl.uniform1fv(uniformLocations.uTaps, this.taps);\n    },\n\n    /**\n     * Retrieves the cached shader.\n     * @param {Object} options\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    retrieveShader: function retrieveShader(options) {\n      var filterWindow = this.getFilterWindow(),\n          cacheKey = this.type + '_' + filterWindow;\n\n      if (!options.programCache.hasOwnProperty(cacheKey)) {\n        var fragmentShader = this.generateShader(filterWindow);\n        options.programCache[cacheKey] = this.createProgram(options.context, fragmentShader);\n      }\n\n      return options.programCache[cacheKey];\n    },\n    getFilterWindow: function getFilterWindow() {\n      var scale = this.tempScale;\n      return Math.ceil(this.lanczosLobes / scale);\n    },\n    getTaps: function getTaps() {\n      var lobeFunction = this.lanczosCreate(this.lanczosLobes),\n          scale = this.tempScale,\n          filterWindow = this.getFilterWindow(),\n          taps = new Array(filterWindow);\n\n      for (var i = 1; i <= filterWindow; i++) {\n        taps[i - 1] = lobeFunction(i * scale);\n      }\n\n      return taps;\n    },\n\n    /**\n     * Generate vertex and shader sources from the necessary steps numbers\n     * @param {Number} filterWindow\n     */\n    generateShader: function generateShader(filterWindow) {\n      var offsets = new Array(filterWindow),\n          fragmentShader = this.fragmentSourceTOP,\n          filterWindow;\n\n      for (var i = 1; i <= filterWindow; i++) {\n        offsets[i - 1] = i + '.0 * uDelta';\n      }\n\n      fragmentShader += 'uniform float uTaps[' + filterWindow + '];\\n';\n      fragmentShader += 'void main() {\\n';\n      fragmentShader += '  vec4 color = texture2D(uTexture, vTexCoord);\\n';\n      fragmentShader += '  float sum = 1.0;\\n';\n      offsets.forEach(function (offset, i) {\n        fragmentShader += '  color += texture2D(uTexture, vTexCoord + ' + offset + ') * uTaps[' + i + '];\\n';\n        fragmentShader += '  color += texture2D(uTexture, vTexCoord - ' + offset + ') * uTaps[' + i + '];\\n';\n        fragmentShader += '  sum += 2.0 * uTaps[' + i + '];\\n';\n      });\n      fragmentShader += '  gl_FragColor = color / sum;\\n';\n      fragmentShader += '}';\n      return fragmentShader;\n    },\n    fragmentSourceTOP: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform vec2 uDelta;\\n' + 'varying vec2 vTexCoord;\\n',\n\n    /**\n     * Apply the resize filter to the image\n     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be executed\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    applyTo: function applyTo(options) {\n      if (options.webgl) {\n        options.passes++;\n        this.width = options.sourceWidth;\n        this.horizontal = true;\n        this.dW = Math.round(this.width * this.scaleX);\n        this.dH = options.sourceHeight;\n        this.tempScale = this.dW / this.width;\n        this.taps = this.getTaps();\n        options.destinationWidth = this.dW;\n\n        this._setupFrameBuffer(options);\n\n        this.applyToWebGL(options);\n\n        this._swapTextures(options);\n\n        options.sourceWidth = options.destinationWidth;\n        this.height = options.sourceHeight;\n        this.horizontal = false;\n        this.dH = Math.round(this.height * this.scaleY);\n        this.tempScale = this.dH / this.height;\n        this.taps = this.getTaps();\n        options.destinationHeight = this.dH;\n\n        this._setupFrameBuffer(options);\n\n        this.applyToWebGL(options);\n\n        this._swapTextures(options);\n\n        options.sourceHeight = options.destinationHeight;\n      } else {\n        this.applyTo2d(options);\n      }\n    },\n    isNeutralState: function isNeutralState() {\n      return this.scaleX === 1 && this.scaleY === 1;\n    },\n    lanczosCreate: function lanczosCreate(lobes) {\n      return function (x) {\n        if (x >= lobes || x <= -lobes) {\n          return 0.0;\n        }\n\n        if (x < 1.19209290E-07 && x > -1.19209290E-07) {\n          return 1.0;\n        }\n\n        x *= Math.PI;\n        var xx = x / lobes;\n        return sin(x) / x * sin(xx) / xx;\n      };\n    },\n\n    /**\n     * Applies filter to canvas element\n     * @memberOf fabric.Image.filters.Resize.prototype\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} scaleX\n     * @param {Number} scaleY\n     */\n    applyTo2d: function applyTo2d(options) {\n      var imageData = options.imageData,\n          scaleX = this.scaleX,\n          scaleY = this.scaleY;\n      this.rcpScaleX = 1 / scaleX;\n      this.rcpScaleY = 1 / scaleY;\n      var oW = imageData.width,\n          oH = imageData.height,\n          dW = round(oW * scaleX),\n          dH = round(oH * scaleY),\n          newData;\n\n      if (this.resizeType === 'sliceHack') {\n        newData = this.sliceByTwo(options, oW, oH, dW, dH);\n      } else if (this.resizeType === 'hermite') {\n        newData = this.hermiteFastResize(options, oW, oH, dW, dH);\n      } else if (this.resizeType === 'bilinear') {\n        newData = this.bilinearFiltering(options, oW, oH, dW, dH);\n      } else if (this.resizeType === 'lanczos') {\n        newData = this.lanczosResize(options, oW, oH, dW, dH);\n      }\n\n      options.imageData = newData;\n    },\n\n    /**\n     * Filter sliceByTwo\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    sliceByTwo: function sliceByTwo(options, oW, oH, dW, dH) {\n      var imageData = options.imageData,\n          mult = 0.5,\n          doneW = false,\n          doneH = false,\n          stepW = oW * mult,\n          stepH = oH * mult,\n          resources = fabric.filterBackend.resources,\n          tmpCanvas,\n          ctx,\n          sX = 0,\n          sY = 0,\n          dX = oW,\n          dY = 0;\n\n      if (!resources.sliceByTwo) {\n        resources.sliceByTwo = document.createElement('canvas');\n      }\n\n      tmpCanvas = resources.sliceByTwo;\n\n      if (tmpCanvas.width < oW * 1.5 || tmpCanvas.height < oH) {\n        tmpCanvas.width = oW * 1.5;\n        tmpCanvas.height = oH;\n      }\n\n      ctx = tmpCanvas.getContext('2d');\n      ctx.clearRect(0, 0, oW * 1.5, oH);\n      ctx.putImageData(imageData, 0, 0);\n      dW = floor(dW);\n      dH = floor(dH);\n\n      while (!doneW || !doneH) {\n        oW = stepW;\n        oH = stepH;\n\n        if (dW < floor(stepW * mult)) {\n          stepW = floor(stepW * mult);\n        } else {\n          stepW = dW;\n          doneW = true;\n        }\n\n        if (dH < floor(stepH * mult)) {\n          stepH = floor(stepH * mult);\n        } else {\n          stepH = dH;\n          doneH = true;\n        }\n\n        ctx.drawImage(tmpCanvas, sX, sY, oW, oH, dX, dY, stepW, stepH);\n        sX = dX;\n        sY = dY;\n        dY += stepH;\n      }\n\n      return ctx.getImageData(sX, sY, dW, dH);\n    },\n\n    /**\n     * Filter lanczosResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    lanczosResize: function lanczosResize(options, oW, oH, dW, dH) {\n      function process(u) {\n        var v, i, weight, idx, a, red, green, blue, alpha, fX, fY;\n        center.x = (u + 0.5) * ratioX;\n        icenter.x = floor(center.x);\n\n        for (v = 0; v < dH; v++) {\n          center.y = (v + 0.5) * ratioY;\n          icenter.y = floor(center.y);\n          a = 0;\n          red = 0;\n          green = 0;\n          blue = 0;\n          alpha = 0;\n\n          for (i = icenter.x - range2X; i <= icenter.x + range2X; i++) {\n            if (i < 0 || i >= oW) {\n              continue;\n            }\n\n            fX = floor(1000 * abs(i - center.x));\n\n            if (!cacheLanc[fX]) {\n              cacheLanc[fX] = {};\n            }\n\n            for (var j = icenter.y - range2Y; j <= icenter.y + range2Y; j++) {\n              if (j < 0 || j >= oH) {\n                continue;\n              }\n\n              fY = floor(1000 * abs(j - center.y));\n\n              if (!cacheLanc[fX][fY]) {\n                cacheLanc[fX][fY] = lanczos(sqrt(pow(fX * rcpRatioX, 2) + pow(fY * rcpRatioY, 2)) / 1000);\n              }\n\n              weight = cacheLanc[fX][fY];\n\n              if (weight > 0) {\n                idx = (j * oW + i) * 4;\n                a += weight;\n                red += weight * srcData[idx];\n                green += weight * srcData[idx + 1];\n                blue += weight * srcData[idx + 2];\n                alpha += weight * srcData[idx + 3];\n              }\n            }\n          }\n\n          idx = (v * dW + u) * 4;\n          destData[idx] = red / a;\n          destData[idx + 1] = green / a;\n          destData[idx + 2] = blue / a;\n          destData[idx + 3] = alpha / a;\n        }\n\n        if (++u < dW) {\n          return process(u);\n        } else {\n          return destImg;\n        }\n      }\n\n      var srcData = options.imageData.data,\n          destImg = options.ctx.createImageData(dW, dH),\n          destData = destImg.data,\n          lanczos = this.lanczosCreate(this.lanczosLobes),\n          ratioX = this.rcpScaleX,\n          ratioY = this.rcpScaleY,\n          rcpRatioX = 2 / this.rcpScaleX,\n          rcpRatioY = 2 / this.rcpScaleY,\n          range2X = ceil(ratioX * this.lanczosLobes / 2),\n          range2Y = ceil(ratioY * this.lanczosLobes / 2),\n          cacheLanc = {},\n          center = {},\n          icenter = {};\n      return process(0);\n    },\n\n    /**\n     * bilinearFiltering\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    bilinearFiltering: function bilinearFiltering(options, oW, oH, dW, dH) {\n      var a,\n          b,\n          c,\n          d,\n          x,\n          y,\n          i,\n          j,\n          xDiff,\n          yDiff,\n          chnl,\n          color,\n          offset = 0,\n          origPix,\n          ratioX = this.rcpScaleX,\n          ratioY = this.rcpScaleY,\n          w4 = 4 * (oW - 1),\n          img = options.imageData,\n          pixels = img.data,\n          destImage = options.ctx.createImageData(dW, dH),\n          destPixels = destImage.data;\n\n      for (i = 0; i < dH; i++) {\n        for (j = 0; j < dW; j++) {\n          x = floor(ratioX * j);\n          y = floor(ratioY * i);\n          xDiff = ratioX * j - x;\n          yDiff = ratioY * i - y;\n          origPix = 4 * (y * oW + x);\n\n          for (chnl = 0; chnl < 4; chnl++) {\n            a = pixels[origPix + chnl];\n            b = pixels[origPix + 4 + chnl];\n            c = pixels[origPix + w4 + chnl];\n            d = pixels[origPix + w4 + 4 + chnl];\n            color = a * (1 - xDiff) * (1 - yDiff) + b * xDiff * (1 - yDiff) + c * yDiff * (1 - xDiff) + d * xDiff * yDiff;\n            destPixels[offset++] = color;\n          }\n        }\n      }\n\n      return destImage;\n    },\n\n    /**\n     * hermiteFastResize\n     * @param {Object} canvasEl Canvas element to apply filter to\n     * @param {Number} oW Original Width\n     * @param {Number} oH Original Height\n     * @param {Number} dW Destination Width\n     * @param {Number} dH Destination Height\n     * @returns {ImageData}\n     */\n    hermiteFastResize: function hermiteFastResize(options, oW, oH, dW, dH) {\n      var ratioW = this.rcpScaleX,\n          ratioH = this.rcpScaleY,\n          ratioWHalf = ceil(ratioW / 2),\n          ratioHHalf = ceil(ratioH / 2),\n          img = options.imageData,\n          data = img.data,\n          img2 = options.ctx.createImageData(dW, dH),\n          data2 = img2.data;\n\n      for (var j = 0; j < dH; j++) {\n        for (var i = 0; i < dW; i++) {\n          var x2 = (i + j * dW) * 4,\n              weight = 0,\n              weights = 0,\n              weightsAlpha = 0,\n              gxR = 0,\n              gxG = 0,\n              gxB = 0,\n              gxA = 0,\n              centerY = (j + 0.5) * ratioH;\n\n          for (var yy = floor(j * ratioH); yy < (j + 1) * ratioH; yy++) {\n            var dy = abs(centerY - (yy + 0.5)) / ratioHHalf,\n                centerX = (i + 0.5) * ratioW,\n                w0 = dy * dy;\n\n            for (var xx = floor(i * ratioW); xx < (i + 1) * ratioW; xx++) {\n              var dx = abs(centerX - (xx + 0.5)) / ratioWHalf,\n                  w = sqrt(w0 + dx * dx);\n              /* eslint-disable max-depth */\n\n              if (w > 1 && w < -1) {\n                continue;\n              } //hermite filter\n\n\n              weight = 2 * w * w * w - 3 * w * w + 1;\n\n              if (weight > 0) {\n                dx = 4 * (xx + yy * oW); //alpha\n\n                gxA += weight * data[dx + 3];\n                weightsAlpha += weight; //colors\n\n                if (data[dx + 3] < 255) {\n                  weight = weight * data[dx + 3] / 250;\n                }\n\n                gxR += weight * data[dx];\n                gxG += weight * data[dx + 1];\n                gxB += weight * data[dx + 2];\n                weights += weight;\n              }\n              /* eslint-enable max-depth */\n\n            }\n          }\n\n          data2[x2] = gxR / weights;\n          data2[x2 + 1] = gxG / weights;\n          data2[x2 + 2] = gxB / weights;\n          data2[x2 + 3] = gxA / weightsAlpha;\n        }\n      }\n\n      return img2;\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function toObject() {\n      return {\n        type: this.type,\n        scaleX: this.scaleX,\n        scaleY: this.scaleY,\n        resizeType: this.resizeType,\n        lanczosLobes: this.lanczosLobes\n      };\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Resize} Instance of fabric.Image.filters.Resize\n   */\n\n  fabric.Image.filters.Resize.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Contrast filter class\n   * @class fabric.Image.filters.Contrast\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Contrast#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Contrast({\n   *   contrast: 40\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n\n  filters.Contrast = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Contrast.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Contrast',\n    fragmentSource: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uContrast;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = texture2D(uTexture, vTexCoord);\\n' + 'float contrastF = 1.015 * (uContrast + 1.0) / (1.0 * (1.015 - uContrast));\\n' + 'color.rgb = contrastF * (color.rgb - 0.5) + 0.5;\\n' + 'gl_FragColor = color;\\n' + '}',\n    contrast: 0,\n    mainParameter: 'contrast',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Contrast.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.contrast=0] Value to contrast the image up (-1...1)\n     */\n\n    /**\n      * Apply the Contrast operation to a Uint8Array representing the pixels of an image.\n      *\n      * @param {Object} options\n      * @param {ImageData} options.imageData The Uint8Array to be filtered.\n      */\n    applyTo2d: function applyTo2d(options) {\n      if (this.contrast === 0) {\n        return;\n      }\n\n      var imageData = options.imageData,\n          i,\n          len,\n          data = imageData.data,\n          len = data.length,\n          contrast = Math.floor(this.contrast * 255),\n          contrastF = 259 * (contrast + 255) / (255 * (259 - contrast));\n\n      for (i = 0; i < len; i += 4) {\n        data[i] = contrastF * (data[i] - 128) + 128;\n        data[i + 1] = contrastF * (data[i + 1] - 128) + 128;\n        data[i + 2] = contrastF * (data[i + 2] - 128) + 128;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function getUniformLocations(gl, program) {\n      return {\n        uContrast: gl.getUniformLocation(program, 'uContrast')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function sendUniformData(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uContrast, this.contrast);\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Contrast} Instance of fabric.Image.filters.Contrast\n   */\n\n  fabric.Image.filters.Contrast.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Saturate filter class\n   * @class fabric.Image.filters.Saturation\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Saturation#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Saturation({\n   *   saturation: 100\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n\n  filters.Saturation = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Saturation.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Saturation',\n    fragmentSource: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform float uSaturation;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = texture2D(uTexture, vTexCoord);\\n' + 'float rgMax = max(color.r, color.g);\\n' + 'float rgbMax = max(rgMax, color.b);\\n' + 'color.r += rgbMax != color.r ? (rgbMax - color.r) * uSaturation : 0.00;\\n' + 'color.g += rgbMax != color.g ? (rgbMax - color.g) * uSaturation : 0.00;\\n' + 'color.b += rgbMax != color.b ? (rgbMax - color.b) * uSaturation : 0.00;\\n' + 'gl_FragColor = color;\\n' + '}',\n    saturation: 0,\n    mainParameter: 'saturation',\n\n    /**\n     * Constructor\n     * @memberOf fabric.Image.filters.Saturate.prototype\n     * @param {Object} [options] Options object\n     * @param {Number} [options.saturate=0] Value to saturate the image (-1...1)\n     */\n\n    /**\n     * Apply the Saturation operation to a Uint8ClampedArray representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8ClampedArray to be filtered.\n     */\n    applyTo2d: function applyTo2d(options) {\n      if (this.saturation === 0) {\n        return;\n      }\n\n      var imageData = options.imageData,\n          data = imageData.data,\n          len = data.length,\n          adjust = -this.saturation,\n          i,\n          max;\n\n      for (i = 0; i < len; i += 4) {\n        max = Math.max(data[i], data[i + 1], data[i + 2]);\n        data[i] += max !== data[i] ? (max - data[i]) * adjust : 0;\n        data[i + 1] += max !== data[i + 1] ? (max - data[i + 1]) * adjust : 0;\n        data[i + 2] += max !== data[i + 2] ? (max - data[i + 2]) * adjust : 0;\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function getUniformLocations(gl, program) {\n      return {\n        uSaturation: gl.getUniformLocation(program, 'uSaturation')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function sendUniformData(gl, uniformLocations) {\n      gl.uniform1f(uniformLocations.uSaturation, -this.saturation);\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Saturation} Instance of fabric.Image.filters.Saturate\n   */\n\n  fabric.Image.filters.Saturation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Blur filter class\n   * @class fabric.Image.filters.Blur\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Blur#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Blur({\n   *   blur: 0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   * canvas.renderAll();\n   */\n\n  filters.Blur = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Blur.prototype */\n  {\n    type: 'Blur',\n\n    /*\n    'gl_FragColor = vec4(0.0);',\n    'gl_FragColor += texture2D(texture, vTexCoord + -7 * uDelta)*0.0044299121055113265;',\n    'gl_FragColor += texture2D(texture, vTexCoord + -6 * uDelta)*0.00895781211794;',\n    'gl_FragColor += texture2D(texture, vTexCoord + -5 * uDelta)*0.0215963866053;',\n    'gl_FragColor += texture2D(texture, vTexCoord + -4 * uDelta)*0.0443683338718;',\n    'gl_FragColor += texture2D(texture, vTexCoord + -3 * uDelta)*0.0776744219933;',\n    'gl_FragColor += texture2D(texture, vTexCoord + -2 * uDelta)*0.115876621105;',\n    'gl_FragColor += texture2D(texture, vTexCoord + -1 * uDelta)*0.147308056121;',\n    'gl_FragColor += texture2D(texture, vTexCoord              )*0.159576912161;',\n    'gl_FragColor += texture2D(texture, vTexCoord + 1 * uDelta)*0.147308056121;',\n    'gl_FragColor += texture2D(texture, vTexCoord + 2 * uDelta)*0.115876621105;',\n    'gl_FragColor += texture2D(texture, vTexCoord + 3 * uDelta)*0.0776744219933;',\n    'gl_FragColor += texture2D(texture, vTexCoord + 4 * uDelta)*0.0443683338718;',\n    'gl_FragColor += texture2D(texture, vTexCoord + 5 * uDelta)*0.0215963866053;',\n    'gl_FragColor += texture2D(texture, vTexCoord + 6 * uDelta)*0.00895781211794;',\n    'gl_FragColor += texture2D(texture, vTexCoord + 7 * uDelta)*0.0044299121055113265;',\n    */\n\n    /* eslint-disable max-len */\n    fragmentSource: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform vec2 uDelta;\\n' + 'varying vec2 vTexCoord;\\n' + 'const float nSamples = 15.0;\\n' + 'vec3 v3offset = vec3(12.9898, 78.233, 151.7182);\\n' + 'float random(vec3 scale) {\\n' +\n    /* use the fragment position for a different seed per-pixel */\n    'return fract(sin(dot(gl_FragCoord.xyz, scale)) * 43758.5453);\\n' + '}\\n' + 'void main() {\\n' + 'vec4 color = vec4(0.0);\\n' + 'float total = 0.0;\\n' + 'float offset = random(v3offset);\\n' + 'for (float t = -nSamples; t <= nSamples; t++) {\\n' + 'float percent = (t + offset - 0.5) / nSamples;\\n' + 'float weight = 1.0 - abs(percent);\\n' + 'color += texture2D(uTexture, vTexCoord + uDelta * percent) * weight;\\n' + 'total += weight;\\n' + '}\\n' + 'gl_FragColor = color / total;\\n' + '}',\n\n    /* eslint-enable max-len */\n\n    /**\n     * blur value, in percentage of image dimensions.\n     * specific to keep the image blur constant at different resolutions\n     * range bewteen 0 and 1.\n     */\n    blur: 0,\n    mainParameter: 'blur',\n    applyTo: function applyTo(options) {\n      if (options.webgl) {\n        // this aspectRatio is used to give the same blur to vertical and horizontal\n        this.aspectRatio = options.sourceWidth / options.sourceHeight;\n        options.passes++;\n\n        this._setupFrameBuffer(options);\n\n        this.horizontal = true;\n        this.applyToWebGL(options);\n\n        this._swapTextures(options);\n\n        this._setupFrameBuffer(options);\n\n        this.horizontal = false;\n        this.applyToWebGL(options);\n\n        this._swapTextures(options);\n      } else {\n        this.applyTo2d(options);\n      }\n    },\n    applyTo2d: function applyTo2d(options) {\n      // paint canvasEl with current image data.\n      //options.ctx.putImageData(options.imageData, 0, 0);\n      options.imageData = this.simpleBlur(options);\n    },\n    simpleBlur: function simpleBlur(options) {\n      var resources = options.filterBackend.resources,\n          canvas1,\n          canvas2,\n          width = options.imageData.width,\n          height = options.imageData.height;\n\n      if (!resources.blurLayer1) {\n        resources.blurLayer1 = fabric.util.createCanvasElement();\n        resources.blurLayer2 = fabric.util.createCanvasElement();\n      }\n\n      canvas1 = resources.blurLayer1;\n      canvas2 = resources.blurLayer2;\n\n      if (canvas1.width !== width || canvas1.height !== height) {\n        canvas2.width = canvas1.width = width;\n        canvas2.height = canvas1.height = height;\n      }\n\n      var ctx1 = canvas1.getContext('2d'),\n          ctx2 = canvas2.getContext('2d'),\n          nSamples = 15,\n          random,\n          percent,\n          j,\n          i,\n          blur = this.blur * 0.06 * 0.5; // load first canvas\n\n      ctx1.putImageData(options.imageData, 0, 0);\n      ctx2.clearRect(0, 0, width, height);\n\n      for (i = -nSamples; i <= nSamples; i++) {\n        random = (Math.random() - 0.5) / 4;\n        percent = i / nSamples;\n        j = blur * percent * width + random;\n        ctx2.globalAlpha = 1 - Math.abs(percent);\n        ctx2.drawImage(canvas1, j, random);\n        ctx1.drawImage(canvas2, 0, 0);\n        ctx2.globalAlpha = 1;\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n      }\n\n      for (i = -nSamples; i <= nSamples; i++) {\n        random = (Math.random() - 0.5) / 4;\n        percent = i / nSamples;\n        j = blur * percent * height + random;\n        ctx2.globalAlpha = 1 - Math.abs(percent);\n        ctx2.drawImage(canvas1, random, j);\n        ctx1.drawImage(canvas2, 0, 0);\n        ctx2.globalAlpha = 1;\n        ctx2.clearRect(0, 0, canvas2.width, canvas2.height);\n      }\n\n      options.ctx.drawImage(canvas1, 0, 0);\n      var newImageData = options.ctx.getImageData(0, 0, canvas1.width, canvas1.height);\n      ctx1.globalAlpha = 1;\n      ctx1.clearRect(0, 0, canvas1.width, canvas1.height);\n      return newImageData;\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function getUniformLocations(gl, program) {\n      return {\n        delta: gl.getUniformLocation(program, 'uDelta')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function sendUniformData(gl, uniformLocations) {\n      var delta = this.chooseRightDelta();\n      gl.uniform2fv(uniformLocations.delta, delta);\n    },\n\n    /**\n     * choose right value of image percentage to blur with\n     * @returns {Array} a numeric array with delta values\n     */\n    chooseRightDelta: function chooseRightDelta() {\n      var blurScale = 1,\n          delta = [0, 0],\n          blur;\n\n      if (this.horizontal) {\n        if (this.aspectRatio > 1) {\n          // image is wide, i want to shrink radius horizontal\n          blurScale = 1 / this.aspectRatio;\n        }\n      } else {\n        if (this.aspectRatio < 1) {\n          // image is tall, i want to shrink radius vertical\n          blurScale = this.aspectRatio;\n        }\n      }\n\n      blur = blurScale * this.blur * 0.12;\n\n      if (this.horizontal) {\n        delta[0] = blur;\n      } else {\n        delta[1] = blur;\n      }\n\n      return delta;\n    }\n  });\n  /**\n   * Deserialize a JSON definition of a BlurFilter into a concrete instance.\n   */\n\n  filters.Blur.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * Gamma filter class\n   * @class fabric.Image.filters.Gamma\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.Gamma#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.Gamma({\n   *   brightness: 200\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n\n  filters.Gamma = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Gamma.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'Gamma',\n    fragmentSource: 'precision highp float;\\n' + 'uniform sampler2D uTexture;\\n' + 'uniform vec3 uGamma;\\n' + 'varying vec2 vTexCoord;\\n' + 'void main() {\\n' + 'vec4 color = texture2D(uTexture, vTexCoord);\\n' + 'vec3 correction = (1.0 / uGamma);\\n' + 'color.r = pow(color.r, correction.r);\\n' + 'color.g = pow(color.g, correction.g);\\n' + 'color.b = pow(color.b, correction.b);\\n' + 'gl_FragColor = color;\\n' + 'gl_FragColor.rgb *= color.a;\\n' + '}',\n\n    /**\n     * Gamma array value, from 0.01 to 2.2.\n     * @param {Array} gamma\n     * @default\n     */\n    gamma: [1, 1, 1],\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'gamma',\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function initialize(options) {\n      this.gamma = [1, 1, 1];\n      filters.BaseFilter.prototype.initialize.call(this, options);\n    },\n\n    /**\n     * Apply the Gamma operation to a Uint8Array representing the pixels of an image.\n     *\n     * @param {Object} options\n     * @param {ImageData} options.imageData The Uint8Array to be filtered.\n     */\n    applyTo2d: function applyTo2d(options) {\n      var imageData = options.imageData,\n          data = imageData.data,\n          gamma = this.gamma,\n          len = data.length,\n          rInv = 1 / gamma[0],\n          gInv = 1 / gamma[1],\n          bInv = 1 / gamma[2],\n          i;\n\n      if (!this.rVals) {\n        // eslint-disable-next-line\n        this.rVals = new Uint8Array(256); // eslint-disable-next-line\n\n        this.gVals = new Uint8Array(256); // eslint-disable-next-line\n\n        this.bVals = new Uint8Array(256);\n      } // This is an optimization - pre-compute a look-up table for each color channel\n      // instead of performing these pow calls for each pixel in the image.\n\n\n      for (i = 0, len = 256; i < len; i++) {\n        this.rVals[i] = Math.pow(i / 255, rInv) * 255;\n        this.gVals[i] = Math.pow(i / 255, gInv) * 255;\n        this.bVals[i] = Math.pow(i / 255, bInv) * 255;\n      }\n\n      for (i = 0, len = data.length; i < len; i += 4) {\n        data[i] = this.rVals[data[i]];\n        data[i + 1] = this.gVals[data[i + 1]];\n        data[i + 2] = this.bVals[data[i + 2]];\n      }\n    },\n\n    /**\n     * Return WebGL uniform locations for this filter's shader.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {WebGLShaderProgram} program This filter's compiled shader program.\n     */\n    getUniformLocations: function getUniformLocations(gl, program) {\n      return {\n        uGamma: gl.getUniformLocation(program, 'uGamma')\n      };\n    },\n\n    /**\n     * Send data from this filter to its shader program's uniforms.\n     *\n     * @param {WebGLRenderingContext} gl The GL canvas context used to compile this filter's shader.\n     * @param {Object} uniformLocations A map of string uniform names to WebGLUniformLocation objects\n     */\n    sendUniformData: function sendUniformData(gl, uniformLocations) {\n      gl.uniform3fv(uniformLocations.uGamma, this.gamma);\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.Gamma} Instance of fabric.Image.filters.Gamma\n   */\n\n  fabric.Image.filters.Gamma.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * A container class that knows how to apply a sequence of filters to an input image.\n   */\n\n  filters.Composed = createClass(filters.BaseFilter,\n  /** @lends fabric.Image.filters.Composed.prototype */\n  {\n    type: 'Composed',\n\n    /**\n     * A non sparse array of filters to apply\n     */\n    subFilters: [],\n\n    /**\n     * Constructor\n     * @param {Object} [options] Options object\n     */\n    initialize: function initialize(options) {\n      this.callSuper('initialize', options); // create a new array instead mutating the prototype with push\n\n      this.subFilters = this.subFilters.slice(0);\n    },\n\n    /**\n     * Apply this container's filters to the input image provided.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be applied.\n     */\n    applyTo: function applyTo(options) {\n      options.passes += this.subFilters.length - 1;\n      this.subFilters.forEach(function (filter) {\n        filter.applyTo(options);\n      });\n    },\n\n    /**\n     * Serialize this filter into JSON.\n     *\n     * @returns {Object} A JSON representation of this filter.\n     */\n    toObject: function toObject() {\n      return fabric.util.object.extend(this.callSuper('toObject'), {\n        subFilters: this.subFilters.map(function (filter) {\n          return filter.toObject();\n        })\n      });\n    },\n    isNeutralState: function isNeutralState() {\n      return !this.subFilters.some(function (filter) {\n        return !filter.isNeutralState();\n      });\n    }\n  });\n  /**\n   * Deserialize a JSON definition of a ComposedFilter into a concrete instance.\n   */\n\n  fabric.Image.filters.Composed.fromObject = function (object, callback) {\n    var filters = object.subFilters || [],\n        subFilters = filters.map(function (filter) {\n      return new fabric.Image.filters[filter.type](filter);\n    }),\n        instance = new fabric.Image.filters.Composed({\n      subFilters: subFilters\n    });\n    callback && callback(instance);\n    return instance;\n  };\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      filters = fabric.Image.filters,\n      createClass = fabric.util.createClass;\n  /**\n   * HueRotation filter class\n   * @class fabric.Image.filters.HueRotation\n   * @memberOf fabric.Image.filters\n   * @extends fabric.Image.filters.BaseFilter\n   * @see {@link fabric.Image.filters.HueRotation#initialize} for constructor definition\n   * @see {@link http://fabricjs.com/image-filters|ImageFilters demo}\n   * @example\n   * var filter = new fabric.Image.filters.HueRotation({\n   *   rotation: -0.5\n   * });\n   * object.filters.push(filter);\n   * object.applyFilters();\n   */\n\n  filters.HueRotation = createClass(filters.ColorMatrix,\n  /** @lends fabric.Image.filters.HueRotation.prototype */\n  {\n    /**\n     * Filter type\n     * @param {String} type\n     * @default\n     */\n    type: 'HueRotation',\n\n    /**\n     * HueRotation value, from -1 to 1.\n     * the unit is radians\n     * @param {Number} myParameter\n     * @default\n     */\n    rotation: 0,\n\n    /**\n     * Describe the property that is the filter parameter\n     * @param {String} m\n     * @default\n     */\n    mainParameter: 'rotation',\n    calculateMatrix: function calculateMatrix() {\n      var rad = this.rotation * Math.PI,\n          cos = fabric.util.cos(rad),\n          sin = fabric.util.sin(rad),\n          aThird = 1 / 3,\n          aThirdSqtSin = Math.sqrt(aThird) * sin,\n          OneMinusCos = 1 - cos;\n      this.matrix = [1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1, 0];\n      this.matrix[0] = cos + OneMinusCos / 3;\n      this.matrix[1] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[2] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[5] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[6] = cos + aThird * OneMinusCos;\n      this.matrix[7] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[10] = aThird * OneMinusCos - aThirdSqtSin;\n      this.matrix[11] = aThird * OneMinusCos + aThirdSqtSin;\n      this.matrix[12] = cos + aThird * OneMinusCos;\n    },\n\n    /**\n     * HueRotation isNeutralState implementation\n     * Used only in image applyFilters to discard filters that will not have an effect\n     * on the image\n     * @param {Object} options\n     **/\n    isNeutralState: function isNeutralState(options) {\n      this.calculateMatrix();\n      return filters.BaseFilter.prototype.isNeutralState.call(this, options);\n    },\n\n    /**\n     * Apply this filter to the input image data provided.\n     *\n     * Determines whether to use WebGL or Canvas2D based on the options.webgl flag.\n     *\n     * @param {Object} options\n     * @param {Number} options.passes The number of filters remaining to be executed\n     * @param {Boolean} options.webgl Whether to use webgl to render the filter.\n     * @param {WebGLTexture} options.sourceTexture The texture setup as the source to be filtered.\n     * @param {WebGLTexture} options.targetTexture The texture where filtered output should be drawn.\n     * @param {WebGLRenderingContext} options.context The GL context used for rendering.\n     * @param {Object} options.programCache A map of compiled shader programs, keyed by filter type.\n     */\n    applyTo: function applyTo(options) {\n      this.calculateMatrix();\n      filters.BaseFilter.prototype.applyTo.call(this, options);\n    }\n  });\n  /**\n   * Returns filter instance from an object representation\n   * @static\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] to be invoked after filter creation\n   * @return {fabric.Image.filters.HueRotation} Instance of fabric.Image.filters.HueRotation\n   */\n\n  fabric.Image.filters.HueRotation.fromObject = fabric.Image.filters.BaseFilter.fromObject;\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {}),\n      clone = fabric.util.object.clone;\n\n  if (fabric.Text) {\n    fabric.warn('fabric.Text is already defined');\n    return;\n  }\n  /**\n   * Text class\n   * @class fabric.Text\n   * @extends fabric.Object\n   * @return {fabric.Text} thisArg\n   * @tutorial {@link http://fabricjs.com/fabric-intro-part-2#text}\n   * @see {@link fabric.Text#initialize} for constructor definition\n   */\n\n\n  fabric.Text = fabric.util.createClass(fabric.Object,\n  /** @lends fabric.Text.prototype */\n  {\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Array\n     * @private\n     */\n    _dimensionAffectingProps: ['fontSize', 'fontWeight', 'fontFamily', 'fontStyle', 'lineHeight', 'text', 'charSpacing', 'textAlign', 'styles'],\n\n    /**\n     * @private\n     */\n    _reNewline: /\\r?\\n/,\n\n    /**\n     * Use this regular expression to filter for whitespaces that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpacesAndTabs: /[ \\t\\r]/g,\n\n    /**\n     * Use this regular expression to filter for whitespace that is not a new line.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reSpaceAndTab: /[ \\t\\r]/,\n\n    /**\n     * Use this regular expression to filter consecutive groups of non spaces.\n     * Mostly used when text is 'justify' aligned.\n     * @private\n     */\n    _reWords: /\\S+/g,\n\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'text',\n\n    /**\n     * Font size (in pixels)\n     * @type Number\n     * @default\n     */\n    fontSize: 40,\n\n    /**\n     * Font weight (e.g. bold, normal, 400, 600, 800)\n     * @type {(Number|String)}\n     * @default\n     */\n    fontWeight: 'normal',\n\n    /**\n     * Font family\n     * @type String\n     * @default\n     */\n    fontFamily: 'Times New Roman',\n\n    /**\n     * Text decoration underline.\n     * @type Boolean\n     * @default\n     */\n    underline: false,\n\n    /**\n     * Text decoration overline.\n     * @type Boolean\n     * @default\n     */\n    overline: false,\n\n    /**\n     * Text decoration linethrough.\n     * @type Boolean\n     * @default\n     */\n    linethrough: false,\n\n    /**\n     * Text alignment. Possible values: \"left\", \"center\", \"right\", \"justify\",\n     * \"justify-left\", \"justify-center\" or \"justify-right\".\n     * @type String\n     * @default\n     */\n    textAlign: 'left',\n\n    /**\n     * Font style . Possible values: \"\", \"normal\", \"italic\" or \"oblique\".\n     * @type String\n     * @default\n     */\n    fontStyle: 'normal',\n\n    /**\n     * Line height\n     * @type Number\n     * @default\n     */\n    lineHeight: 1.16,\n\n    /**\n     * Superscript schema object (minimum overlap)\n     * @type {Object}\n     * @default\n     */\n    superscript: {\n      size: 0.60,\n      // fontSize factor\n      baseline: -0.35 // baseline-shift factor (upwards)\n\n    },\n\n    /**\n     * Subscript schema object (minimum overlap)\n     * @type {Object}\n     * @default\n     */\n    subscript: {\n      size: 0.60,\n      // fontSize factor\n      baseline: 0.11 // baseline-shift factor (downwards)\n\n    },\n\n    /**\n     * Background color of text lines\n     * @type String\n     * @default\n     */\n    textBackgroundColor: '',\n\n    /**\n     * List of properties to consider when checking if\n     * state of an object is changed ({@link fabric.Object#hasStateChanged})\n     * as well as for history (undo/redo) purposes\n     * @type Array\n     */\n    stateProperties: fabric.Object.prototype.stateProperties.concat('fontFamily', 'fontWeight', 'fontSize', 'text', 'underline', 'overline', 'linethrough', 'textAlign', 'fontStyle', 'lineHeight', 'textBackgroundColor', 'charSpacing', 'styles'),\n\n    /**\n     * List of properties to consider when checking if cache needs refresh\n     * @type Array\n     */\n    cacheProperties: fabric.Object.prototype.cacheProperties.concat('fontFamily', 'fontWeight', 'fontSize', 'text', 'underline', 'overline', 'linethrough', 'textAlign', 'fontStyle', 'lineHeight', 'textBackgroundColor', 'charSpacing', 'styles'),\n\n    /**\n     * When defined, an object is rendered via stroke and this property specifies its color.\n     * <b>Backwards incompatibility note:</b> This property was named \"strokeStyle\" until v1.1.6\n     * @type String\n     * @default\n     */\n    stroke: null,\n\n    /**\n     * Shadow object representing shadow of this shape.\n     * <b>Backwards incompatibility note:</b> This property was named \"textShadow\" (String) until v1.2.11\n     * @type fabric.Shadow\n     * @default\n     */\n    shadow: null,\n\n    /**\n     * @private\n     */\n    _fontSizeFraction: 0.222,\n\n    /**\n     * @private\n     */\n    offsets: {\n      underline: 0.10,\n      linethrough: -0.315,\n      overline: -0.88\n    },\n\n    /**\n     * Text Line proportion to font Size (in pixels)\n     * @type Number\n     * @default\n     */\n    _fontSizeMult: 1.13,\n\n    /**\n     * additional space between characters\n     * expressed in thousands of em unit\n     * @type Number\n     * @default\n     */\n    charSpacing: 0,\n\n    /**\n     * Object containing character styles - top-level properties -> line numbers,\n     * 2nd-level properties - charater numbers\n     * @type Object\n     * @default\n     */\n    styles: null,\n\n    /**\n     * Reference to a context to measure text char or couple of chars\n     * the cacheContext of the canvas will be used or a freshly created one if the object is not on canvas\n     * once created it will be referenced on fabric._measuringContext to avoide creating a canvas for every\n     * text object created.\n     * @type {CanvasRenderingContext2D}\n     * @default\n     */\n    _measuringContext: null,\n\n    /**\n     * Baseline shift, stlyes only, keep at 0 for the main text object\n     * @type {Number}\n     * @default\n     */\n    deltaY: 0,\n\n    /**\n     * Array of properties that define a style unit (of 'styles').\n     * @type {Array}\n     * @default\n     */\n    _styleProperties: ['stroke', 'strokeWidth', 'fill', 'fontFamily', 'fontSize', 'fontWeight', 'fontStyle', 'underline', 'overline', 'linethrough', 'deltaY', 'textBackgroundColor'],\n\n    /**\n     * contains characters bounding boxes\n     */\n    __charBounds: [],\n\n    /**\n     * use this size when measuring text. To avoid IE11 rounding errors\n     * @type {Number}\n     * @default\n     * @readonly\n     * @private\n     */\n    CACHE_FONT_SIZE: 400,\n\n    /**\n     * contains the min text width to avoid getting 0\n     * @type {Number}\n     * @default\n     */\n    MIN_TEXT_WIDTH: 2,\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    initialize: function initialize(text, options) {\n      this.styles = options ? options.styles || {} : {};\n      this.text = text;\n      this.__skipDimension = true;\n      this.callSuper('initialize', options);\n      this.__skipDimension = false;\n      this.initDimensions();\n      this.setCoords();\n      this.setupState({\n        propertySet: '_dimensionAffectingProps'\n      });\n    },\n\n    /**\n     * Return a contex for measurement of text string.\n     * if created it gets stored for reuse\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.Text} thisArg\n     */\n    getMeasuringContext: function getMeasuringContext() {\n      // if we did not return we have to measure something.\n      if (!fabric._measuringContext) {\n        fabric._measuringContext = this.canvas && this.canvas.contextCache || fabric.util.createCanvasElement().getContext('2d');\n      }\n\n      return fabric._measuringContext;\n    },\n\n    /**\n     * @private\n     * Divides text into lines of text and lines of graphemes.\n     */\n    _splitText: function _splitText() {\n      var newLines = this._splitTextIntoLines(this.text);\n\n      this.textLines = newLines.lines;\n      this._textLines = newLines.graphemeLines;\n      this._unwrappedTextLines = newLines._unwrappedLines;\n      this._text = newLines.graphemeText;\n      return newLines;\n    },\n\n    /**\n     * Initialize or update text dimensions.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     */\n    initDimensions: function initDimensions() {\n      if (this.__skipDimension) {\n        return;\n      }\n\n      this._splitText();\n\n      this._clearCache();\n\n      this.width = this.calcTextWidth() || this.cursorWidth || this.MIN_TEXT_WIDTH;\n\n      if (this.textAlign.indexOf('justify') !== -1) {\n        // once text is measured we need to make space fatter to make justified text.\n        this.enlargeSpaces();\n      }\n\n      this.height = this.calcTextHeight();\n      this.saveState({\n        propertySet: '_dimensionAffectingProps'\n      });\n    },\n\n    /**\n     * Enlarge space boxes and shift the others\n     */\n    enlargeSpaces: function enlargeSpaces() {\n      var diffSpace, currentLineWidth, numberOfSpaces, accumulatedSpace, line, charBound, spaces;\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        if (this.textAlign !== 'justify' && (i === len - 1 || this.isEndOfWrapping(i))) {\n          continue;\n        }\n\n        accumulatedSpace = 0;\n        line = this._textLines[i];\n        currentLineWidth = this.getLineWidth(i);\n\n        if (currentLineWidth < this.width && (spaces = this.textLines[i].match(this._reSpacesAndTabs))) {\n          numberOfSpaces = spaces.length;\n          diffSpace = (this.width - currentLineWidth) / numberOfSpaces;\n\n          for (var j = 0, jlen = line.length; j <= jlen; j++) {\n            charBound = this.__charBounds[i][j];\n\n            if (this._reSpaceAndTab.test(line[j])) {\n              charBound.width += diffSpace;\n              charBound.kernedWidth += diffSpace;\n              charBound.left += accumulatedSpace;\n              accumulatedSpace += diffSpace;\n            } else {\n              charBound.left += accumulatedSpace;\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Detect if the text line is ended with an hard break\n     * text and itext do not have wrapping, return false\n     * @return {Boolean}\n     */\n    isEndOfWrapping: function isEndOfWrapping(lineIndex) {\n      return lineIndex === this._textLines.length - 1;\n    },\n\n    /**\n     * Detect if a line has a linebreak and so we need to account for it when moving\n     * and counting style.\n     * It return always for text and Itext.\n     * @return Number\n     */\n    missingNewlineOffset: function missingNewlineOffset() {\n      return 1;\n    },\n\n    /**\n     * Returns string representation of an instance\n     * @return {String} String representation of text object\n     */\n    toString: function toString() {\n      return '#<fabric.Text (' + this.complexity() + '): { \"text\": \"' + this.text + '\", \"fontFamily\": \"' + this.fontFamily + '\" }>';\n    },\n\n    /**\n     * Return the dimension and the zoom level needed to create a cache canvas\n     * big enough to host the object to be cached.\n     * @private\n     * @param {Object} dim.x width of object to be cached\n     * @param {Object} dim.y height of object to be cached\n     * @return {Object}.width width of canvas\n     * @return {Object}.height height of canvas\n     * @return {Object}.zoomX zoomX zoom value to unscale the canvas before drawing cache\n     * @return {Object}.zoomY zoomY zoom value to unscale the canvas before drawing cache\n     */\n    _getCacheCanvasDimensions: function _getCacheCanvasDimensions() {\n      var dims = this.callSuper('_getCacheCanvasDimensions');\n      var fontSize = this.fontSize;\n      dims.width += fontSize * dims.zoomX;\n      dims.height += fontSize * dims.zoomY;\n      return dims;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function _render(ctx) {\n      this._setTextStyles(ctx);\n\n      this._renderTextLinesBackground(ctx);\n\n      this._renderTextDecoration(ctx, 'underline');\n\n      this._renderText(ctx);\n\n      this._renderTextDecoration(ctx, 'overline');\n\n      this._renderTextDecoration(ctx, 'linethrough');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderText: function _renderText(ctx) {\n      if (this.paintFirst === 'stroke') {\n        this._renderTextStroke(ctx);\n\n        this._renderTextFill(ctx);\n      } else {\n        this._renderTextFill(ctx);\n\n        this._renderTextStroke(ctx);\n      }\n    },\n\n    /**\n     * Set the font parameter of the context with the object properties or with charStyle\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Object} [charStyle] object with font style properties\n     * @param {String} [charStyle.fontFamily] Font Family\n     * @param {Number} [charStyle.fontSize] Font size in pixels. ( without px suffix )\n     * @param {String} [charStyle.fontWeight] Font weight\n     * @param {String} [charStyle.fontStyle] Font style (italic|normal)\n     */\n    _setTextStyles: function _setTextStyles(ctx, charStyle, forMeasuring) {\n      ctx.textBaseline = 'alphabetic';\n      ctx.font = this._getFontDeclaration(charStyle, forMeasuring);\n    },\n\n    /**\n     * calculate and return the text Width measuring each line.\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @return {Number} Maximum width of fabric.Text object\n     */\n    calcTextWidth: function calcTextWidth() {\n      var maxWidth = this.getLineWidth(0);\n\n      for (var i = 1, len = this._textLines.length; i < len; i++) {\n        var currentLineWidth = this.getLineWidth(i);\n\n        if (currentLineWidth > maxWidth) {\n          maxWidth = currentLineWidth;\n        }\n      }\n\n      return maxWidth;\n    },\n\n    /**\n     * @private\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Text to render\n     * @param {Number} left Left position of text\n     * @param {Number} top Top position of text\n     * @param {Number} lineIndex Index of a line in a text\n     */\n    _renderTextLine: function _renderTextLine(method, ctx, line, left, top, lineIndex) {\n      this._renderChars(method, ctx, line, left, top, lineIndex);\n    },\n\n    /**\n     * Renders the text background for lines, taking care of style\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextLinesBackground: function _renderTextLinesBackground(ctx) {\n      if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor')) {\n        return;\n      }\n\n      var lineTopOffset = 0,\n          heightOfLine,\n          lineLeftOffset,\n          originalFill = ctx.fillStyle,\n          line,\n          lastColor,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(),\n          boxStart = 0,\n          boxWidth = 0,\n          charBox,\n          currentColor;\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this.getHeightOfLine(i);\n\n        if (!this.textBackgroundColor && !this.styleHas('textBackgroundColor', i)) {\n          lineTopOffset += heightOfLine;\n          continue;\n        }\n\n        line = this._textLines[i];\n        lineLeftOffset = this._getLineLeftOffset(i);\n        boxWidth = 0;\n        boxStart = 0;\n        lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          charBox = this.__charBounds[i][j];\n          currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n\n          if (currentColor !== lastColor) {\n            ctx.fillStyle = lastColor;\n            lastColor && ctx.fillRect(leftOffset + lineLeftOffset + boxStart, topOffset + lineTopOffset, boxWidth, heightOfLine / this.lineHeight);\n            boxStart = charBox.left;\n            boxWidth = charBox.width;\n            lastColor = currentColor;\n          } else {\n            boxWidth += charBox.kernedWidth;\n          }\n        }\n\n        if (currentColor) {\n          ctx.fillStyle = currentColor;\n          ctx.fillRect(leftOffset + lineLeftOffset + boxStart, topOffset + lineTopOffset, boxWidth, heightOfLine / this.lineHeight);\n        }\n\n        lineTopOffset += heightOfLine;\n      }\n\n      ctx.fillStyle = originalFill; // if there is text background color no\n      // other shadows should be casted\n\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * @private\n     * @param {Object} decl style declaration for cache\n     * @param {String} decl.fontFamily fontFamily\n     * @param {String} decl.fontStyle fontStyle\n     * @param {String} decl.fontWeight fontWeight\n     * @return {Object} reference to cache\n     */\n    getFontCache: function getFontCache(decl) {\n      var fontFamily = decl.fontFamily.toLowerCase();\n\n      if (!fabric.charWidthsCache[fontFamily]) {\n        fabric.charWidthsCache[fontFamily] = {};\n      }\n\n      var cache = fabric.charWidthsCache[fontFamily],\n          cacheProp = decl.fontStyle.toLowerCase() + '_' + (decl.fontWeight + '').toLowerCase();\n\n      if (!cache[cacheProp]) {\n        cache[cacheProp] = {};\n      }\n\n      return cache[cacheProp];\n    },\n\n    /**\n     * apply all the character style to canvas for rendering\n     * @private\n     * @param {String} _char\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} [decl]\n     */\n    _applyCharStyles: function _applyCharStyles(method, ctx, lineIndex, charIndex, styleDeclaration) {\n      this._setFillStyles(ctx, styleDeclaration);\n\n      this._setStrokeStyles(ctx, styleDeclaration);\n\n      ctx.font = this._getFontDeclaration(styleDeclaration);\n    },\n\n    /**\n     * measure and return the width of a single character.\n     * possibly overridden to accommodate different measure logic or\n     * to hook some external lib for character measurement\n     * @private\n     * @param {String} char to be measured\n     * @param {Object} charStyle style of char to be measured\n     * @param {String} [previousChar] previous char\n     * @param {Object} [prevCharStyle] style of previous char\n     */\n    _measureChar: function _measureChar(_char, charStyle, previousChar, prevCharStyle) {\n      // first i try to return from cache\n      var fontCache = this.getFontCache(charStyle),\n          fontDeclaration = this._getFontDeclaration(charStyle),\n          previousFontDeclaration = this._getFontDeclaration(prevCharStyle),\n          couple = previousChar + _char,\n          stylesAreEqual = fontDeclaration === previousFontDeclaration,\n          width,\n          coupleWidth,\n          previousWidth,\n          fontMultiplier = charStyle.fontSize / this.CACHE_FONT_SIZE,\n          kernedWidth;\n\n      if (previousChar && fontCache[previousChar] !== undefined) {\n        previousWidth = fontCache[previousChar];\n      }\n\n      if (fontCache[_char] !== undefined) {\n        kernedWidth = width = fontCache[_char];\n      }\n\n      if (stylesAreEqual && fontCache[couple] !== undefined) {\n        coupleWidth = fontCache[couple];\n        kernedWidth = coupleWidth - previousWidth;\n      }\n\n      if (width === undefined || previousWidth === undefined || coupleWidth === undefined) {\n        var ctx = this.getMeasuringContext(); // send a TRUE to specify measuring font size CACHE_FONT_SIZE\n\n        this._setTextStyles(ctx, charStyle, true);\n      }\n\n      if (width === undefined) {\n        kernedWidth = width = ctx.measureText(_char).width;\n        fontCache[_char] = width;\n      }\n\n      if (previousWidth === undefined && stylesAreEqual && previousChar) {\n        previousWidth = ctx.measureText(previousChar).width;\n        fontCache[previousChar] = previousWidth;\n      }\n\n      if (stylesAreEqual && coupleWidth === undefined) {\n        // we can measure the kerning couple and subtract the width of the previous character\n        coupleWidth = ctx.measureText(couple).width;\n        fontCache[couple] = coupleWidth;\n        kernedWidth = coupleWidth - previousWidth;\n      }\n\n      return {\n        width: width * fontMultiplier,\n        kernedWidth: kernedWidth * fontMultiplier\n      };\n    },\n\n    /**\n     * Computes height of character at given position\n     * @param {Number} line the line number\n     * @param {Number} char the character number\n     * @return {Number} fontSize of the character\n     */\n    getHeightOfChar: function getHeightOfChar(line, _char2) {\n      return this.getValueOfPropertyAt(line, _char2, 'fontSize');\n    },\n\n    /**\n     * measure a text line measuring all characters.\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    measureLine: function measureLine(lineIndex) {\n      var lineInfo = this._measureLine(lineIndex);\n\n      if (this.charSpacing !== 0) {\n        lineInfo.width -= this._getWidthOfCharSpacing();\n      }\n\n      if (lineInfo.width < 0) {\n        lineInfo.width = 0;\n      }\n\n      return lineInfo;\n    },\n\n    /**\n     * measure every grapheme of a line, populating __charBounds\n     * @param {Number} lineIndex\n     * @return {Object} object.width total width of characters\n     * @return {Object} object.widthOfSpaces length of chars that match this._reSpacesAndTabs\n     */\n    _measureLine: function _measureLine(lineIndex) {\n      var width = 0,\n          i,\n          grapheme,\n          line = this._textLines[lineIndex],\n          prevGrapheme,\n          graphemeInfo,\n          numOfSpaces = 0,\n          lineBounds = new Array(line.length);\n      this.__charBounds[lineIndex] = lineBounds;\n\n      for (i = 0; i < line.length; i++) {\n        grapheme = line[i];\n        graphemeInfo = this._getGraphemeBox(grapheme, lineIndex, i, prevGrapheme);\n        lineBounds[i] = graphemeInfo;\n        width += graphemeInfo.kernedWidth;\n        prevGrapheme = grapheme;\n      } // this latest bound box represent the last character of the line\n      // to simplify cursor handling in interactive mode.\n\n\n      lineBounds[i] = {\n        left: graphemeInfo ? graphemeInfo.left + graphemeInfo.width : 0,\n        width: 0,\n        kernedWidth: 0,\n        height: this.fontSize\n      };\n      return {\n        width: width,\n        numOfSpaces: numOfSpaces\n      };\n    },\n\n    /**\n     * Measure and return the info of a single grapheme.\n     * needs the the info of previous graphemes already filled\n     * @private\n     * @param {String} grapheme to be measured\n     * @param {Number} lineIndex index of the line where the char is\n     * @param {Number} charIndex position in the line\n     * @param {String} [prevGrapheme] character preceding the one to be measured\n     */\n    _getGraphemeBox: function _getGraphemeBox(grapheme, lineIndex, charIndex, prevGrapheme, skipLeft) {\n      var style = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n          prevStyle = prevGrapheme ? this.getCompleteStyleDeclaration(lineIndex, charIndex - 1) : {},\n          info = this._measureChar(grapheme, style, prevGrapheme, prevStyle),\n          kernedWidth = info.kernedWidth,\n          width = info.width,\n          charSpacing;\n\n      if (this.charSpacing !== 0) {\n        charSpacing = this._getWidthOfCharSpacing();\n        width += charSpacing;\n        kernedWidth += charSpacing;\n      }\n\n      var box = {\n        width: width,\n        left: 0,\n        height: style.fontSize,\n        kernedWidth: kernedWidth,\n        deltaY: style.deltaY\n      };\n\n      if (charIndex > 0 && !skipLeft) {\n        var previousBox = this.__charBounds[lineIndex][charIndex - 1];\n        box.left = previousBox.left + previousBox.width + info.kernedWidth - info.width;\n      }\n\n      return box;\n    },\n\n    /**\n     * Calculate height of line at 'lineIndex'\n     * @param {Number} lineIndex index of line to calculate\n     * @return {Number}\n     */\n    getHeightOfLine: function getHeightOfLine(lineIndex) {\n      if (this.__lineHeights[lineIndex]) {\n        return this.__lineHeights[lineIndex];\n      }\n\n      var line = this._textLines[lineIndex],\n          // char 0 is measured before the line cycle because it nneds to char\n      // emptylines\n      maxHeight = this.getHeightOfChar(lineIndex, 0);\n\n      for (var i = 1, len = line.length; i < len; i++) {\n        maxHeight = Math.max(this.getHeightOfChar(lineIndex, i), maxHeight);\n      }\n\n      return this.__lineHeights[lineIndex] = maxHeight * this.lineHeight * this._fontSizeMult;\n    },\n\n    /**\n     * Calculate text box height\n     */\n    calcTextHeight: function calcTextHeight() {\n      var lineHeight,\n          height = 0;\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineHeight = this.getHeightOfLine(i);\n        height += i === len - 1 ? lineHeight / this.lineHeight : lineHeight;\n      }\n\n      return height;\n    },\n\n    /**\n     * @private\n     * @return {Number} Left offset\n     */\n    _getLeftOffset: function _getLeftOffset() {\n      return -this.width / 2;\n    },\n\n    /**\n     * @private\n     * @return {Number} Top offset\n     */\n    _getTopOffset: function _getTopOffset() {\n      return -this.height / 2;\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} method Method name (\"fillText\" or \"strokeText\")\n     */\n    _renderTextCommon: function _renderTextCommon(ctx, method) {\n      ctx.save();\n\n      var lineHeights = 0,\n          left = this._getLeftOffset(),\n          top = this._getTopOffset(),\n          offsets = this._applyPatternGradientTransform(ctx, method === 'fillText' ? this.fill : this.stroke);\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        var heightOfLine = this.getHeightOfLine(i),\n            maxHeight = heightOfLine / this.lineHeight,\n            leftOffset = this._getLineLeftOffset(i);\n\n        this._renderTextLine(method, ctx, this._textLines[i], left + leftOffset - offsets.offsetX, top + lineHeights + maxHeight - offsets.offsetY, i);\n\n        lineHeights += heightOfLine;\n      }\n\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextFill: function _renderTextFill(ctx) {\n      if (!this.fill && !this.styleHas('fill')) {\n        return;\n      }\n\n      this._renderTextCommon(ctx, 'fillText');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextStroke: function _renderTextStroke(ctx) {\n      if ((!this.stroke || this.strokeWidth === 0) && this.isEmptyStyles()) {\n        return;\n      }\n\n      if (this.shadow && !this.shadow.affectStroke) {\n        this._removeShadow(ctx);\n      }\n\n      ctx.save();\n\n      this._setLineDash(ctx, this.strokeDashArray);\n\n      ctx.beginPath();\n\n      this._renderTextCommon(ctx, 'strokeText');\n\n      ctx.closePath();\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {String} line Content of the line\n     * @param {Number} left\n     * @param {Number} top\n     * @param {Number} lineIndex\n     * @param {Number} charOffset\n     */\n    _renderChars: function _renderChars(method, ctx, line, left, top, lineIndex) {\n      // set proper line offset\n      var lineHeight = this.getHeightOfLine(lineIndex),\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          actualStyle,\n          nextStyle,\n          charsToRender = '',\n          charBox,\n          boxWidth = 0,\n          timeToRender,\n          shortCut = !isJustify && this.charSpacing === 0 && this.isEmptyStyles(lineIndex);\n      ctx.save();\n      top -= lineHeight * this._fontSizeFraction / this.lineHeight;\n\n      if (shortCut) {\n        // render all the line in one pass without checking\n        this._renderChar(method, ctx, lineIndex, 0, this.textLines[lineIndex], left, top, lineHeight);\n\n        ctx.restore();\n        return;\n      }\n\n      for (var i = 0, len = line.length - 1; i <= len; i++) {\n        timeToRender = i === len || this.charSpacing;\n        charsToRender += line[i];\n        charBox = this.__charBounds[lineIndex][i];\n\n        if (boxWidth === 0) {\n          left += charBox.kernedWidth - charBox.width;\n          boxWidth += charBox.width;\n        } else {\n          boxWidth += charBox.kernedWidth;\n        }\n\n        if (isJustify && !timeToRender) {\n          if (this._reSpaceAndTab.test(line[i])) {\n            timeToRender = true;\n          }\n        }\n\n        if (!timeToRender) {\n          // if we have charSpacing, we render char by char\n          actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n          nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n          timeToRender = this._hasStyleChanged(actualStyle, nextStyle);\n        }\n\n        if (timeToRender) {\n          this._renderChar(method, ctx, lineIndex, i, charsToRender, left, top, lineHeight);\n\n          charsToRender = '';\n          actualStyle = nextStyle;\n          left += boxWidth;\n          boxWidth = 0;\n        }\n      }\n\n      ctx.restore();\n    },\n\n    /**\n     * @private\n     * @param {String} method\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {String} _char\n     * @param {Number} left Left coordinate\n     * @param {Number} top Top coordinate\n     * @param {Number} lineHeight Height of the line\n     */\n    _renderChar: function _renderChar(method, ctx, lineIndex, charIndex, _char, left, top) {\n      var decl = this._getStyleDeclaration(lineIndex, charIndex),\n          fullDecl = this.getCompleteStyleDeclaration(lineIndex, charIndex),\n          shouldFill = method === 'fillText' && fullDecl.fill,\n          shouldStroke = method === 'strokeText' && fullDecl.stroke && fullDecl.strokeWidth;\n\n      if (!shouldStroke && !shouldFill) {\n        return;\n      }\n\n      decl && ctx.save();\n\n      this._applyCharStyles(method, ctx, lineIndex, charIndex, fullDecl);\n\n      if (decl && decl.textBackgroundColor) {\n        this._removeShadow(ctx);\n      }\n\n      if (decl && decl.deltaY) {\n        top += decl.deltaY;\n      }\n\n      shouldFill && ctx.fillText(_char, left, top);\n      shouldStroke && ctx.strokeText(_char, left, top);\n      decl && ctx.restore();\n    },\n\n    /**\n     * Turns the character into a 'superior figure' (i.e. 'superscript')\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    setSuperscript: function setSuperscript(start, end) {\n      return this._setScript(start, end, this.superscript);\n    },\n\n    /**\n     * Turns the character into an 'inferior figure' (i.e. 'subscript')\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    setSubscript: function setSubscript(start, end) {\n      return this._setScript(start, end, this.subscript);\n    },\n\n    /**\n     * Applies 'schema' at given position\n     * @private\n     * @param {Number} start selection start\n     * @param {Number} end selection end\n     * @param {Number} schema\n     * @returns {fabric.Text} thisArg\n     * @chainable\n     */\n    _setScript: function _setScript(start, end, schema) {\n      var loc = this.get2DCursorLocation(start, true),\n          fontSize = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'fontSize'),\n          dy = this.getValueOfPropertyAt(loc.lineIndex, loc.charIndex, 'deltaY'),\n          style = {\n        fontSize: fontSize * schema.size,\n        deltaY: dy + fontSize * schema.baseline\n      };\n      this.setSelectionStyles(style, start, end);\n      return this;\n    },\n\n    /**\n     * @private\n     * @param {Object} prevStyle\n     * @param {Object} thisStyle\n     */\n    _hasStyleChanged: function _hasStyleChanged(prevStyle, thisStyle) {\n      return prevStyle.fill !== thisStyle.fill || prevStyle.stroke !== thisStyle.stroke || prevStyle.strokeWidth !== thisStyle.strokeWidth || prevStyle.fontSize !== thisStyle.fontSize || prevStyle.fontFamily !== thisStyle.fontFamily || prevStyle.fontWeight !== thisStyle.fontWeight || prevStyle.fontStyle !== thisStyle.fontStyle || prevStyle.deltaY !== thisStyle.deltaY;\n    },\n\n    /**\n     * @private\n     * @param {Object} prevStyle\n     * @param {Object} thisStyle\n     */\n    _hasStyleChangedForSvg: function _hasStyleChangedForSvg(prevStyle, thisStyle) {\n      return this._hasStyleChanged(prevStyle, thisStyle) || prevStyle.overline !== thisStyle.overline || prevStyle.underline !== thisStyle.underline || prevStyle.linethrough !== thisStyle.linethrough;\n    },\n\n    /**\n     * @private\n     * @param {Number} lineIndex index text line\n     * @return {Number} Line left offset\n     */\n    _getLineLeftOffset: function _getLineLeftOffset(lineIndex) {\n      var lineWidth = this.getLineWidth(lineIndex);\n\n      if (this.textAlign === 'center') {\n        return (this.width - lineWidth) / 2;\n      }\n\n      if (this.textAlign === 'right') {\n        return this.width - lineWidth;\n      }\n\n      if (this.textAlign === 'justify-center' && this.isEndOfWrapping(lineIndex)) {\n        return (this.width - lineWidth) / 2;\n      }\n\n      if (this.textAlign === 'justify-right' && this.isEndOfWrapping(lineIndex)) {\n        return this.width - lineWidth;\n      }\n\n      return 0;\n    },\n\n    /**\n     * @private\n     */\n    _clearCache: function _clearCache() {\n      this.__lineWidths = [];\n      this.__lineHeights = [];\n      this.__charBounds = [];\n    },\n\n    /**\n     * @private\n     */\n    _shouldClearDimensionCache: function _shouldClearDimensionCache() {\n      var shouldClear = this._forceClearCache;\n      shouldClear || (shouldClear = this.hasStateChanged('_dimensionAffectingProps'));\n\n      if (shouldClear) {\n        this.dirty = true;\n        this._forceClearCache = false;\n      }\n\n      return shouldClear;\n    },\n\n    /**\n     * Measure a single line given its index. Used to calculate the initial\n     * text bounding box. The values are calculated and stored in __lineWidths cache.\n     * @private\n     * @param {Number} lineIndex line number\n     * @return {Number} Line width\n     */\n    getLineWidth: function getLineWidth(lineIndex) {\n      if (this.__lineWidths[lineIndex]) {\n        return this.__lineWidths[lineIndex];\n      }\n\n      var width,\n          line = this._textLines[lineIndex],\n          lineInfo;\n\n      if (line === '') {\n        width = 0;\n      } else {\n        lineInfo = this.measureLine(lineIndex);\n        width = lineInfo.width;\n      }\n\n      this.__lineWidths[lineIndex] = width;\n      return width;\n    },\n    _getWidthOfCharSpacing: function _getWidthOfCharSpacing() {\n      if (this.charSpacing !== 0) {\n        return this.fontSize * this.charSpacing / 1000;\n      }\n\n      return 0;\n    },\n\n    /**\n     * Retrieves the value of property at given character position\n     * @param {Number} lineIndex the line number\n     * @param {Number} charIndex the charater number\n     * @param {String} property the property name\n     * @returns the value of 'property'\n     */\n    getValueOfPropertyAt: function getValueOfPropertyAt(lineIndex, charIndex, property) {\n      var charStyle = this._getStyleDeclaration(lineIndex, charIndex);\n\n      if (charStyle && typeof charStyle[property] !== 'undefined') {\n        return charStyle[property];\n      }\n\n      return this[property];\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _renderTextDecoration: function _renderTextDecoration(ctx, type) {\n      if (!this[type] && !this.styleHas(type)) {\n        return;\n      }\n\n      var heightOfLine,\n          size,\n          _size,\n          lineLeftOffset,\n          dy,\n          _dy,\n          line,\n          lastDecoration,\n          leftOffset = this._getLeftOffset(),\n          topOffset = this._getTopOffset(),\n          top,\n          boxStart,\n          boxWidth,\n          charBox,\n          currentDecoration,\n          maxHeight,\n          currentFill,\n          lastFill,\n          charSpacing = this._getWidthOfCharSpacing();\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        heightOfLine = this.getHeightOfLine(i);\n\n        if (!this[type] && !this.styleHas(type, i)) {\n          topOffset += heightOfLine;\n          continue;\n        }\n\n        line = this._textLines[i];\n        maxHeight = heightOfLine / this.lineHeight;\n        lineLeftOffset = this._getLineLeftOffset(i);\n        boxStart = 0;\n        boxWidth = 0;\n        lastDecoration = this.getValueOfPropertyAt(i, 0, type);\n        lastFill = this.getValueOfPropertyAt(i, 0, 'fill');\n        top = topOffset + maxHeight * (1 - this._fontSizeFraction);\n        size = this.getHeightOfChar(i, 0);\n        dy = this.getValueOfPropertyAt(i, 0, 'deltaY');\n\n        for (var j = 0, jlen = line.length; j < jlen; j++) {\n          charBox = this.__charBounds[i][j];\n          currentDecoration = this.getValueOfPropertyAt(i, j, type);\n          currentFill = this.getValueOfPropertyAt(i, j, 'fill');\n          _size = this.getHeightOfChar(i, j);\n          _dy = this.getValueOfPropertyAt(i, j, 'deltaY');\n\n          if ((currentDecoration !== lastDecoration || currentFill !== lastFill || _size !== size || _dy !== dy) && boxWidth > 0) {\n            ctx.fillStyle = lastFill;\n            lastDecoration && lastFill && ctx.fillRect(leftOffset + lineLeftOffset + boxStart, top + this.offsets[type] * size + dy, boxWidth, this.fontSize / 15);\n            boxStart = charBox.left;\n            boxWidth = charBox.width;\n            lastDecoration = currentDecoration;\n            lastFill = currentFill;\n            size = _size;\n            dy = _dy;\n          } else {\n            boxWidth += charBox.kernedWidth;\n          }\n        }\n\n        ctx.fillStyle = currentFill;\n        currentDecoration && currentFill && ctx.fillRect(leftOffset + lineLeftOffset + boxStart, top + this.offsets[type] * size + dy, boxWidth - charSpacing, this.fontSize / 15);\n        topOffset += heightOfLine;\n      } // if there is text background color no\n      // other shadows should be casted\n\n\n      this._removeShadow(ctx);\n    },\n\n    /**\n     * return font declaration string for canvas context\n     * @param {Object} [styleObject] object\n     * @returns {String} font declaration formatted for canvas context.\n     */\n    _getFontDeclaration: function _getFontDeclaration(styleObject, forMeasuring) {\n      var style = styleObject || this,\n          family = this.fontFamily,\n          fontIsGeneric = fabric.Text.genericFonts.indexOf(family.toLowerCase()) > -1;\n      var fontFamily = family === undefined || family.indexOf('\\'') > -1 || family.indexOf(',') > -1 || family.indexOf('\"') > -1 || fontIsGeneric ? style.fontFamily : '\"' + style.fontFamily + '\"';\n      return [// node-canvas needs \"weight style\", while browsers need \"style weight\"\n      // verify if this can be fixed in JSDOM\n      fabric.isLikelyNode ? style.fontWeight : style.fontStyle, fabric.isLikelyNode ? style.fontStyle : style.fontWeight, forMeasuring ? this.CACHE_FONT_SIZE + 'px' : style.fontSize + 'px', fontFamily].join(' ');\n    },\n\n    /**\n     * Renders text instance on a specified context\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function render(ctx) {\n      // do not render if object is not visible\n      if (!this.visible) {\n        return;\n      }\n\n      if (this.canvas && this.canvas.skipOffscreen && !this.group && !this.isOnScreen()) {\n        return;\n      }\n\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n      }\n\n      this.callSuper('render', ctx);\n    },\n\n    /**\n     * Returns the text as an array of lines.\n     * @param {String} text text to split\n     * @returns {Array} Lines in the text\n     */\n    _splitTextIntoLines: function _splitTextIntoLines(text) {\n      var lines = text.split(this._reNewline),\n          newLines = new Array(lines.length),\n          newLine = ['\\n'],\n          newText = [];\n\n      for (var i = 0; i < lines.length; i++) {\n        newLines[i] = fabric.util.string.graphemeSplit(lines[i]);\n        newText = newText.concat(newLines[i], newLine);\n      }\n\n      newText.pop();\n      return {\n        _unwrappedLines: newLines,\n        lines: lines,\n        graphemeText: newText,\n        graphemeLines: newLines\n      };\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} Object representation of an instance\n     */\n    toObject: function toObject(propertiesToInclude) {\n      var additionalProperties = ['text', 'fontSize', 'fontWeight', 'fontFamily', 'fontStyle', 'lineHeight', 'underline', 'overline', 'linethrough', 'textAlign', 'textBackgroundColor', 'charSpacing'].concat(propertiesToInclude);\n      var obj = this.callSuper('toObject', additionalProperties);\n      obj.styles = clone(this.styles, true);\n      return obj;\n    },\n\n    /**\n     * Sets property to a given value. When changing position/dimension -related properties (left, top, scale, angle, etc.) `set` does not update position of object's borders/controls. If you need to update those, call `setCoords()`.\n     * @param {String|Object} key Property name or object (if object, iterate over the object properties)\n     * @param {Object|Function} value Property value (if function, the value is passed into it and its return value is used as a new one)\n     * @return {fabric.Object} thisArg\n     * @chainable\n     */\n    set: function set(key, value) {\n      this.callSuper('set', key, value);\n      var needsDims = false;\n\n      if (typeof key === 'object') {\n        for (var _key in key) {\n          needsDims = needsDims || this._dimensionAffectingProps.indexOf(_key) !== -1;\n        }\n      } else {\n        needsDims = this._dimensionAffectingProps.indexOf(key) !== -1;\n      }\n\n      if (needsDims) {\n        this.initDimensions();\n        this.setCoords();\n      }\n\n      return this;\n    },\n\n    /**\n     * Returns complexity of an instance\n     * @return {Number} complexity\n     */\n    complexity: function complexity() {\n      return 1;\n    }\n  });\n  /* _FROM_SVG_START_ */\n\n  /**\n   * List of attribute names to account for when parsing SVG element (used by {@link fabric.Text.fromElement})\n   * @static\n   * @memberOf fabric.Text\n   * @see: http://www.w3.org/TR/SVG/text.html#TextElement\n   */\n\n  fabric.Text.ATTRIBUTE_NAMES = fabric.SHARED_ATTRIBUTES.concat('x y dx dy font-family font-style font-weight font-size letter-spacing text-decoration text-anchor'.split(' '));\n  /**\n   * Default SVG font size\n   * @static\n   * @memberOf fabric.Text\n   */\n\n  fabric.Text.DEFAULT_SVG_FONT_SIZE = 16;\n  /**\n   * Returns fabric.Text instance from an SVG element (<b>not yet implemented</b>)\n   * @static\n   * @memberOf fabric.Text\n   * @param {SVGElement} element Element to parse\n   * @param {Function} callback callback function invoked after parsing\n   * @param {Object} [options] Options object\n   */\n\n  fabric.Text.fromElement = function (element, callback, options) {\n    if (!element) {\n      return callback(null);\n    }\n\n    var parsedAttributes = fabric.parseAttributes(element, fabric.Text.ATTRIBUTE_NAMES),\n        parsedAnchor = parsedAttributes.textAnchor || 'left';\n    options = fabric.util.object.extend(options ? clone(options) : {}, parsedAttributes);\n    options.top = options.top || 0;\n    options.left = options.left || 0;\n\n    if (parsedAttributes.textDecoration) {\n      var textDecoration = parsedAttributes.textDecoration;\n\n      if (textDecoration.indexOf('underline') !== -1) {\n        options.underline = true;\n      }\n\n      if (textDecoration.indexOf('overline') !== -1) {\n        options.overline = true;\n      }\n\n      if (textDecoration.indexOf('line-through') !== -1) {\n        options.linethrough = true;\n      }\n\n      delete options.textDecoration;\n    }\n\n    if ('dx' in parsedAttributes) {\n      options.left += parsedAttributes.dx;\n    }\n\n    if ('dy' in parsedAttributes) {\n      options.top += parsedAttributes.dy;\n    }\n\n    if (!('fontSize' in options)) {\n      options.fontSize = fabric.Text.DEFAULT_SVG_FONT_SIZE;\n    }\n\n    var textContent = ''; // The XML is not properly parsed in IE9 so a workaround to get\n    // textContent is through firstChild.data. Another workaround would be\n    // to convert XML loaded from a file to be converted using DOMParser (same way loadSVGFromString() does)\n\n    if (!('textContent' in element)) {\n      if ('firstChild' in element && element.firstChild !== null) {\n        if ('data' in element.firstChild && element.firstChild.data !== null) {\n          textContent = element.firstChild.data;\n        }\n      }\n    } else {\n      textContent = element.textContent;\n    }\n\n    textContent = textContent.replace(/^\\s+|\\s+$|\\n+/g, '').replace(/\\s+/g, ' ');\n    var originalStrokeWidth = options.strokeWidth;\n    options.strokeWidth = 0;\n    var text = new fabric.Text(textContent, options),\n        textHeightScaleFactor = text.getScaledHeight() / text.height,\n        lineHeightDiff = (text.height + text.strokeWidth) * text.lineHeight - text.height,\n        scaledDiff = lineHeightDiff * textHeightScaleFactor,\n        textHeight = text.getScaledHeight() + scaledDiff,\n        offX = 0;\n    /*\n      Adjust positioning:\n        x/y attributes in SVG correspond to the bottom-left corner of text bounding box\n        fabric output by default at top, left.\n    */\n\n    if (parsedAnchor === 'center') {\n      offX = text.getScaledWidth() / 2;\n    }\n\n    if (parsedAnchor === 'right') {\n      offX = text.getScaledWidth();\n    }\n\n    text.set({\n      left: text.left - offX,\n      top: text.top - (textHeight - text.fontSize * (0.07 + text._fontSizeFraction)) / text.lineHeight,\n      strokeWidth: typeof originalStrokeWidth !== 'undefined' ? originalStrokeWidth : 1\n    });\n    callback(text);\n  };\n  /* _FROM_SVG_END_ */\n\n  /**\n   * Returns fabric.Text instance from an object representation\n   * @static\n   * @memberOf fabric.Text\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Text instance is created\n   */\n\n\n  fabric.Text.fromObject = function (object, callback) {\n    return fabric.Object._fromObject('Text', object, callback, 'text');\n  };\n\n  fabric.Text.genericFonts = ['sans-serif', 'serif', 'cursive', 'fantasy', 'monospace'];\n  fabric.util.createAccessors && fabric.util.createAccessors(fabric.Text);\n})(typeof exports !== 'undefined' ? exports : this);\n\n(function () {\n  fabric.util.object.extend(fabric.Text.prototype,\n  /** @lends fabric.Text.prototype */\n  {\n    /**\n     * Returns true if object has no styling or no styling in a line\n     * @param {Number} lineIndex , lineIndex is on wrapped lines.\n     * @return {Boolean}\n     */\n    isEmptyStyles: function isEmptyStyles(lineIndex) {\n      if (!this.styles) {\n        return true;\n      }\n\n      if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n        return true;\n      }\n\n      var obj = typeof lineIndex === 'undefined' ? this.styles : {\n        line: this.styles[lineIndex]\n      };\n\n      for (var p1 in obj) {\n        for (var p2 in obj[p1]) {\n          // eslint-disable-next-line no-unused-vars\n          for (var p3 in obj[p1][p2]) {\n            return false;\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * Returns true if object has a style property or has it ina specified line\n     * This function is used to detect if a text will use a particular property or not.\n     * @param {String} property to check for\n     * @param {Number} lineIndex to check the style on\n     * @return {Boolean}\n     */\n    styleHas: function styleHas(property, lineIndex) {\n      if (!this.styles || !property || property === '') {\n        return false;\n      }\n\n      if (typeof lineIndex !== 'undefined' && !this.styles[lineIndex]) {\n        return false;\n      }\n\n      var obj = typeof lineIndex === 'undefined' ? this.styles : {\n        0: this.styles[lineIndex]\n      }; // eslint-disable-next-line\n\n      for (var p1 in obj) {\n        // eslint-disable-next-line\n        for (var p2 in obj[p1]) {\n          if (typeof obj[p1][p2][property] !== 'undefined') {\n            return true;\n          }\n        }\n      }\n\n      return false;\n    },\n\n    /**\n     * Check if characters in a text have a value for a property\n     * whose value matches the textbox's value for that property.  If so,\n     * the character-level property is deleted.  If the character\n     * has no other properties, then it is also deleted.  Finally,\n     * if the line containing that character has no other characters\n     * then it also is deleted.\n     *\n     * @param {string} property The property to compare between characters and text.\n     */\n    cleanStyle: function cleanStyle(property) {\n      if (!this.styles || !property || property === '') {\n        return false;\n      }\n\n      var obj = this.styles,\n          stylesCount = 0,\n          letterCount,\n          stylePropertyValue,\n          allStyleObjectPropertiesMatch = true,\n          graphemeCount = 0,\n          styleObject; // eslint-disable-next-line\n\n      for (var p1 in obj) {\n        letterCount = 0; // eslint-disable-next-line\n\n        for (var p2 in obj[p1]) {\n          var styleObject = obj[p1][p2],\n              stylePropertyHasBeenSet = styleObject.hasOwnProperty(property);\n          stylesCount++;\n\n          if (stylePropertyHasBeenSet) {\n            if (!stylePropertyValue) {\n              stylePropertyValue = styleObject[property];\n            } else if (styleObject[property] !== stylePropertyValue) {\n              allStyleObjectPropertiesMatch = false;\n            }\n\n            if (styleObject[property] === this[property]) {\n              delete styleObject[property];\n            }\n          } else {\n            allStyleObjectPropertiesMatch = false;\n          }\n\n          if (Object.keys(styleObject).length !== 0) {\n            letterCount++;\n          } else {\n            delete obj[p1][p2];\n          }\n        }\n\n        if (letterCount === 0) {\n          delete obj[p1];\n        }\n      } // if every grapheme has the same style set then\n      // delete those styles and set it on the parent\n\n\n      for (var i = 0; i < this._textLines.length; i++) {\n        graphemeCount += this._textLines[i].length;\n      }\n\n      if (allStyleObjectPropertiesMatch && stylesCount === graphemeCount) {\n        this[property] = stylePropertyValue;\n        this.removeStyle(property);\n      }\n    },\n\n    /**\n     * Remove a style property or properties from all individual character styles\n     * in a text object.  Deletes the character style object if it contains no other style\n     * props.  Deletes a line style object if it contains no other character styles.\n     *\n     * @param {String} props The property to remove from character styles.\n     */\n    removeStyle: function removeStyle(property) {\n      if (!this.styles || !property || property === '') {\n        return;\n      }\n\n      var obj = this.styles,\n          line,\n          lineNum,\n          charNum;\n\n      for (lineNum in obj) {\n        line = obj[lineNum];\n\n        for (charNum in line) {\n          delete line[charNum][property];\n\n          if (Object.keys(line[charNum]).length === 0) {\n            delete line[charNum];\n          }\n        }\n\n        if (Object.keys(line).length === 0) {\n          delete obj[lineNum];\n        }\n      }\n    },\n\n    /**\n     * @private\n     */\n    _extendStyles: function _extendStyles(index, styles) {\n      var loc = this.get2DCursorLocation(index);\n\n      if (!this._getLineStyle(loc.lineIndex)) {\n        this._setLineStyle(loc.lineIndex);\n      }\n\n      if (!this._getStyleDeclaration(loc.lineIndex, loc.charIndex)) {\n        this._setStyleDeclaration(loc.lineIndex, loc.charIndex, {});\n      }\n\n      fabric.util.object.extend(this._getStyleDeclaration(loc.lineIndex, loc.charIndex), styles);\n    },\n\n    /**\n     * Returns 2d representation (lineIndex and charIndex) of cursor (or selection start)\n     * @param {Number} [selectionStart] Optional index. When not given, current selectionStart is used.\n     * @param {Boolean} [skipWrapping] consider the location for unwrapped lines. usefull to manage styles.\n     */\n    get2DCursorLocation: function get2DCursorLocation(selectionStart, skipWrapping) {\n      if (typeof selectionStart === 'undefined') {\n        selectionStart = this.selectionStart;\n      }\n\n      var lines = skipWrapping ? this._unwrappedTextLines : this._textLines,\n          len = lines.length;\n\n      for (var i = 0; i < len; i++) {\n        if (selectionStart <= lines[i].length) {\n          return {\n            lineIndex: i,\n            charIndex: selectionStart\n          };\n        }\n\n        selectionStart -= lines[i].length + this.missingNewlineOffset(i);\n      }\n\n      return {\n        lineIndex: i - 1,\n        charIndex: lines[i - 1].length < selectionStart ? lines[i - 1].length : selectionStart\n      };\n    },\n\n    /**\n     * Gets style of a current selection/cursor (at the start position)\n     * if startIndex or endIndex are not provided, slectionStart or selectionEnd will be used.\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n     * @param {Boolean} [complete] get full style or not\n     * @return {Array} styles an array with one, zero or more Style objects\n     */\n    getSelectionStyles: function getSelectionStyles(startIndex, endIndex, complete) {\n      if (typeof startIndex === 'undefined') {\n        startIndex = this.selectionStart || 0;\n      }\n\n      if (typeof endIndex === 'undefined') {\n        endIndex = this.selectionEnd || startIndex;\n      }\n\n      var styles = [];\n\n      for (var i = startIndex; i < endIndex; i++) {\n        styles.push(this.getStyleAtPosition(i, complete));\n      }\n\n      return styles;\n    },\n\n    /**\n     * Gets style of a current selection/cursor position\n     * @param {Number} position  to get styles at\n     * @param {Boolean} [complete] full style if true\n     * @return {Object} style Style object at a specified index\n     * @private\n     */\n    getStyleAtPosition: function getStyleAtPosition(position, complete) {\n      var loc = this.get2DCursorLocation(position),\n          style = complete ? this.getCompleteStyleDeclaration(loc.lineIndex, loc.charIndex) : this._getStyleDeclaration(loc.lineIndex, loc.charIndex);\n      return style || {};\n    },\n\n    /**\n     * Sets style of a current selection, if no selection exist, do not set anything.\n     * @param {Object} [styles] Styles object\n     * @param {Number} [startIndex] Start index to get styles at\n     * @param {Number} [endIndex] End index to get styles at, if not specified selectionEnd or startIndex + 1\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    setSelectionStyles: function setSelectionStyles(styles, startIndex, endIndex) {\n      if (typeof startIndex === 'undefined') {\n        startIndex = this.selectionStart || 0;\n      }\n\n      if (typeof endIndex === 'undefined') {\n        endIndex = this.selectionEnd || startIndex;\n      }\n\n      for (var i = startIndex; i < endIndex; i++) {\n        this._extendStyles(i, styles);\n      }\n      /* not included in _extendStyles to avoid clearing cache more than once */\n\n\n      this._forceClearCache = true;\n      return this;\n    },\n\n    /**\n     * get the reference, not a clone, of the style object for a given character\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @return {Object} style object\n     */\n    _getStyleDeclaration: function _getStyleDeclaration(lineIndex, charIndex) {\n      var lineStyle = this.styles && this.styles[lineIndex];\n\n      if (!lineStyle) {\n        return null;\n      }\n\n      return lineStyle[charIndex];\n    },\n\n    /**\n     * return a new object that contains all the style property for a character\n     * the object returned is newly created\n     * @param {Number} lineIndex of the line where the character is\n     * @param {Number} charIndex position of the character on the line\n     * @return {Object} style object\n     */\n    getCompleteStyleDeclaration: function getCompleteStyleDeclaration(lineIndex, charIndex) {\n      var style = this._getStyleDeclaration(lineIndex, charIndex) || {},\n          styleObject = {},\n          prop;\n\n      for (var i = 0; i < this._styleProperties.length; i++) {\n        prop = this._styleProperties[i];\n        styleObject[prop] = typeof style[prop] === 'undefined' ? this[prop] : style[prop];\n      }\n\n      return styleObject;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function _setStyleDeclaration(lineIndex, charIndex, style) {\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     *\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function _deleteStyleDeclaration(lineIndex, charIndex) {\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @return {Boolean} if the line exists or not\n     * @private\n     */\n    _getLineStyle: function _getLineStyle(lineIndex) {\n      return !!this.styles[lineIndex];\n    },\n\n    /**\n     * Set the line style to an empty object so that is initialized\n     * @param {Number} lineIndex\n     * @private\n     */\n    _setLineStyle: function _setLineStyle(lineIndex) {\n      this.styles[lineIndex] = {};\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @private\n     */\n    _deleteLineStyle: function _deleteLineStyle(lineIndex) {\n      delete this.styles[lineIndex];\n    }\n  });\n})();\n\n(function () {\n  function parseDecoration(object) {\n    if (object.textDecoration) {\n      object.textDecoration.indexOf('underline') > -1 && (object.underline = true);\n      object.textDecoration.indexOf('line-through') > -1 && (object.linethrough = true);\n      object.textDecoration.indexOf('overline') > -1 && (object.overline = true);\n      delete object.textDecoration;\n    }\n  }\n  /**\n   * IText class (introduced in <b>v1.4</b>) Events are also fired with \"text:\"\n   * prefix when observing canvas.\n   * @class fabric.IText\n   * @extends fabric.Text\n   * @mixes fabric.Observable\n   *\n   * @fires changed\n   * @fires selection:changed\n   * @fires editing:entered\n   * @fires editing:exited\n   *\n   * @return {fabric.IText} thisArg\n   * @see {@link fabric.IText#initialize} for constructor definition\n   *\n   * <p>Supported key combinations:</p>\n   * <pre>\n   *   Move cursor:                    left, right, up, down\n   *   Select character:               shift + left, shift + right\n   *   Select text vertically:         shift + up, shift + down\n   *   Move cursor by word:            alt + left, alt + right\n   *   Select words:                   shift + alt + left, shift + alt + right\n   *   Move cursor to line start/end:  cmd + left, cmd + right or home, end\n   *   Select till start/end of line:  cmd + shift + left, cmd + shift + right or shift + home, shift + end\n   *   Jump to start/end of text:      cmd + up, cmd + down\n   *   Select till start/end of text:  cmd + shift + up, cmd + shift + down or shift + pgUp, shift + pgDown\n   *   Delete character:               backspace\n   *   Delete word:                    alt + backspace\n   *   Delete line:                    cmd + backspace\n   *   Forward delete:                 delete\n   *   Copy text:                      ctrl/cmd + c\n   *   Paste text:                     ctrl/cmd + v\n   *   Cut text:                       ctrl/cmd + x\n   *   Select entire text:             ctrl/cmd + a\n   *   Quit editing                    tab or esc\n   * </pre>\n   *\n   * <p>Supported mouse/touch combination</p>\n   * <pre>\n   *   Position cursor:                click/touch\n   *   Create selection:               click/touch & drag\n   *   Create selection:               click & shift + click\n   *   Select word:                    double click\n   *   Select line:                    triple click\n   * </pre>\n   */\n\n\n  fabric.IText = fabric.util.createClass(fabric.Text, fabric.Observable,\n  /** @lends fabric.IText.prototype */\n  {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'i-text',\n\n    /**\n     * Index where text selection starts (or where cursor is when there is no selection)\n     * @type Number\n     * @default\n     */\n    selectionStart: 0,\n\n    /**\n     * Index where text selection ends\n     * @type Number\n     * @default\n     */\n    selectionEnd: 0,\n\n    /**\n     * Color of text selection\n     * @type String\n     * @default\n     */\n    selectionColor: 'rgba(17,119,255,0.3)',\n\n    /**\n     * Indicates whether text is in editing mode\n     * @type Boolean\n     * @default\n     */\n    isEditing: false,\n\n    /**\n     * Indicates whether a text can be edited\n     * @type Boolean\n     * @default\n     */\n    editable: true,\n\n    /**\n     * Border color of text object while it's in editing mode\n     * @type String\n     * @default\n     */\n    editingBorderColor: 'rgba(102,153,255,0.25)',\n\n    /**\n     * Width of cursor (in px)\n     * @type Number\n     * @default\n     */\n    cursorWidth: 2,\n\n    /**\n     * Color of default cursor (when not overwritten by character style)\n     * @type String\n     * @default\n     */\n    cursorColor: '#333',\n\n    /**\n     * Delay between cursor blink (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDelay: 1000,\n\n    /**\n     * Duration of cursor fadein (in ms)\n     * @type Number\n     * @default\n     */\n    cursorDuration: 600,\n\n    /**\n     * Indicates whether internal text char widths can be cached\n     * @type Boolean\n     * @default\n     */\n    caching: true,\n\n    /**\n     * @private\n     */\n    _reSpace: /\\s|\\n/,\n\n    /**\n     * @private\n     */\n    _currentCursorOpacity: 0,\n\n    /**\n     * @private\n     */\n    _selectionDirection: null,\n\n    /**\n     * @private\n     */\n    _abortCursorAnimation: false,\n\n    /**\n     * @private\n     */\n    __widthOfSpace: [],\n\n    /**\n     * Helps determining when the text is in composition, so that the cursor\n     * rendering is altered.\n     */\n    inCompositionMode: false,\n\n    /**\n     * Constructor\n     * @param {String} text Text string\n     * @param {Object} [options] Options object\n     * @return {fabric.IText} thisArg\n     */\n    initialize: function initialize(text, options) {\n      this.callSuper('initialize', text, options);\n      this.initBehavior();\n    },\n\n    /**\n     * Sets selection start (left boundary of a selection)\n     * @param {Number} index Index to set selection start to\n     */\n    setSelectionStart: function setSelectionStart(index) {\n      index = Math.max(index, 0);\n\n      this._updateAndFire('selectionStart', index);\n    },\n\n    /**\n     * Sets selection end (right boundary of a selection)\n     * @param {Number} index Index to set selection end to\n     */\n    setSelectionEnd: function setSelectionEnd(index) {\n      index = Math.min(index, this.text.length);\n\n      this._updateAndFire('selectionEnd', index);\n    },\n\n    /**\n     * @private\n     * @param {String} property 'selectionStart' or 'selectionEnd'\n     * @param {Number} index new position of property\n     */\n    _updateAndFire: function _updateAndFire(property, index) {\n      if (this[property] !== index) {\n        this._fireSelectionChanged();\n\n        this[property] = index;\n      }\n\n      this._updateTextarea();\n    },\n\n    /**\n     * Fires the even of selection changed\n     * @private\n     */\n    _fireSelectionChanged: function _fireSelectionChanged() {\n      this.fire('selection:changed');\n      this.canvas && this.canvas.fire('text:selection:changed', {\n        target: this\n      });\n    },\n\n    /**\n     * Initialize text dimensions. Render all text on given context\n     * or on a offscreen canvas to get the text width with measureText.\n     * Updates this.width and this.height with the proper values.\n     * Does not return dimensions.\n     * @private\n     */\n    initDimensions: function initDimensions() {\n      this.isEditing && this.initDelayedCursor();\n      this.clearContextTop();\n      this.callSuper('initDimensions');\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    render: function render(ctx) {\n      this.clearContextTop();\n      this.callSuper('render', ctx); // clear the cursorOffsetCache, so we ensure to calculate once per renderCursor\n      // the correct position but not at every cursor animation.\n\n      this.cursorOffsetCache = {};\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * @private\n     * @param {CanvasRenderingContext2D} ctx Context to render on\n     */\n    _render: function _render(ctx) {\n      this.callSuper('_render', ctx);\n    },\n\n    /**\n     * Prepare and clean the contextTop\n     */\n    clearContextTop: function clearContextTop(skipRestore) {\n      if (!this.isEditing) {\n        return;\n      }\n\n      if (this.canvas && this.canvas.contextTop) {\n        var ctx = this.canvas.contextTop,\n            v = this.canvas.viewportTransform;\n        ctx.save();\n        ctx.transform(v[0], v[1], v[2], v[3], v[4], v[5]);\n        this.transform(ctx);\n        this.transformMatrix && ctx.transform.apply(ctx, this.transformMatrix);\n\n        this._clearTextArea(ctx);\n\n        skipRestore || ctx.restore();\n      }\n    },\n\n    /**\n     * Renders cursor or selection (depending on what exists)\n     */\n    renderCursorOrSelection: function renderCursorOrSelection() {\n      if (!this.isEditing || !this.canvas) {\n        return;\n      }\n\n      var boundaries = this._getCursorBoundaries(),\n          ctx;\n\n      if (this.canvas && this.canvas.contextTop) {\n        ctx = this.canvas.contextTop;\n        this.clearContextTop(true);\n      } else {\n        ctx = this.canvas.contextContainer;\n        ctx.save();\n      }\n\n      if (this.selectionStart === this.selectionEnd) {\n        this.renderCursor(boundaries, ctx);\n      } else {\n        this.renderSelection(boundaries, ctx);\n      }\n\n      ctx.restore();\n    },\n    _clearTextArea: function _clearTextArea(ctx) {\n      // we add 4 pixel, to be sure to do not leave any pixel out\n      var width = this.width + 4,\n          height = this.height + 4;\n      ctx.clearRect(-width / 2, -height / 2, width, height);\n    },\n\n    /**\n     * Returns cursor boundaries (left, top, leftOffset, topOffset)\n     * @private\n     * @param {Array} chars Array of characters\n     * @param {String} typeOfBoundaries\n     */\n    _getCursorBoundaries: function _getCursorBoundaries(position) {\n      // left/top are left/top of entire text box\n      // leftOffset/topOffset are offset from that left/top point of a text box\n      if (typeof position === 'undefined') {\n        position = this.selectionStart;\n      }\n\n      var left = this._getLeftOffset(),\n          top = this._getTopOffset(),\n          offsets = this._getCursorBoundariesOffsets(position);\n\n      return {\n        left: left,\n        top: top,\n        leftOffset: offsets.left,\n        topOffset: offsets.top\n      };\n    },\n\n    /**\n     * @private\n     */\n    _getCursorBoundariesOffsets: function _getCursorBoundariesOffsets(position) {\n      if (this.cursorOffsetCache && 'top' in this.cursorOffsetCache) {\n        return this.cursorOffsetCache;\n      }\n\n      var lineLeftOffset,\n          lineIndex,\n          charIndex,\n          topOffset = 0,\n          leftOffset = 0,\n          boundaries,\n          cursorPosition = this.get2DCursorLocation(position);\n      charIndex = cursorPosition.charIndex;\n      lineIndex = cursorPosition.lineIndex;\n\n      for (var i = 0; i < lineIndex; i++) {\n        topOffset += this.getHeightOfLine(i);\n      }\n\n      lineLeftOffset = this._getLineLeftOffset(lineIndex);\n      var bound = this.__charBounds[lineIndex][charIndex];\n      bound && (leftOffset = bound.left);\n\n      if (this.charSpacing !== 0 && charIndex === this._textLines[lineIndex].length) {\n        leftOffset -= this._getWidthOfCharSpacing();\n      }\n\n      boundaries = {\n        top: topOffset,\n        left: lineLeftOffset + (leftOffset > 0 ? leftOffset : 0)\n      };\n      this.cursorOffsetCache = boundaries;\n      return this.cursorOffsetCache;\n    },\n\n    /**\n     * Renders cursor\n     * @param {Object} boundaries\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderCursor: function renderCursor(boundaries, ctx) {\n      var cursorLocation = this.get2DCursorLocation(),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex > 0 ? cursorLocation.charIndex - 1 : 0,\n          charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize'),\n          multiplier = this.scaleX * this.canvas.getZoom(),\n          cursorWidth = this.cursorWidth / multiplier,\n          topOffset = boundaries.topOffset,\n          dy = this.getValueOfPropertyAt(lineIndex, charIndex, 'deltaY');\n      topOffset += (1 - this._fontSizeFraction) * this.getHeightOfLine(lineIndex) / this.lineHeight - charHeight * (1 - this._fontSizeFraction);\n\n      if (this.inCompositionMode) {\n        this.renderSelection(boundaries, ctx);\n      }\n\n      ctx.fillStyle = this.getValueOfPropertyAt(lineIndex, charIndex, 'fill');\n      ctx.globalAlpha = this.__isMousedown ? 1 : this._currentCursorOpacity;\n      ctx.fillRect(boundaries.left + boundaries.leftOffset - cursorWidth / 2, topOffset + boundaries.top + dy, cursorWidth, charHeight);\n    },\n\n    /**\n     * Renders text selection\n     * @param {Object} boundaries Object with left/top/leftOffset/topOffset\n     * @param {CanvasRenderingContext2D} ctx transformed context to draw on\n     */\n    renderSelection: function renderSelection(boundaries, ctx) {\n      var selectionStart = this.inCompositionMode ? this.hiddenTextarea.selectionStart : this.selectionStart,\n          selectionEnd = this.inCompositionMode ? this.hiddenTextarea.selectionEnd : this.selectionEnd,\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          start = this.get2DCursorLocation(selectionStart),\n          end = this.get2DCursorLocation(selectionEnd),\n          startLine = start.lineIndex,\n          endLine = end.lineIndex,\n          startChar = start.charIndex < 0 ? 0 : start.charIndex,\n          endChar = end.charIndex < 0 ? 0 : end.charIndex;\n\n      for (var i = startLine; i <= endLine; i++) {\n        var lineOffset = this._getLineLeftOffset(i) || 0,\n            lineHeight = this.getHeightOfLine(i),\n            realLineHeight = 0,\n            boxStart = 0,\n            boxEnd = 0;\n\n        if (i === startLine) {\n          boxStart = this.__charBounds[startLine][startChar].left;\n        }\n\n        if (i >= startLine && i < endLine) {\n          boxEnd = isJustify && !this.isEndOfWrapping(i) ? this.width : this.getLineWidth(i) || 5; // WTF is this 5?\n        } else if (i === endLine) {\n          if (endChar === 0) {\n            boxEnd = this.__charBounds[endLine][endChar].left;\n          } else {\n            var charSpacing = this._getWidthOfCharSpacing();\n\n            boxEnd = this.__charBounds[endLine][endChar - 1].left + this.__charBounds[endLine][endChar - 1].width - charSpacing;\n          }\n        }\n\n        realLineHeight = lineHeight;\n\n        if (this.lineHeight < 1 || i === endLine && this.lineHeight > 1) {\n          lineHeight /= this.lineHeight;\n        }\n\n        if (this.inCompositionMode) {\n          ctx.fillStyle = this.compositionColor || 'black';\n          ctx.fillRect(boundaries.left + lineOffset + boxStart, boundaries.top + boundaries.topOffset + lineHeight, boxEnd - boxStart, 1);\n        } else {\n          ctx.fillStyle = this.selectionColor;\n          ctx.fillRect(boundaries.left + lineOffset + boxStart, boundaries.top + boundaries.topOffset, boxEnd - boxStart, lineHeight);\n        }\n\n        boundaries.topOffset += realLineHeight;\n      }\n    },\n\n    /**\n     * High level function to know the height of the cursor.\n     * the currentChar is the one that precedes the cursor\n     * Returns fontSize of char at the current cursor\n     * @return {Number} Character font size\n     */\n    getCurrentCharFontSize: function getCurrentCharFontSize() {\n      var cp = this._getCurrentCharIndex();\n\n      return this.getValueOfPropertyAt(cp.l, cp.c, 'fontSize');\n    },\n\n    /**\n     * High level function to know the color of the cursor.\n     * the currentChar is the one that precedes the cursor\n     * Returns color (fill) of char at the current cursor\n     * @return {String} Character color (fill)\n     */\n    getCurrentCharColor: function getCurrentCharColor() {\n      var cp = this._getCurrentCharIndex();\n\n      return this.getValueOfPropertyAt(cp.l, cp.c, 'fill');\n    },\n\n    /**\n     * Returns the cursor position for the getCurrent.. functions\n     * @private\n     */\n    _getCurrentCharIndex: function _getCurrentCharIndex() {\n      var cursorPosition = this.get2DCursorLocation(this.selectionStart, true),\n          charIndex = cursorPosition.charIndex > 0 ? cursorPosition.charIndex - 1 : 0;\n      return {\n        l: cursorPosition.lineIndex,\n        c: charIndex\n      };\n    }\n  });\n  /**\n   * Returns fabric.IText instance from an object representation\n   * @static\n   * @memberOf fabric.IText\n   * @param {Object} object Object to create an instance from\n   * @param {function} [callback] invoked with new instance as argument\n   */\n\n  fabric.IText.fromObject = function (object, callback) {\n    parseDecoration(object);\n\n    if (object.styles) {\n      for (var i in object.styles) {\n        for (var j in object.styles[i]) {\n          parseDecoration(object.styles[i][j]);\n        }\n      }\n    }\n\n    fabric.Object._fromObject('IText', object, callback, 'text');\n  };\n})();\n\n(function () {\n  var clone = fabric.util.object.clone;\n  fabric.util.object.extend(fabric.IText.prototype,\n  /** @lends fabric.IText.prototype */\n  {\n    /**\n     * Initializes all the interactive behavior of IText\n     */\n    initBehavior: function initBehavior() {\n      this.initAddedHandler();\n      this.initRemovedHandler();\n      this.initCursorSelectionHandlers();\n      this.initDoubleClickSimulation();\n      this.mouseMoveHandler = this.mouseMoveHandler.bind(this);\n    },\n    onDeselect: function onDeselect() {\n      this.isEditing && this.exitEditing();\n      this.selected = false;\n    },\n\n    /**\n     * Initializes \"added\" event handler\n     */\n    initAddedHandler: function initAddedHandler() {\n      var _this = this;\n\n      this.on('added', function () {\n        var canvas = _this.canvas;\n\n        if (canvas) {\n          if (!canvas._hasITextHandlers) {\n            canvas._hasITextHandlers = true;\n\n            _this._initCanvasHandlers(canvas);\n          }\n\n          canvas._iTextInstances = canvas._iTextInstances || [];\n\n          canvas._iTextInstances.push(_this);\n        }\n      });\n    },\n    initRemovedHandler: function initRemovedHandler() {\n      var _this = this;\n\n      this.on('removed', function () {\n        var canvas = _this.canvas;\n\n        if (canvas) {\n          canvas._iTextInstances = canvas._iTextInstances || [];\n          fabric.util.removeFromArray(canvas._iTextInstances, _this);\n\n          if (canvas._iTextInstances.length === 0) {\n            canvas._hasITextHandlers = false;\n\n            _this._removeCanvasHandlers(canvas);\n          }\n        }\n      });\n    },\n\n    /**\n     * register canvas event to manage exiting on other instances\n     * @private\n     */\n    _initCanvasHandlers: function _initCanvasHandlers(canvas) {\n      canvas._mouseUpITextHandler = function () {\n        if (canvas._iTextInstances) {\n          canvas._iTextInstances.forEach(function (obj) {\n            obj.__isMousedown = false;\n          });\n        }\n      };\n\n      canvas.on('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * remove canvas event to manage exiting on other instances\n     * @private\n     */\n    _removeCanvasHandlers: function _removeCanvasHandlers(canvas) {\n      canvas.off('mouse:up', canvas._mouseUpITextHandler);\n    },\n\n    /**\n     * @private\n     */\n    _tick: function _tick() {\n      this._currentTickState = this._animateCursor(this, 1, this.cursorDuration, '_onTickComplete');\n    },\n\n    /**\n     * @private\n     */\n    _animateCursor: function _animateCursor(obj, targetOpacity, duration, completeMethod) {\n      var tickState;\n      tickState = {\n        isAborted: false,\n        abort: function abort() {\n          this.isAborted = true;\n        }\n      };\n      obj.animate('_currentCursorOpacity', targetOpacity, {\n        duration: duration,\n        onComplete: function onComplete() {\n          if (!tickState.isAborted) {\n            obj[completeMethod]();\n          }\n        },\n        onChange: function onChange() {\n          // we do not want to animate a selection, only cursor\n          if (obj.canvas && obj.selectionStart === obj.selectionEnd) {\n            obj.renderCursorOrSelection();\n          }\n        },\n        abort: function abort() {\n          return tickState.isAborted;\n        }\n      });\n      return tickState;\n    },\n\n    /**\n     * @private\n     */\n    _onTickComplete: function _onTickComplete() {\n      var _this = this;\n\n      if (this._cursorTimeout1) {\n        clearTimeout(this._cursorTimeout1);\n      }\n\n      this._cursorTimeout1 = setTimeout(function () {\n        _this._currentTickCompleteState = _this._animateCursor(_this, 0, this.cursorDuration / 2, '_tick');\n      }, 100);\n    },\n\n    /**\n     * Initializes delayed cursor\n     */\n    initDelayedCursor: function initDelayedCursor(restart) {\n      var _this = this,\n          delay = restart ? 0 : this.cursorDelay;\n\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this._cursorTimeout2 = setTimeout(function () {\n        _this._tick();\n      }, delay);\n    },\n\n    /**\n     * Aborts cursor animation and clears all timeouts\n     */\n    abortCursorAnimation: function abortCursorAnimation() {\n      var shouldClear = this._currentTickState || this._currentTickCompleteState,\n          canvas = this.canvas;\n      this._currentTickState && this._currentTickState.abort();\n      this._currentTickCompleteState && this._currentTickCompleteState.abort();\n      clearTimeout(this._cursorTimeout1);\n      clearTimeout(this._cursorTimeout2);\n      this._currentCursorOpacity = 0; // to clear just itext area we need to transform the context\n      // it may not be worth it\n\n      if (shouldClear && canvas) {\n        canvas.clearContext(canvas.contextTop || canvas.contextContainer);\n      }\n    },\n\n    /**\n     * Selects entire text\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    selectAll: function selectAll() {\n      this.selectionStart = 0;\n      this.selectionEnd = this._text.length;\n\n      this._fireSelectionChanged();\n\n      this._updateTextarea();\n\n      return this;\n    },\n\n    /**\n     * Returns selected text\n     * @return {String}\n     */\n    getSelectedText: function getSelectedText() {\n      return this._text.slice(this.selectionStart, this.selectionEnd).join('');\n    },\n\n    /**\n     * Find new selection index representing start of current word according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryLeft: function findWordBoundaryLeft(startFrom) {\n      var offset = 0,\n          index = startFrom - 1; // remove space before cursor first\n\n      if (this._reSpace.test(this._text[index])) {\n        while (this._reSpace.test(this._text[index])) {\n          offset++;\n          index--;\n        }\n      }\n\n      while (/\\S/.test(this._text[index]) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current word according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findWordBoundaryRight: function findWordBoundaryRight(startFrom) {\n      var offset = 0,\n          index = startFrom; // remove space after cursor first\n\n      if (this._reSpace.test(this._text[index])) {\n        while (this._reSpace.test(this._text[index])) {\n          offset++;\n          index++;\n        }\n      }\n\n      while (/\\S/.test(this._text[index]) && index < this.text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Find new selection index representing start of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryLeft: function findLineBoundaryLeft(startFrom) {\n      var offset = 0,\n          index = startFrom - 1;\n\n      while (!/\\n/.test(this._text[index]) && index > -1) {\n        offset++;\n        index--;\n      }\n\n      return startFrom - offset;\n    },\n\n    /**\n     * Find new selection index representing end of current line according to current selection index\n     * @param {Number} startFrom Current selection index\n     * @return {Number} New selection index\n     */\n    findLineBoundaryRight: function findLineBoundaryRight(startFrom) {\n      var offset = 0,\n          index = startFrom;\n\n      while (!/\\n/.test(this._text[index]) && index < this.text.length) {\n        offset++;\n        index++;\n      }\n\n      return startFrom + offset;\n    },\n\n    /**\n     * Finds index corresponding to beginning or end of a word\n     * @param {Number} selectionStart Index of a character\n     * @param {Number} direction 1 or -1\n     * @return {Number} Index of the beginning or end of a word\n     */\n    searchWordBoundary: function searchWordBoundary(selectionStart, direction) {\n      var index = this._reSpace.test(this.text.charAt(selectionStart)) ? selectionStart - 1 : selectionStart,\n          _char = this.text.charAt(index),\n          reNonWord = /[ \\n\\.,;!\\?\\-]/;\n\n      while (!reNonWord.test(_char) && index > 0 && index < this.text.length) {\n        index += direction;\n        _char = this.text.charAt(index);\n      }\n\n      if (reNonWord.test(_char) && _char !== '\\n') {\n        index += direction === 1 ? 0 : 1;\n      }\n\n      return index;\n    },\n\n    /**\n     * Selects a word based on the index\n     * @param {Number} selectionStart Index of a character\n     */\n    selectWord: function selectWord(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.searchWordBoundary(selectionStart, -1),\n\n      /* search backwards */\n      newSelectionEnd = this.searchWordBoundary(selectionStart, 1);\n      /* search forward */\n\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n\n      this._fireSelectionChanged();\n\n      this._updateTextarea();\n\n      this.renderCursorOrSelection();\n    },\n\n    /**\n     * Selects a line based on the index\n     * @param {Number} selectionStart Index of a character\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    selectLine: function selectLine(selectionStart) {\n      selectionStart = selectionStart || this.selectionStart;\n      var newSelectionStart = this.findLineBoundaryLeft(selectionStart),\n          newSelectionEnd = this.findLineBoundaryRight(selectionStart);\n      this.selectionStart = newSelectionStart;\n      this.selectionEnd = newSelectionEnd;\n\n      this._fireSelectionChanged();\n\n      this._updateTextarea();\n\n      return this;\n    },\n\n    /**\n     * Enters editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    enterEditing: function enterEditing(e) {\n      if (this.isEditing || !this.editable) {\n        return;\n      }\n\n      if (this.canvas) {\n        this.canvas.calcOffset();\n        this.exitEditingOnOthers(this.canvas);\n      }\n\n      this.isEditing = true;\n      this.initHiddenTextarea(e);\n      this.hiddenTextarea.focus();\n      this.hiddenTextarea.value = this.text;\n\n      this._updateTextarea();\n\n      this._saveEditingProps();\n\n      this._setEditingProps();\n\n      this._textBeforeEdit = this.text;\n\n      this._tick();\n\n      this.fire('editing:entered');\n\n      this._fireSelectionChanged();\n\n      if (!this.canvas) {\n        return this;\n      }\n\n      this.canvas.fire('text:editing:entered', {\n        target: this\n      });\n      this.initMouseMoveHandler();\n      this.canvas.requestRenderAll();\n      return this;\n    },\n    exitEditingOnOthers: function exitEditingOnOthers(canvas) {\n      if (canvas._iTextInstances) {\n        canvas._iTextInstances.forEach(function (obj) {\n          obj.selected = false;\n\n          if (obj.isEditing) {\n            obj.exitEditing();\n          }\n        });\n      }\n    },\n\n    /**\n     * Initializes \"mousemove\" event handler\n     */\n    initMouseMoveHandler: function initMouseMoveHandler() {\n      this.canvas.on('mouse:move', this.mouseMoveHandler);\n    },\n\n    /**\n     * @private\n     */\n    mouseMoveHandler: function mouseMoveHandler(options) {\n      if (!this.__isMousedown || !this.isEditing) {\n        return;\n      }\n\n      var newSelectionStart = this.getSelectionStartFromPointer(options.e),\n          currentStart = this.selectionStart,\n          currentEnd = this.selectionEnd;\n\n      if ((newSelectionStart !== this.__selectionStartOnMouseDown || currentStart === currentEnd) && (currentStart === newSelectionStart || currentEnd === newSelectionStart)) {\n        return;\n      }\n\n      if (newSelectionStart > this.__selectionStartOnMouseDown) {\n        this.selectionStart = this.__selectionStartOnMouseDown;\n        this.selectionEnd = newSelectionStart;\n      } else {\n        this.selectionStart = newSelectionStart;\n        this.selectionEnd = this.__selectionStartOnMouseDown;\n      }\n\n      if (this.selectionStart !== currentStart || this.selectionEnd !== currentEnd) {\n        this.restartCursorIfNeeded();\n\n        this._fireSelectionChanged();\n\n        this._updateTextarea();\n\n        this.renderCursorOrSelection();\n      }\n    },\n\n    /**\n     * @private\n     */\n    _setEditingProps: function _setEditingProps() {\n      this.hoverCursor = 'text';\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this.canvas.moveCursor = 'text';\n      }\n\n      this.borderColor = this.editingBorderColor;\n      this.hasControls = this.selectable = false;\n      this.lockMovementX = this.lockMovementY = true;\n    },\n\n    /**\n     * convert from textarea to grapheme indexes\n     */\n    fromStringToGraphemeSelection: function fromStringToGraphemeSelection(start, end, text) {\n      var smallerTextStart = text.slice(0, start),\n          graphemeStart = fabric.util.string.graphemeSplit(smallerTextStart).length;\n\n      if (start === end) {\n        return {\n          selectionStart: graphemeStart,\n          selectionEnd: graphemeStart\n        };\n      }\n\n      var smallerTextEnd = text.slice(start, end),\n          graphemeEnd = fabric.util.string.graphemeSplit(smallerTextEnd).length;\n      return {\n        selectionStart: graphemeStart,\n        selectionEnd: graphemeStart + graphemeEnd\n      };\n    },\n\n    /**\n     * convert from fabric to textarea values\n     */\n    fromGraphemeToStringSelection: function fromGraphemeToStringSelection(start, end, _text) {\n      var smallerTextStart = _text.slice(0, start),\n          graphemeStart = smallerTextStart.join('').length;\n\n      if (start === end) {\n        return {\n          selectionStart: graphemeStart,\n          selectionEnd: graphemeStart\n        };\n      }\n\n      var smallerTextEnd = _text.slice(start, end),\n          graphemeEnd = smallerTextEnd.join('').length;\n\n      return {\n        selectionStart: graphemeStart,\n        selectionEnd: graphemeStart + graphemeEnd\n      };\n    },\n\n    /**\n     * @private\n     */\n    _updateTextarea: function _updateTextarea() {\n      this.cursorOffsetCache = {};\n\n      if (!this.hiddenTextarea) {\n        return;\n      }\n\n      if (!this.inCompositionMode) {\n        var newSelection = this.fromGraphemeToStringSelection(this.selectionStart, this.selectionEnd, this._text);\n        this.hiddenTextarea.selectionStart = newSelection.selectionStart;\n        this.hiddenTextarea.selectionEnd = newSelection.selectionEnd;\n      }\n\n      this.updateTextareaPosition();\n    },\n\n    /**\n     * @private\n     */\n    updateFromTextArea: function updateFromTextArea() {\n      if (!this.hiddenTextarea) {\n        return;\n      }\n\n      this.cursorOffsetCache = {};\n      this.text = this.hiddenTextarea.value;\n\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n        this.setCoords();\n      }\n\n      var newSelection = this.fromStringToGraphemeSelection(this.hiddenTextarea.selectionStart, this.hiddenTextarea.selectionEnd, this.hiddenTextarea.value);\n      this.selectionEnd = this.selectionStart = newSelection.selectionEnd;\n\n      if (!this.inCompositionMode) {\n        this.selectionStart = newSelection.selectionStart;\n      }\n\n      this.updateTextareaPosition();\n    },\n\n    /**\n     * @private\n     */\n    updateTextareaPosition: function updateTextareaPosition() {\n      if (this.selectionStart === this.selectionEnd) {\n        var style = this._calcTextareaPosition();\n\n        this.hiddenTextarea.style.left = style.left;\n        this.hiddenTextarea.style.top = style.top;\n      }\n    },\n\n    /**\n     * @private\n     * @return {Object} style contains style for hiddenTextarea\n     */\n    _calcTextareaPosition: function _calcTextareaPosition() {\n      if (!this.canvas) {\n        return {\n          x: 1,\n          y: 1\n        };\n      }\n\n      var desiredPosition = this.inCompositionMode ? this.compositionStart : this.selectionStart,\n          boundaries = this._getCursorBoundaries(desiredPosition),\n          cursorLocation = this.get2DCursorLocation(desiredPosition),\n          lineIndex = cursorLocation.lineIndex,\n          charIndex = cursorLocation.charIndex,\n          charHeight = this.getValueOfPropertyAt(lineIndex, charIndex, 'fontSize') * this.lineHeight,\n          leftOffset = boundaries.leftOffset,\n          m = this.calcTransformMatrix(),\n          p = {\n        x: boundaries.left + leftOffset,\n        y: boundaries.top + boundaries.topOffset + charHeight\n      },\n          upperCanvas = this.canvas.upperCanvasEl,\n          upperCanvasWidth = upperCanvas.width,\n          upperCanvasHeight = upperCanvas.height,\n          maxWidth = upperCanvasWidth - charHeight,\n          maxHeight = upperCanvasHeight - charHeight,\n          scaleX = upperCanvas.clientWidth / upperCanvasWidth,\n          scaleY = upperCanvas.clientHeight / upperCanvasHeight;\n\n      p = fabric.util.transformPoint(p, m);\n      p = fabric.util.transformPoint(p, this.canvas.viewportTransform);\n      p.x *= scaleX;\n      p.y *= scaleY;\n\n      if (p.x < 0) {\n        p.x = 0;\n      }\n\n      if (p.x > maxWidth) {\n        p.x = maxWidth;\n      }\n\n      if (p.y < 0) {\n        p.y = 0;\n      }\n\n      if (p.y > maxHeight) {\n        p.y = maxHeight;\n      } // add canvas offset on document\n\n\n      p.x += this.canvas._offset.left;\n      p.y += this.canvas._offset.top;\n      return {\n        left: p.x + 'px',\n        top: p.y + 'px',\n        fontSize: charHeight + 'px',\n        charHeight: charHeight\n      };\n    },\n\n    /**\n     * @private\n     */\n    _saveEditingProps: function _saveEditingProps() {\n      this._savedProps = {\n        hasControls: this.hasControls,\n        borderColor: this.borderColor,\n        lockMovementX: this.lockMovementX,\n        lockMovementY: this.lockMovementY,\n        hoverCursor: this.hoverCursor,\n        selectable: this.selectable,\n        defaultCursor: this.canvas && this.canvas.defaultCursor,\n        moveCursor: this.canvas && this.canvas.moveCursor\n      };\n    },\n\n    /**\n     * @private\n     */\n    _restoreEditingProps: function _restoreEditingProps() {\n      if (!this._savedProps) {\n        return;\n      }\n\n      this.hoverCursor = this._savedProps.hoverCursor;\n      this.hasControls = this._savedProps.hasControls;\n      this.borderColor = this._savedProps.borderColor;\n      this.selectable = this._savedProps.selectable;\n      this.lockMovementX = this._savedProps.lockMovementX;\n      this.lockMovementY = this._savedProps.lockMovementY;\n\n      if (this.canvas) {\n        this.canvas.defaultCursor = this._savedProps.defaultCursor;\n        this.canvas.moveCursor = this._savedProps.moveCursor;\n      }\n    },\n\n    /**\n     * Exits from editing state\n     * @return {fabric.IText} thisArg\n     * @chainable\n     */\n    exitEditing: function exitEditing() {\n      var isTextChanged = this._textBeforeEdit !== this.text;\n      this.selected = false;\n      this.isEditing = false;\n      this.selectionEnd = this.selectionStart;\n\n      if (this.hiddenTextarea) {\n        this.hiddenTextarea.blur && this.hiddenTextarea.blur();\n        this.canvas && this.hiddenTextarea.parentNode.removeChild(this.hiddenTextarea);\n        this.hiddenTextarea = null;\n      }\n\n      this.abortCursorAnimation();\n\n      this._restoreEditingProps();\n\n      this._currentCursorOpacity = 0;\n\n      if (this._shouldClearDimensionCache()) {\n        this.initDimensions();\n        this.setCoords();\n      }\n\n      this.fire('editing:exited');\n      isTextChanged && this.fire('modified');\n\n      if (this.canvas) {\n        this.canvas.off('mouse:move', this.mouseMoveHandler);\n        this.canvas.fire('text:editing:exited', {\n          target: this\n        });\n        isTextChanged && this.canvas.fire('object:modified', {\n          target: this\n        });\n      }\n\n      return this;\n    },\n\n    /**\n     * @private\n     */\n    _removeExtraneousStyles: function _removeExtraneousStyles() {\n      for (var prop in this.styles) {\n        if (!this._textLines[prop]) {\n          delete this.styles[prop];\n        }\n      }\n    },\n\n    /**\n     * remove and reflow a style block from start to end.\n     * @param {Number} start linear start position for removal (included in removal)\n     * @param {Number} end linear end position for removal ( excluded from removal )\n     */\n    removeStyleFromTo: function removeStyleFromTo(start, end) {\n      var cursorStart = this.get2DCursorLocation(start, true),\n          cursorEnd = this.get2DCursorLocation(end, true),\n          lineStart = cursorStart.lineIndex,\n          charStart = cursorStart.charIndex,\n          lineEnd = cursorEnd.lineIndex,\n          charEnd = cursorEnd.charIndex,\n          i,\n          styleObj;\n\n      if (lineStart !== lineEnd) {\n        // step1 remove the trailing of lineStart\n        if (this.styles[lineStart]) {\n          for (i = charStart; i < this._unwrappedTextLines[lineStart].length; i++) {\n            delete this.styles[lineStart][i];\n          }\n        } // step2 move the trailing of lineEnd to lineStart if needed\n\n\n        if (this.styles[lineEnd]) {\n          for (i = charEnd; i < this._unwrappedTextLines[lineEnd].length; i++) {\n            styleObj = this.styles[lineEnd][i];\n\n            if (styleObj) {\n              this.styles[lineStart] || (this.styles[lineStart] = {});\n              this.styles[lineStart][charStart + i - charEnd] = styleObj;\n            }\n          }\n        } // step3 detects lines will be completely removed.\n\n\n        for (i = lineStart + 1; i <= lineEnd; i++) {\n          delete this.styles[i];\n        } // step4 shift remaining lines.\n\n\n        this.shiftLineStyles(lineEnd, lineStart - lineEnd);\n      } else {\n        // remove and shift left on the same line\n        if (this.styles[lineStart]) {\n          styleObj = this.styles[lineStart];\n\n          var diff = charEnd - charStart,\n              numericChar,\n              _char;\n\n          for (i = charStart; i < charEnd; i++) {\n            delete styleObj[i];\n          }\n\n          for (_char in this.styles[lineStart]) {\n            numericChar = parseInt(_char, 10);\n\n            if (numericChar >= charEnd) {\n              styleObj[numericChar - diff] = styleObj[_char];\n              delete styleObj[_char];\n            }\n          }\n        }\n      }\n    },\n\n    /**\n     * Shifts line styles up or down\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} offset Can any number?\n     */\n    shiftLineStyles: function shiftLineStyles(lineIndex, offset) {\n      // shift all line styles by offset upward or downward\n      // do not clone deep. we need new array, not new style objects\n      var clonedStyles = clone(this.styles);\n\n      for (var line in this.styles) {\n        var numericLine = parseInt(line, 10);\n\n        if (numericLine > lineIndex) {\n          this.styles[numericLine + offset] = clonedStyles[numericLine];\n\n          if (!clonedStyles[numericLine - offset]) {\n            delete this.styles[numericLine];\n          }\n        }\n      }\n    },\n    restartCursorIfNeeded: function restartCursorIfNeeded() {\n      if (!this._currentTickState || this._currentTickState.isAborted || !this._currentTickCompleteState || this._currentTickCompleteState.isAborted) {\n        this.initDelayedCursor();\n      }\n    },\n\n    /**\n     * Inserts new style object\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Number} qty number of lines to add\n     * @param {Array} copiedStyle Array of objects styles\n     */\n    insertNewlineStyleObject: function insertNewlineStyleObject(lineIndex, charIndex, qty, copiedStyle) {\n      var currentCharStyle,\n          newLineStyles = {},\n          somethingAdded = false;\n      qty || (qty = 1);\n      this.shiftLineStyles(lineIndex, qty);\n\n      if (this.styles[lineIndex]) {\n        currentCharStyle = this.styles[lineIndex][charIndex === 0 ? charIndex : charIndex - 1];\n      } // we clone styles of all chars\n      // after cursor onto the current line\n\n\n      for (var index in this.styles[lineIndex]) {\n        var numIndex = parseInt(index, 10);\n\n        if (numIndex >= charIndex) {\n          somethingAdded = true;\n          newLineStyles[numIndex - charIndex] = this.styles[lineIndex][index]; // remove lines from the previous line since they're on a new line now\n\n          delete this.styles[lineIndex][index];\n        }\n      }\n\n      if (somethingAdded) {\n        this.styles[lineIndex + qty] = newLineStyles;\n      } else {\n        delete this.styles[lineIndex + qty];\n      } // for the other lines\n      // we clone current char style onto the next (otherwise empty) line\n\n\n      while (qty > 1) {\n        qty--;\n\n        if (copiedStyle && copiedStyle[qty]) {\n          this.styles[lineIndex + qty] = {\n            0: clone(copiedStyle[qty])\n          };\n        } else if (currentCharStyle) {\n          this.styles[lineIndex + qty] = {\n            0: clone(currentCharStyle)\n          };\n        } else {\n          delete this.styles[lineIndex + qty];\n        }\n      }\n\n      this._forceClearCache = true;\n    },\n\n    /**\n     * Inserts style object for a given line/char index\n     * @param {Number} lineIndex Index of a line\n     * @param {Number} charIndex Index of a char\n     * @param {Number} quantity number Style object to insert, if given\n     * @param {Array} copiedStyle array of style objects\n     */\n    insertCharStyleObject: function insertCharStyleObject(lineIndex, charIndex, quantity, copiedStyle) {\n      if (!this.styles) {\n        this.styles = {};\n      }\n\n      var currentLineStyles = this.styles[lineIndex],\n          currentLineStylesCloned = currentLineStyles ? clone(currentLineStyles) : {};\n      quantity || (quantity = 1); // shift all char styles by quantity forward\n      // 0,1,2,3 -> (charIndex=2) -> 0,1,3,4 -> (insert 2) -> 0,1,2,3,4\n\n      for (var index in currentLineStylesCloned) {\n        var numericIndex = parseInt(index, 10);\n\n        if (numericIndex >= charIndex) {\n          currentLineStyles[numericIndex + quantity] = currentLineStylesCloned[numericIndex]; // only delete the style if there was nothing moved there\n\n          if (!currentLineStylesCloned[numericIndex - quantity]) {\n            delete currentLineStyles[numericIndex];\n          }\n        }\n      }\n\n      this._forceClearCache = true;\n\n      if (copiedStyle) {\n        while (quantity--) {\n          if (!Object.keys(copiedStyle[quantity]).length) {\n            continue;\n          }\n\n          if (!this.styles[lineIndex]) {\n            this.styles[lineIndex] = {};\n          }\n\n          this.styles[lineIndex][charIndex + quantity] = clone(copiedStyle[quantity]);\n        }\n\n        return;\n      }\n\n      if (!currentLineStyles) {\n        return;\n      }\n\n      var newStyle = currentLineStyles[charIndex ? charIndex - 1 : 1];\n\n      while (newStyle && quantity--) {\n        this.styles[lineIndex][charIndex + quantity] = clone(newStyle);\n      }\n    },\n\n    /**\n     * Inserts style object(s)\n     * @param {Array} insertedText Characters at the location where style is inserted\n     * @param {Number} start cursor index for inserting style\n     * @param {Array} [copiedStyle] array of style objects to insert.\n     */\n    insertNewStyleBlock: function insertNewStyleBlock(insertedText, start, copiedStyle) {\n      var cursorLoc = this.get2DCursorLocation(start, true),\n          addedLines = [0],\n          linesLength = 0;\n\n      for (var i = 0; i < insertedText.length; i++) {\n        if (insertedText[i] === '\\n') {\n          linesLength++;\n          addedLines[linesLength] = 0;\n        } else {\n          addedLines[linesLength]++;\n        }\n      }\n\n      if (addedLines[0] > 0) {\n        this.insertCharStyleObject(cursorLoc.lineIndex, cursorLoc.charIndex, addedLines[0], copiedStyle);\n        copiedStyle = copiedStyle && copiedStyle.slice(addedLines[0] + 1);\n      }\n\n      linesLength && this.insertNewlineStyleObject(cursorLoc.lineIndex, cursorLoc.charIndex + addedLines[0], linesLength);\n\n      for (var i = 1; i < linesLength; i++) {\n        if (addedLines[i] > 0) {\n          this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\n        } else if (copiedStyle) {\n          this.styles[cursorLoc.lineIndex + i][0] = copiedStyle[0];\n        }\n\n        copiedStyle = copiedStyle && copiedStyle.slice(addedLines[i] + 1);\n      } // we use i outside the loop to get it like linesLength\n\n\n      if (addedLines[i] > 0) {\n        this.insertCharStyleObject(cursorLoc.lineIndex + i, 0, addedLines[i], copiedStyle);\n      }\n    },\n\n    /**\n     * Set the selectionStart and selectionEnd according to the new position of cursor\n     * mimic the key - mouse navigation when shift is pressed.\n     */\n    setSelectionStartEndWithShift: function setSelectionStartEndWithShift(start, end, newSelection) {\n      if (newSelection <= start) {\n        if (end === start) {\n          this._selectionDirection = 'left';\n        } else if (this._selectionDirection === 'right') {\n          this._selectionDirection = 'left';\n          this.selectionEnd = start;\n        }\n\n        this.selectionStart = newSelection;\n      } else if (newSelection > start && newSelection < end) {\n        if (this._selectionDirection === 'right') {\n          this.selectionEnd = newSelection;\n        } else {\n          this.selectionStart = newSelection;\n        }\n      } else {\n        // newSelection is > selection start and end\n        if (end === start) {\n          this._selectionDirection = 'right';\n        } else if (this._selectionDirection === 'left') {\n          this._selectionDirection = 'right';\n          this.selectionStart = end;\n        }\n\n        this.selectionEnd = newSelection;\n      }\n    },\n    setSelectionInBoundaries: function setSelectionInBoundaries() {\n      var length = this.text.length;\n\n      if (this.selectionStart > length) {\n        this.selectionStart = length;\n      } else if (this.selectionStart < 0) {\n        this.selectionStart = 0;\n      }\n\n      if (this.selectionEnd > length) {\n        this.selectionEnd = length;\n      } else if (this.selectionEnd < 0) {\n        this.selectionEnd = 0;\n      }\n    }\n  });\n})();\n\nfabric.util.object.extend(fabric.IText.prototype,\n/** @lends fabric.IText.prototype */\n{\n  /**\n   * Initializes \"dbclick\" event handler\n   */\n  initDoubleClickSimulation: function initDoubleClickSimulation() {\n    // for double click\n    this.__lastClickTime = +new Date(); // for triple click\n\n    this.__lastLastClickTime = +new Date();\n    this.__lastPointer = {};\n    this.on('mousedown', this.onMouseDown);\n  },\n\n  /**\n   * Default event handler to simulate triple click\n   * @private\n   */\n  onMouseDown: function onMouseDown(options) {\n    if (!this.canvas) {\n      return;\n    }\n\n    this.__newClickTime = +new Date();\n    var newPointer = options.pointer;\n\n    if (this.isTripleClick(newPointer)) {\n      this.fire('tripleclick', options);\n\n      this._stopEvent(options.e);\n    }\n\n    this.__lastLastClickTime = this.__lastClickTime;\n    this.__lastClickTime = this.__newClickTime;\n    this.__lastPointer = newPointer;\n    this.__lastIsEditing = this.isEditing;\n    this.__lastSelected = this.selected;\n  },\n  isTripleClick: function isTripleClick(newPointer) {\n    return this.__newClickTime - this.__lastClickTime < 500 && this.__lastClickTime - this.__lastLastClickTime < 500 && this.__lastPointer.x === newPointer.x && this.__lastPointer.y === newPointer.y;\n  },\n\n  /**\n   * @private\n   */\n  _stopEvent: function _stopEvent(e) {\n    e.preventDefault && e.preventDefault();\n    e.stopPropagation && e.stopPropagation();\n  },\n\n  /**\n   * Initializes event handlers related to cursor or selection\n   */\n  initCursorSelectionHandlers: function initCursorSelectionHandlers() {\n    this.initMousedownHandler();\n    this.initMouseupHandler();\n    this.initClicks();\n  },\n\n  /**\n   * Initializes double and triple click event handlers\n   */\n  initClicks: function initClicks() {\n    this.on('mousedblclick', function (options) {\n      this.selectWord(this.getSelectionStartFromPointer(options.e));\n    });\n    this.on('tripleclick', function (options) {\n      this.selectLine(this.getSelectionStartFromPointer(options.e));\n    });\n  },\n\n  /**\n   * Default event handler for the basic functionalities needed on _mouseDown\n   * can be overridden to do something different.\n   * Scope of this implementation is: find the click position, set selectionStart\n   * find selectionEnd, initialize the drawing of either cursor or selection area\n   */\n  _mouseDownHandler: function _mouseDownHandler(options) {\n    if (!this.canvas || !this.editable || options.e.button && options.e.button !== 1) {\n      return;\n    }\n\n    this.__isMousedown = true;\n\n    if (this.selected) {\n      this.setCursorByClick(options.e);\n    }\n\n    if (this.isEditing) {\n      this.__selectionStartOnMouseDown = this.selectionStart;\n\n      if (this.selectionStart === this.selectionEnd) {\n        this.abortCursorAnimation();\n      }\n\n      this.renderCursorOrSelection();\n    }\n  },\n\n  /**\n   * Default event handler for the basic functionalities needed on mousedown:before\n   * can be overridden to do something different.\n   * Scope of this implementation is: verify the object is already selected when mousing down\n   */\n  _mouseDownHandlerBefore: function _mouseDownHandlerBefore(options) {\n    if (!this.canvas || !this.editable || options.e.button && options.e.button !== 1) {\n      return;\n    }\n\n    if (this === this.canvas._activeObject) {\n      this.selected = true;\n    }\n  },\n\n  /**\n   * Initializes \"mousedown\" event handler\n   */\n  initMousedownHandler: function initMousedownHandler() {\n    this.on('mousedown', this._mouseDownHandler);\n    this.on('mousedown:before', this._mouseDownHandlerBefore);\n  },\n\n  /**\n   * Initializes \"mouseup\" event handler\n   */\n  initMouseupHandler: function initMouseupHandler() {\n    this.on('mouseup', this.mouseUpHandler);\n  },\n\n  /**\n   * standard hander for mouse up, overridable\n   * @private\n   */\n  mouseUpHandler: function mouseUpHandler(options) {\n    this.__isMousedown = false;\n\n    if (!this.editable || this.group || options.transform && options.transform.actionPerformed || options.e.button && options.e.button !== 1) {\n      return;\n    }\n\n    if (this.canvas) {\n      var currentActive = this.canvas._activeObject;\n\n      if (currentActive && currentActive !== this) {\n        // avoid running this logic when there is an active object\n        // this because is possible with shift click and fast clicks,\n        // to rapidly deselect and reselect this object and trigger an enterEdit\n        return;\n      }\n    }\n\n    if (this.__lastSelected && !this.__corner) {\n      this.selected = false;\n      this.__lastSelected = false;\n      this.enterEditing(options.e);\n\n      if (this.selectionStart === this.selectionEnd) {\n        this.initDelayedCursor(true);\n      } else {\n        this.renderCursorOrSelection();\n      }\n    } else {\n      this.selected = true;\n    }\n  },\n\n  /**\n   * Changes cursor location in a text depending on passed pointer (x/y) object\n   * @param {Event} e Event object\n   */\n  setCursorByClick: function setCursorByClick(e) {\n    var newSelection = this.getSelectionStartFromPointer(e),\n        start = this.selectionStart,\n        end = this.selectionEnd;\n\n    if (e.shiftKey) {\n      this.setSelectionStartEndWithShift(start, end, newSelection);\n    } else {\n      this.selectionStart = newSelection;\n      this.selectionEnd = newSelection;\n    }\n\n    if (this.isEditing) {\n      this._fireSelectionChanged();\n\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Returns index of a character corresponding to where an object was clicked\n   * @param {Event} e Event object\n   * @return {Number} Index of a character\n   */\n  getSelectionStartFromPointer: function getSelectionStartFromPointer(e) {\n    var mouseOffset = this.getLocalPointer(e),\n        prevWidth = 0,\n        width = 0,\n        height = 0,\n        charIndex = 0,\n        lineIndex = 0,\n        lineLeftOffset,\n        line;\n\n    for (var i = 0, len = this._textLines.length; i < len; i++) {\n      if (height <= mouseOffset.y) {\n        height += this.getHeightOfLine(i) * this.scaleY;\n        lineIndex = i;\n\n        if (i > 0) {\n          charIndex += this._textLines[i - 1].length + this.missingNewlineOffset(i - 1);\n        }\n      } else {\n        break;\n      }\n    }\n\n    lineLeftOffset = this._getLineLeftOffset(lineIndex);\n    width = lineLeftOffset * this.scaleX;\n    line = this._textLines[lineIndex];\n\n    for (var j = 0, jlen = line.length; j < jlen; j++) {\n      prevWidth = width; // i removed something about flipX here, check.\n\n      width += this.__charBounds[lineIndex][j].kernedWidth * this.scaleX;\n\n      if (width <= mouseOffset.x) {\n        charIndex++;\n      } else {\n        break;\n      }\n    }\n\n    return this._getNewSelectionStartFromOffset(mouseOffset, prevWidth, width, charIndex, jlen);\n  },\n\n  /**\n   * @private\n   */\n  _getNewSelectionStartFromOffset: function _getNewSelectionStartFromOffset(mouseOffset, prevWidth, width, index, jlen) {\n    // we need Math.abs because when width is after the last char, the offset is given as 1, while is 0\n    var distanceBtwLastCharAndCursor = mouseOffset.x - prevWidth,\n        distanceBtwNextCharAndCursor = width - mouseOffset.x,\n        offset = distanceBtwNextCharAndCursor > distanceBtwLastCharAndCursor || distanceBtwNextCharAndCursor < 0 ? 0 : 1,\n        newSelectionStart = index + offset; // if object is horizontally flipped, mirror cursor location from the end\n\n    if (this.flipX) {\n      newSelectionStart = jlen - newSelectionStart;\n    }\n\n    if (newSelectionStart > this._text.length) {\n      newSelectionStart = this._text.length;\n    }\n\n    return newSelectionStart;\n  }\n});\nfabric.util.object.extend(fabric.IText.prototype,\n/** @lends fabric.IText.prototype */\n{\n  /**\n   * Initializes hidden textarea (needed to bring up keyboard in iOS)\n   */\n  initHiddenTextarea: function initHiddenTextarea() {\n    this.hiddenTextarea = fabric.document.createElement('textarea');\n    this.hiddenTextarea.setAttribute('autocapitalize', 'off');\n    this.hiddenTextarea.setAttribute('autocorrect', 'off');\n    this.hiddenTextarea.setAttribute('autocomplete', 'off');\n    this.hiddenTextarea.setAttribute('spellcheck', 'false');\n    this.hiddenTextarea.setAttribute('data-fabric-hiddentextarea', '');\n    this.hiddenTextarea.setAttribute('wrap', 'off');\n\n    var style = this._calcTextareaPosition(); // line-height: 1px; was removed from the style to fix this:\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=870966\n\n\n    this.hiddenTextarea.style.cssText = 'position: absolute; top: ' + style.top + '; left: ' + style.left + '; z-index: -999; opacity: 0; width: 1px; height: 1px; font-size: 1px;' + ' paddingｰtop: ' + style.fontSize + ';';\n    fabric.document.body.appendChild(this.hiddenTextarea);\n    fabric.util.addListener(this.hiddenTextarea, 'keydown', this.onKeyDown.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'keyup', this.onKeyUp.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'input', this.onInput.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'copy', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'cut', this.copy.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'paste', this.paste.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionstart', this.onCompositionStart.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionupdate', this.onCompositionUpdate.bind(this));\n    fabric.util.addListener(this.hiddenTextarea, 'compositionend', this.onCompositionEnd.bind(this));\n\n    if (!this._clickHandlerInitialized && this.canvas) {\n      fabric.util.addListener(this.canvas.upperCanvasEl, 'click', this.onClick.bind(this));\n      this._clickHandlerInitialized = true;\n    }\n  },\n\n  /**\n   * For functionalities on keyDown\n   * Map a special key to a function of the instance/prototype\n   * If you need different behaviour for ESC or TAB or arrows, you have to change\n   * this map setting the name of a function that you build on the fabric.Itext or\n   * your prototype.\n   * the map change will affect all Instances unless you need for only some text Instances\n   * in that case you have to clone this object and assign your Instance.\n   * this.keysMap = fabric.util.object.clone(this.keysMap);\n   * The function must be in fabric.Itext.prototype.myFunction And will receive event as args[0]\n   */\n  keysMap: {\n    9: 'exitEditing',\n    27: 'exitEditing',\n    33: 'moveCursorUp',\n    34: 'moveCursorDown',\n    35: 'moveCursorRight',\n    36: 'moveCursorLeft',\n    37: 'moveCursorLeft',\n    38: 'moveCursorUp',\n    39: 'moveCursorRight',\n    40: 'moveCursorDown'\n  },\n\n  /**\n   * For functionalities on keyUp + ctrl || cmd\n   */\n  ctrlKeysMapUp: {\n    67: 'copy',\n    88: 'cut'\n  },\n\n  /**\n   * For functionalities on keyDown + ctrl || cmd\n   */\n  ctrlKeysMapDown: {\n    65: 'selectAll'\n  },\n  onClick: function onClick() {\n    // No need to trigger click event here, focus is enough to have the keyboard appear on Android\n    this.hiddenTextarea && this.hiddenTextarea.focus();\n  },\n\n  /**\n   * Handles keyup event\n   * @param {Event} e Event object\n   */\n  onKeyDown: function onKeyDown(e) {\n    if (!this.isEditing || this.inCompositionMode) {\n      return;\n    }\n\n    if (e.keyCode in this.keysMap) {\n      this[this.keysMap[e.keyCode]](e);\n    } else if (e.keyCode in this.ctrlKeysMapDown && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapDown[e.keyCode]](e);\n    } else {\n      return;\n    }\n\n    e.stopImmediatePropagation();\n    e.preventDefault();\n\n    if (e.keyCode >= 33 && e.keyCode <= 40) {\n      // if i press an arrow key just update selection\n      this.clearContextTop();\n      this.renderCursorOrSelection();\n    } else {\n      this.canvas && this.canvas.requestRenderAll();\n    }\n  },\n\n  /**\n   * Handles keyup event\n   * We handle KeyUp because ie11 and edge have difficulties copy/pasting\n   * if a copy/cut event fired, keyup is dismissed\n   * @param {Event} e Event object\n   */\n  onKeyUp: function onKeyUp(e) {\n    if (!this.isEditing || this._copyDone || this.inCompositionMode) {\n      this._copyDone = false;\n      return;\n    }\n\n    if (e.keyCode in this.ctrlKeysMapUp && (e.ctrlKey || e.metaKey)) {\n      this[this.ctrlKeysMapUp[e.keyCode]](e);\n    } else {\n      return;\n    }\n\n    e.stopImmediatePropagation();\n    e.preventDefault();\n    this.canvas && this.canvas.requestRenderAll();\n  },\n\n  /**\n   * Handles onInput event\n   * @param {Event} e Event object\n   */\n  onInput: function onInput(e) {\n    var fromPaste = this.fromPaste;\n    this.fromPaste = false;\n    e && e.stopPropagation();\n\n    if (!this.isEditing) {\n      return;\n    } // decisions about style changes.\n\n\n    var nextText = this._splitTextIntoLines(this.hiddenTextarea.value).graphemeText,\n        charCount = this._text.length,\n        nextCharCount = nextText.length,\n        removedText,\n        insertedText,\n        charDiff = nextCharCount - charCount;\n\n    if (this.hiddenTextarea.value === '') {\n      this.styles = {};\n      this.updateFromTextArea();\n      this.fire('changed');\n\n      if (this.canvas) {\n        this.canvas.fire('text:changed', {\n          target: this\n        });\n        this.canvas.requestRenderAll();\n      }\n\n      return;\n    }\n\n    var textareaSelection = this.fromStringToGraphemeSelection(this.hiddenTextarea.selectionStart, this.hiddenTextarea.selectionEnd, this.hiddenTextarea.value);\n    var backDelete = this.selectionStart > textareaSelection.selectionStart;\n\n    if (this.selectionStart !== this.selectionEnd) {\n      removedText = this._text.slice(this.selectionStart, this.selectionEnd);\n      charDiff += this.selectionEnd - this.selectionStart;\n    } else if (nextCharCount < charCount) {\n      if (backDelete) {\n        removedText = this._text.slice(this.selectionEnd + charDiff, this.selectionEnd);\n      } else {\n        removedText = this._text.slice(this.selectionStart, this.selectionStart - charDiff);\n      }\n    }\n\n    insertedText = nextText.slice(textareaSelection.selectionEnd - charDiff, textareaSelection.selectionEnd);\n\n    if (removedText && removedText.length) {\n      if (this.selectionStart !== this.selectionEnd) {\n        this.removeStyleFromTo(this.selectionStart, this.selectionEnd);\n      } else if (backDelete) {\n        // detect differencies between forwardDelete and backDelete\n        this.removeStyleFromTo(this.selectionEnd - removedText.length, this.selectionEnd);\n      } else {\n        this.removeStyleFromTo(this.selectionEnd, this.selectionEnd + removedText.length);\n      }\n    }\n\n    if (insertedText.length) {\n      if (fromPaste && insertedText.join('') === fabric.copiedText && !fabric.disableStyleCopyPaste) {\n        this.insertNewStyleBlock(insertedText, this.selectionStart, fabric.copiedTextStyle);\n      } else {\n        this.insertNewStyleBlock(insertedText, this.selectionStart);\n      }\n    }\n\n    this.updateFromTextArea();\n    this.fire('changed');\n\n    if (this.canvas) {\n      this.canvas.fire('text:changed', {\n        target: this\n      });\n      this.canvas.requestRenderAll();\n    }\n  },\n\n  /**\n   * Composition start\n   */\n  onCompositionStart: function onCompositionStart() {\n    this.inCompositionMode = true;\n  },\n\n  /**\n   * Composition end\n   */\n  onCompositionEnd: function onCompositionEnd() {\n    this.inCompositionMode = false;\n  },\n  // /**\n  //  * Composition update\n  //  */\n  onCompositionUpdate: function onCompositionUpdate(e) {\n    this.compositionStart = e.target.selectionStart;\n    this.compositionEnd = e.target.selectionEnd;\n    this.updateTextareaPosition();\n  },\n\n  /**\n   * Copies selected text\n   * @param {Event} e Event object\n   */\n  copy: function copy() {\n    if (this.selectionStart === this.selectionEnd) {\n      //do not cut-copy if no selection\n      return;\n    }\n\n    fabric.copiedText = this.getSelectedText();\n\n    if (!fabric.disableStyleCopyPaste) {\n      fabric.copiedTextStyle = this.getSelectionStyles(this.selectionStart, this.selectionEnd, true);\n    } else {\n      fabric.copiedTextStyle = null;\n    }\n\n    this._copyDone = true;\n  },\n\n  /**\n   * Pastes text\n   * @param {Event} e Event object\n   */\n  paste: function paste() {\n    this.fromPaste = true;\n  },\n\n  /**\n   * @private\n   * @param {Event} e Event object\n   * @return {Object} Clipboard data object\n   */\n  _getClipboardData: function _getClipboardData(e) {\n    return e && e.clipboardData || fabric.window.clipboardData;\n  },\n\n  /**\n   * Finds the width in pixels before the cursor on the same line\n   * @private\n   * @param {Number} lineIndex\n   * @param {Number} charIndex\n   * @return {Number} widthBeforeCursor width before cursor\n   */\n  _getWidthBeforeCursor: function _getWidthBeforeCursor(lineIndex, charIndex) {\n    var widthBeforeCursor = this._getLineLeftOffset(lineIndex),\n        bound;\n\n    if (charIndex > 0) {\n      bound = this.__charBounds[lineIndex][charIndex - 1];\n      widthBeforeCursor += bound.left + bound.width;\n    }\n\n    return widthBeforeCursor;\n  },\n\n  /**\n   * Gets start offset of a selection\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getDownCursorOffset: function getDownCursorOffset(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex; // if on last line, down cursor goes to end of line\n\n\n    if (lineIndex === this._textLines.length - 1 || e.metaKey || e.keyCode === 34) {\n      // move to the end of a text\n      return this._text.length - selectionProp;\n    }\n\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex + 1, widthBeforeCursor),\n        textAfterCursor = this._textLines[lineIndex].slice(charIndex);\n\n    return textAfterCursor.length + indexOnOtherLine + 1 + this.missingNewlineOffset(lineIndex);\n  },\n\n  /**\n   * private\n   * Helps finding if the offset should be counted from Start or End\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  _getSelectionForOffset: function _getSelectionForOffset(e, isRight) {\n    if (e.shiftKey && this.selectionStart !== this.selectionEnd && isRight) {\n      return this.selectionEnd;\n    } else {\n      return this.selectionStart;\n    }\n  },\n\n  /**\n   * @param {Event} e Event object\n   * @param {Boolean} isRight\n   * @return {Number}\n   */\n  getUpCursorOffset: function getUpCursorOffset(e, isRight) {\n    var selectionProp = this._getSelectionForOffset(e, isRight),\n        cursorLocation = this.get2DCursorLocation(selectionProp),\n        lineIndex = cursorLocation.lineIndex;\n\n    if (lineIndex === 0 || e.metaKey || e.keyCode === 33) {\n      // if on first line, up cursor goes to start of line\n      return -selectionProp;\n    }\n\n    var charIndex = cursorLocation.charIndex,\n        widthBeforeCursor = this._getWidthBeforeCursor(lineIndex, charIndex),\n        indexOnOtherLine = this._getIndexOnLine(lineIndex - 1, widthBeforeCursor),\n        textBeforeCursor = this._textLines[lineIndex].slice(0, charIndex),\n        missingNewlineOffset = this.missingNewlineOffset(lineIndex - 1); // return a negative offset\n\n\n    return -this._textLines[lineIndex - 1].length + indexOnOtherLine - textBeforeCursor.length + (1 - missingNewlineOffset);\n  },\n\n  /**\n   * for a given width it founds the matching character.\n   * @private\n   */\n  _getIndexOnLine: function _getIndexOnLine(lineIndex, width) {\n    var line = this._textLines[lineIndex],\n        lineLeftOffset = this._getLineLeftOffset(lineIndex),\n        widthOfCharsOnLine = lineLeftOffset,\n        indexOnLine = 0,\n        charWidth,\n        foundMatch;\n\n    for (var j = 0, jlen = line.length; j < jlen; j++) {\n      charWidth = this.__charBounds[lineIndex][j].width;\n      widthOfCharsOnLine += charWidth;\n\n      if (widthOfCharsOnLine > width) {\n        foundMatch = true;\n        var leftEdge = widthOfCharsOnLine - charWidth,\n            rightEdge = widthOfCharsOnLine,\n            offsetFromLeftEdge = Math.abs(leftEdge - width),\n            offsetFromRightEdge = Math.abs(rightEdge - width);\n        indexOnLine = offsetFromRightEdge < offsetFromLeftEdge ? j : j - 1;\n        break;\n      }\n    } // reached end\n\n\n    if (!foundMatch) {\n      indexOnLine = line.length - 1;\n    }\n\n    return indexOnLine;\n  },\n\n  /**\n   * Moves cursor down\n   * @param {Event} e Event object\n   */\n  moveCursorDown: function moveCursorDown(e) {\n    if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\n      return;\n    }\n\n    this._moveCursorUpOrDown('Down', e);\n  },\n\n  /**\n   * Moves cursor up\n   * @param {Event} e Event object\n   */\n  moveCursorUp: function moveCursorUp(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n\n    this._moveCursorUpOrDown('Up', e);\n  },\n\n  /**\n   * Moves cursor up or down, fires the events\n   * @param {String} direction 'Up' or 'Down'\n   * @param {Event} e Event object\n   */\n  _moveCursorUpOrDown: function _moveCursorUpOrDown(direction, e) {\n    // getUpCursorOffset\n    // getDownCursorOffset\n    var action = 'get' + direction + 'CursorOffset',\n        offset = this[action](e, this._selectionDirection === 'right');\n\n    if (e.shiftKey) {\n      this.moveCursorWithShift(offset);\n    } else {\n      this.moveCursorWithoutShift(offset);\n    }\n\n    if (offset !== 0) {\n      this.setSelectionInBoundaries();\n      this.abortCursorAnimation();\n      this._currentCursorOpacity = 1;\n      this.initDelayedCursor();\n\n      this._fireSelectionChanged();\n\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor with shift\n   * @param {Number} offset\n   */\n  moveCursorWithShift: function moveCursorWithShift(offset) {\n    var newSelection = this._selectionDirection === 'left' ? this.selectionStart + offset : this.selectionEnd + offset;\n    this.setSelectionStartEndWithShift(this.selectionStart, this.selectionEnd, newSelection);\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor up without shift\n   * @param {Number} offset\n   */\n  moveCursorWithoutShift: function moveCursorWithoutShift(offset) {\n    if (offset < 0) {\n      this.selectionStart += offset;\n      this.selectionEnd = this.selectionStart;\n    } else {\n      this.selectionEnd += offset;\n      this.selectionStart = this.selectionEnd;\n    }\n\n    return offset !== 0;\n  },\n\n  /**\n   * Moves cursor left\n   * @param {Event} e Event object\n   */\n  moveCursorLeft: function moveCursorLeft(e) {\n    if (this.selectionStart === 0 && this.selectionEnd === 0) {\n      return;\n    }\n\n    this._moveCursorLeftOrRight('Left', e);\n  },\n\n  /**\n   * @private\n   * @return {Boolean} true if a change happened\n   */\n  _move: function _move(e, prop, direction) {\n    var newValue;\n\n    if (e.altKey) {\n      newValue = this['findWordBoundary' + direction](this[prop]);\n    } else if (e.metaKey || e.keyCode === 35 || e.keyCode === 36) {\n      newValue = this['findLineBoundary' + direction](this[prop]);\n    } else {\n      this[prop] += direction === 'Left' ? -1 : 1;\n      return true;\n    }\n\n    if (typeof newValue !== undefined && this[prop] !== newValue) {\n      this[prop] = newValue;\n      return true;\n    }\n  },\n\n  /**\n   * @private\n   */\n  _moveLeft: function _moveLeft(e, prop) {\n    return this._move(e, prop, 'Left');\n  },\n\n  /**\n   * @private\n   */\n  _moveRight: function _moveRight(e, prop) {\n    return this._move(e, prop, 'Right');\n  },\n\n  /**\n   * Moves cursor left without keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithoutShift: function moveCursorLeftWithoutShift(e) {\n    var change = true;\n    this._selectionDirection = 'left'; // only move cursor when there is no selection,\n    // otherwise we discard it, and leave cursor on same place\n\n    if (this.selectionEnd === this.selectionStart && this.selectionStart !== 0) {\n      change = this._moveLeft(e, 'selectionStart');\n    }\n\n    this.selectionEnd = this.selectionStart;\n    return change;\n  },\n\n  /**\n   * Moves cursor left while keeping selection\n   * @param {Event} e\n   */\n  moveCursorLeftWithShift: function moveCursorLeftWithShift(e) {\n    if (this._selectionDirection === 'right' && this.selectionStart !== this.selectionEnd) {\n      return this._moveLeft(e, 'selectionEnd');\n    } else if (this.selectionStart !== 0) {\n      this._selectionDirection = 'left';\n      return this._moveLeft(e, 'selectionStart');\n    }\n  },\n\n  /**\n   * Moves cursor right\n   * @param {Event} e Event object\n   */\n  moveCursorRight: function moveCursorRight(e) {\n    if (this.selectionStart >= this._text.length && this.selectionEnd >= this._text.length) {\n      return;\n    }\n\n    this._moveCursorLeftOrRight('Right', e);\n  },\n\n  /**\n   * Moves cursor right or Left, fires event\n   * @param {String} direction 'Left', 'Right'\n   * @param {Event} e Event object\n   */\n  _moveCursorLeftOrRight: function _moveCursorLeftOrRight(direction, e) {\n    var actionName = 'moveCursor' + direction + 'With';\n    this._currentCursorOpacity = 1;\n\n    if (e.shiftKey) {\n      actionName += 'Shift';\n    } else {\n      actionName += 'outShift';\n    }\n\n    if (this[actionName](e)) {\n      this.abortCursorAnimation();\n      this.initDelayedCursor();\n\n      this._fireSelectionChanged();\n\n      this._updateTextarea();\n    }\n  },\n\n  /**\n   * Moves cursor right while keeping selection\n   * @param {Event} e\n   */\n  moveCursorRightWithShift: function moveCursorRightWithShift(e) {\n    if (this._selectionDirection === 'left' && this.selectionStart !== this.selectionEnd) {\n      return this._moveRight(e, 'selectionStart');\n    } else if (this.selectionEnd !== this._text.length) {\n      this._selectionDirection = 'right';\n      return this._moveRight(e, 'selectionEnd');\n    }\n  },\n\n  /**\n   * Moves cursor right without keeping selection\n   * @param {Event} e Event object\n   */\n  moveCursorRightWithoutShift: function moveCursorRightWithoutShift(e) {\n    var changed = true;\n    this._selectionDirection = 'right';\n\n    if (this.selectionStart === this.selectionEnd) {\n      changed = this._moveRight(e, 'selectionStart');\n      this.selectionEnd = this.selectionStart;\n    } else {\n      this.selectionStart = this.selectionEnd;\n    }\n\n    return changed;\n  },\n\n  /**\n   * Removes characters from start/end\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  removeChars: function removeChars(start, end) {\n    if (typeof end === 'undefined') {\n      end = start + 1;\n    }\n\n    this.removeStyleFromTo(start, end);\n\n    this._text.splice(start, end - start);\n\n    this.text = this._text.join('');\n    this.set('dirty', true);\n\n    if (this._shouldClearDimensionCache()) {\n      this.initDimensions();\n      this.setCoords();\n    }\n\n    this._removeExtraneousStyles();\n  },\n\n  /**\n   * insert characters at start position, before start position.\n   * start  equal 1 it means the text get inserted between actual grapheme 0 and 1\n   * if style array is provided, it must be as the same length of text in graphemes\n   * if end is provided and is bigger than start, old text is replaced.\n   * start/end ar per grapheme position in _text array.\n   *\n   * @param {String} text text to insert\n   * @param {Array} style array of style objects\n   * @param {Number} start\n   * @param {Number} end default to start + 1\n   */\n  insertChars: function insertChars(text, style, start, end) {\n    if (typeof end === 'undefined') {\n      end = start;\n    }\n\n    if (end > start) {\n      this.removeStyleFromTo(start, end);\n    }\n\n    var graphemes = fabric.util.string.graphemeSplit(text);\n    this.insertNewStyleBlock(graphemes, start, style);\n    this._text = [].concat(this._text.slice(0, start), graphemes, this._text.slice(end));\n    this.text = this._text.join('');\n    this.set('dirty', true);\n\n    if (this._shouldClearDimensionCache()) {\n      this.initDimensions();\n      this.setCoords();\n    }\n\n    this._removeExtraneousStyles();\n  }\n});\n/* _TO_SVG_START_ */\n\n(function () {\n  var toFixed = fabric.util.toFixed,\n      multipleSpacesRegex = /  +/g;\n  fabric.util.object.extend(fabric.Text.prototype,\n  /** @lends fabric.Text.prototype */\n  {\n    /**\n     * Returns SVG representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    _toSVG: function _toSVG() {\n      var offsets = this._getSVGLeftTopOffsets(),\n          textAndBg = this._getSVGTextAndBg(offsets.textTop, offsets.textLeft);\n\n      return this._wrapSVGTextAndBg(textAndBg);\n    },\n\n    /**\n     * Returns svg representation of an instance\n     * @param {Function} [reviver] Method for further parsing of svg representation.\n     * @return {String} svg representation of an instance\n     */\n    toSVG: function toSVG(reviver) {\n      return this._createBaseSVGMarkup(this._toSVG(), {\n        reviver: reviver,\n        noStyle: true,\n        withShadow: true\n      });\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLeftTopOffsets: function _getSVGLeftTopOffsets() {\n      return {\n        textLeft: -this.width / 2,\n        textTop: -this.height / 2,\n        lineTop: this.getHeightOfLine(0)\n      };\n    },\n\n    /**\n     * @private\n     */\n    _wrapSVGTextAndBg: function _wrapSVGTextAndBg(textAndBg) {\n      var noShadow = true,\n          textDecoration = this.getSvgTextDecoration(this);\n      return [textAndBg.textBgRects.join(''), '\\t\\t<text xml:space=\"preserve\" ', this.fontFamily ? 'font-family=\"' + this.fontFamily.replace(/\"/g, '\\'') + '\" ' : '', this.fontSize ? 'font-size=\"' + this.fontSize + '\" ' : '', this.fontStyle ? 'font-style=\"' + this.fontStyle + '\" ' : '', this.fontWeight ? 'font-weight=\"' + this.fontWeight + '\" ' : '', textDecoration ? 'text-decoration=\"' + textDecoration + '\" ' : '', 'style=\"', this.getSvgStyles(noShadow), '\"', this.addPaintOrder(), ' >', textAndBg.textSpans.join(''), '</text>\\n'];\n    },\n\n    /**\n     * @private\n     * @param {Number} textTopOffset Text top offset\n     * @param {Number} textLeftOffset Text left offset\n     * @return {Object}\n     */\n    _getSVGTextAndBg: function _getSVGTextAndBg(textTopOffset, textLeftOffset) {\n      var textSpans = [],\n          textBgRects = [],\n          height = textTopOffset,\n          lineOffset; // bounding-box background\n\n      this._setSVGBg(textBgRects); // text and text-background\n\n\n      for (var i = 0, len = this._textLines.length; i < len; i++) {\n        lineOffset = this._getLineLeftOffset(i);\n\n        if (this.textBackgroundColor || this.styleHas('textBackgroundColor', i)) {\n          this._setSVGTextLineBg(textBgRects, i, textLeftOffset + lineOffset, height);\n        }\n\n        this._setSVGTextLineText(textSpans, i, textLeftOffset + lineOffset, height);\n\n        height += this.getHeightOfLine(i);\n      }\n\n      return {\n        textSpans: textSpans,\n        textBgRects: textBgRects\n      };\n    },\n\n    /**\n     * @private\n     */\n    _createTextCharSpan: function _createTextCharSpan(_char, styleDecl, left, top) {\n      var shouldUseWhitespace = _char !== _char.trim() || _char.match(multipleSpacesRegex),\n          styleProps = this.getSvgSpanStyles(styleDecl, shouldUseWhitespace),\n          fillStyles = styleProps ? 'style=\"' + styleProps + '\"' : '',\n          dy = styleDecl.deltaY,\n          dySpan = '',\n          NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n\n      if (dy) {\n        dySpan = ' dy=\"' + toFixed(dy, NUM_FRACTION_DIGITS) + '\" ';\n      }\n\n      return ['<tspan x=\"', toFixed(left, NUM_FRACTION_DIGITS), '\" y=\"', toFixed(top, NUM_FRACTION_DIGITS), '\" ', dySpan, fillStyles, '>', fabric.util.string.escapeXml(_char), '</tspan>'].join('');\n    },\n    _setSVGTextLineText: function _setSVGTextLineText(textSpans, lineIndex, textLeftOffset, textTopOffset) {\n      // set proper line offset\n      var lineHeight = this.getHeightOfLine(lineIndex),\n          isJustify = this.textAlign.indexOf('justify') !== -1,\n          actualStyle,\n          nextStyle,\n          charsToRender = '',\n          charBox,\n          style,\n          boxWidth = 0,\n          line = this._textLines[lineIndex],\n          timeToRender;\n      textTopOffset += lineHeight * (1 - this._fontSizeFraction) / this.lineHeight;\n\n      for (var i = 0, len = line.length - 1; i <= len; i++) {\n        timeToRender = i === len || this.charSpacing;\n        charsToRender += line[i];\n        charBox = this.__charBounds[lineIndex][i];\n\n        if (boxWidth === 0) {\n          textLeftOffset += charBox.kernedWidth - charBox.width;\n          boxWidth += charBox.width;\n        } else {\n          boxWidth += charBox.kernedWidth;\n        }\n\n        if (isJustify && !timeToRender) {\n          if (this._reSpaceAndTab.test(line[i])) {\n            timeToRender = true;\n          }\n        }\n\n        if (!timeToRender) {\n          // if we have charSpacing, we render char by char\n          actualStyle = actualStyle || this.getCompleteStyleDeclaration(lineIndex, i);\n          nextStyle = this.getCompleteStyleDeclaration(lineIndex, i + 1);\n          timeToRender = this._hasStyleChangedForSvg(actualStyle, nextStyle);\n        }\n\n        if (timeToRender) {\n          style = this._getStyleDeclaration(lineIndex, i) || {};\n          textSpans.push(this._createTextCharSpan(charsToRender, style, textLeftOffset, textTopOffset));\n          charsToRender = '';\n          actualStyle = nextStyle;\n          textLeftOffset += boxWidth;\n          boxWidth = 0;\n        }\n      }\n    },\n    _pushTextBgRect: function _pushTextBgRect(textBgRects, color, left, top, width, height) {\n      var NUM_FRACTION_DIGITS = fabric.Object.NUM_FRACTION_DIGITS;\n      textBgRects.push('\\t\\t<rect ', this._getFillAttributes(color), ' x=\"', toFixed(left, NUM_FRACTION_DIGITS), '\" y=\"', toFixed(top, NUM_FRACTION_DIGITS), '\" width=\"', toFixed(width, NUM_FRACTION_DIGITS), '\" height=\"', toFixed(height, NUM_FRACTION_DIGITS), '\"></rect>\\n');\n    },\n    _setSVGTextLineBg: function _setSVGTextLineBg(textBgRects, i, leftOffset, textTopOffset) {\n      var line = this._textLines[i],\n          heightOfLine = this.getHeightOfLine(i) / this.lineHeight,\n          boxWidth = 0,\n          boxStart = 0,\n          charBox,\n          currentColor,\n          lastColor = this.getValueOfPropertyAt(i, 0, 'textBackgroundColor');\n\n      for (var j = 0, jlen = line.length; j < jlen; j++) {\n        charBox = this.__charBounds[i][j];\n        currentColor = this.getValueOfPropertyAt(i, j, 'textBackgroundColor');\n\n        if (currentColor !== lastColor) {\n          lastColor && this._pushTextBgRect(textBgRects, lastColor, leftOffset + boxStart, textTopOffset, boxWidth, heightOfLine);\n          boxStart = charBox.left;\n          boxWidth = charBox.width;\n          lastColor = currentColor;\n        } else {\n          boxWidth += charBox.kernedWidth;\n        }\n      }\n\n      currentColor && this._pushTextBgRect(textBgRects, currentColor, leftOffset + boxStart, textTopOffset, boxWidth, heightOfLine);\n    },\n\n    /**\n     * Adobe Illustrator (at least CS5) is unable to render rgba()-based fill values\n     * we work around it by \"moving\" alpha channel into opacity attribute and setting fill's alpha to 1\n     *\n     * @private\n     * @param {*} value\n     * @return {String}\n     */\n    _getFillAttributes: function _getFillAttributes(value) {\n      var fillColor = value && typeof value === 'string' ? new fabric.Color(value) : '';\n\n      if (!fillColor || !fillColor.getSource() || fillColor.getAlpha() === 1) {\n        return 'fill=\"' + value + '\"';\n      }\n\n      return 'opacity=\"' + fillColor.getAlpha() + '\" fill=\"' + fillColor.setAlpha(1).toRgb() + '\"';\n    },\n\n    /**\n     * @private\n     */\n    _getSVGLineTopOffset: function _getSVGLineTopOffset(lineIndex) {\n      var lineTopOffset = 0,\n          lastHeight = 0;\n\n      for (var j = 0; j < lineIndex; j++) {\n        lineTopOffset += this.getHeightOfLine(j);\n      }\n\n      lastHeight = this.getHeightOfLine(j);\n      return {\n        lineTop: lineTopOffset,\n        offset: (this._fontSizeMult - this._fontSizeFraction) * lastHeight / (this.lineHeight * this._fontSizeMult)\n      };\n    },\n\n    /**\n     * Returns styles-string for svg-export\n     * @param {Boolean} skipShadow a boolean to skip shadow filter output\n     * @return {String}\n     */\n    getSvgStyles: function getSvgStyles(skipShadow) {\n      var svgStyle = fabric.Object.prototype.getSvgStyles.call(this, skipShadow);\n      return svgStyle + ' white-space: pre;';\n    }\n  });\n})();\n/* _TO_SVG_END_ */\n\n\n(function (global) {\n  'use strict';\n\n  var fabric = global.fabric || (global.fabric = {});\n  /**\n   * Textbox class, based on IText, allows the user to resize the text rectangle\n   * and wraps lines automatically. Textboxes have their Y scaling locked, the\n   * user can only change width. Height is adjusted automatically based on the\n   * wrapping of lines.\n   * @class fabric.Textbox\n   * @extends fabric.IText\n   * @mixes fabric.Observable\n   * @return {fabric.Textbox} thisArg\n   * @see {@link fabric.Textbox#initialize} for constructor definition\n   */\n\n  fabric.Textbox = fabric.util.createClass(fabric.IText, fabric.Observable, {\n    /**\n     * Type of an object\n     * @type String\n     * @default\n     */\n    type: 'textbox',\n\n    /**\n     * Minimum width of textbox, in pixels.\n     * @type Number\n     * @default\n     */\n    minWidth: 20,\n\n    /**\n     * Minimum calculated width of a textbox, in pixels.\n     * fixed to 2 so that an empty textbox cannot go to 0\n     * and is still selectable without text.\n     * @type Number\n     * @default\n     */\n    dynamicMinWidth: 2,\n\n    /**\n     * Cached array of text wrapping.\n     * @type Array\n     */\n    __cachedLines: null,\n\n    /**\n     * Override standard Object class values\n     */\n    lockScalingFlip: true,\n\n    /**\n     * Override standard Object class values\n     * Textbox needs this on false\n     */\n    noScaleCache: false,\n\n    /**\n     * Properties which when set cause object to change dimensions\n     * @type Object\n     * @private\n     */\n    _dimensionAffectingProps: fabric.Text.prototype._dimensionAffectingProps.concat('width'),\n\n    /**\n     * Use this regular expression to split strings in breakable lines\n     * @private\n     */\n    _wordJoiners: /[ \\t\\r]/,\n\n    /**\n     * Use this boolean property in order to split strings that have no white space concept.\n     * this is a cheap way to help with chinese/japaense\n     * @type Boolean\n     * @since 2.6.0\n     */\n    splitByGrapheme: false,\n\n    /**\n     * Unlike superclass's version of this function, Textbox does not update\n     * its width.\n     * @private\n     * @override\n     */\n    initDimensions: function initDimensions() {\n      if (this.__skipDimension) {\n        return;\n      }\n\n      this.isEditing && this.initDelayedCursor();\n      this.clearContextTop();\n\n      this._clearCache(); // clear dynamicMinWidth as it will be different after we re-wrap line\n\n\n      this.dynamicMinWidth = 0; // wrap lines\n\n      this._styleMap = this._generateStyleMap(this._splitText()); // if after wrapping, the width is smaller than dynamicMinWidth, change the width and re-wrap\n\n      if (this.dynamicMinWidth > this.width) {\n        this._set('width', this.dynamicMinWidth);\n      }\n\n      if (this.textAlign.indexOf('justify') !== -1) {\n        // once text is measured we need to make space fatter to make justified text.\n        this.enlargeSpaces();\n      } // clear cache and re-calculate height\n\n\n      this.height = this.calcTextHeight();\n      this.saveState({\n        propertySet: '_dimensionAffectingProps'\n      });\n    },\n\n    /**\n     * Generate an object that translates the style object so that it is\n     * broken up by visual lines (new lines and automatic wrapping).\n     * The original text styles object is broken up by actual lines (new lines only),\n     * which is only sufficient for Text / IText\n     * @private\n     */\n    _generateStyleMap: function _generateStyleMap(textInfo) {\n      var realLineCount = 0,\n          realLineCharCount = 0,\n          charCount = 0,\n          map = {};\n\n      for (var i = 0; i < textInfo.graphemeLines.length; i++) {\n        if (textInfo.graphemeText[charCount] === '\\n' && i > 0) {\n          realLineCharCount = 0;\n          charCount++;\n          realLineCount++;\n        } else if (!this.splitByGrapheme && this._reSpaceAndTab.test(textInfo.graphemeText[charCount]) && i > 0) {\n          // this case deals with space's that are removed from end of lines when wrapping\n          realLineCharCount++;\n          charCount++;\n        }\n\n        map[i] = {\n          line: realLineCount,\n          offset: realLineCharCount\n        };\n        charCount += textInfo.graphemeLines[i].length;\n        realLineCharCount += textInfo.graphemeLines[i].length;\n      }\n\n      return map;\n    },\n\n    /**\n     * Returns true if object has a style property or has it on a specified line\n     * @param {Number} lineIndex\n     * @return {Boolean}\n     */\n    styleHas: function styleHas(property, lineIndex) {\n      if (this._styleMap && !this.isWrapping) {\n        var map = this._styleMap[lineIndex];\n\n        if (map) {\n          lineIndex = map.line;\n        }\n      }\n\n      return fabric.Text.prototype.styleHas.call(this, property, lineIndex);\n    },\n\n    /**\n     * Returns true if object has no styling or no styling in a line\n     * @param {Number} lineIndex , lineIndex is on wrapped lines.\n     * @return {Boolean}\n     */\n    isEmptyStyles: function isEmptyStyles(lineIndex) {\n      var offset = 0,\n          nextLineIndex = lineIndex + 1,\n          nextOffset,\n          obj,\n          shouldLimit = false;\n      var map = this._styleMap[lineIndex];\n      var mapNextLine = this._styleMap[lineIndex + 1];\n\n      if (map) {\n        lineIndex = map.line;\n        offset = map.offset;\n      }\n\n      if (mapNextLine) {\n        nextLineIndex = mapNextLine.line;\n        shouldLimit = nextLineIndex === lineIndex;\n        nextOffset = mapNextLine.offset;\n      }\n\n      obj = typeof lineIndex === 'undefined' ? this.styles : {\n        line: this.styles[lineIndex]\n      };\n\n      for (var p1 in obj) {\n        for (var p2 in obj[p1]) {\n          if (p2 >= offset && (!shouldLimit || p2 < nextOffset)) {\n            // eslint-disable-next-line no-unused-vars\n            for (var p3 in obj[p1][p2]) {\n              return false;\n            }\n          }\n        }\n      }\n\n      return true;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _getStyleDeclaration: function _getStyleDeclaration(lineIndex, charIndex) {\n      if (this._styleMap && !this.isWrapping) {\n        var map = this._styleMap[lineIndex];\n\n        if (!map) {\n          return null;\n        }\n\n        lineIndex = map.line;\n        charIndex = map.offset + charIndex;\n      }\n\n      return this.callSuper('_getStyleDeclaration', lineIndex, charIndex);\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @param {Object} style\n     * @private\n     */\n    _setStyleDeclaration: function _setStyleDeclaration(lineIndex, charIndex, style) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n      this.styles[lineIndex][charIndex] = style;\n    },\n\n    /**\n     * @param {Number} lineIndex\n     * @param {Number} charIndex\n     * @private\n     */\n    _deleteStyleDeclaration: function _deleteStyleDeclaration(lineIndex, charIndex) {\n      var map = this._styleMap[lineIndex];\n      lineIndex = map.line;\n      charIndex = map.offset + charIndex;\n      delete this.styles[lineIndex][charIndex];\n    },\n\n    /**\n     * probably broken need a fix\n     * Returns the real style line that correspond to the wrapped lineIndex line\n     * Used just to verify if the line does exist or not.\n     * @param {Number} lineIndex\n     * @returns {Boolean} if the line exists or not\n     * @private\n     */\n    _getLineStyle: function _getLineStyle(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      return !!this.styles[map.line];\n    },\n\n    /**\n     * Set the line style to an empty object so that is initialized\n     * @param {Number} lineIndex\n     * @param {Object} style\n     * @private\n     */\n    _setLineStyle: function _setLineStyle(lineIndex) {\n      var map = this._styleMap[lineIndex];\n      this.styles[map.line] = {};\n    },\n\n    /**\n     * Wraps text using the 'width' property of Textbox. First this function\n     * splits text on newlines, so we preserve newlines entered by the user.\n     * Then it wraps each line using the width of the Textbox by calling\n     * _wrapLine().\n     * @param {Array} lines The string array of text that is split into lines\n     * @param {Number} desiredWidth width you want to wrap to\n     * @returns {Array} Array of lines\n     */\n    _wrapText: function _wrapText(lines, desiredWidth) {\n      var wrapped = [],\n          i;\n      this.isWrapping = true;\n\n      for (i = 0; i < lines.length; i++) {\n        wrapped = wrapped.concat(this._wrapLine(lines[i], i, desiredWidth));\n      }\n\n      this.isWrapping = false;\n      return wrapped;\n    },\n\n    /**\n     * Helper function to measure a string of text, given its lineIndex and charIndex offset\n     * it gets called when charBounds are not available yet.\n     * @param {CanvasRenderingContext2D} ctx\n     * @param {String} text\n     * @param {number} lineIndex\n     * @param {number} charOffset\n     * @returns {number}\n     * @private\n     */\n    _measureWord: function _measureWord(word, lineIndex, charOffset) {\n      var width = 0,\n          prevGrapheme,\n          skipLeft = true;\n      charOffset = charOffset || 0;\n\n      for (var i = 0, len = word.length; i < len; i++) {\n        var box = this._getGraphemeBox(word[i], lineIndex, i + charOffset, prevGrapheme, skipLeft);\n\n        width += box.kernedWidth;\n        prevGrapheme = word[i];\n      }\n\n      return width;\n    },\n\n    /**\n     * Wraps a line of text using the width of the Textbox and a context.\n     * @param {Array} line The grapheme array that represent the line\n     * @param {Number} lineIndex\n     * @param {Number} desiredWidth width you want to wrap the line to\n     * @param {Number} reservedSpace space to remove from wrapping for custom functionalities\n     * @returns {Array} Array of line(s) into which the given text is wrapped\n     * to.\n     */\n    _wrapLine: function _wrapLine(_line, lineIndex, desiredWidth, reservedSpace) {\n      var lineWidth = 0,\n          splitByGrapheme = this.splitByGrapheme,\n          graphemeLines = [],\n          line = [],\n          // spaces in different languges?\n      words = splitByGrapheme ? fabric.util.string.graphemeSplit(_line) : _line.split(this._wordJoiners),\n          word = '',\n          offset = 0,\n          infix = splitByGrapheme ? '' : ' ',\n          wordWidth = 0,\n          infixWidth = 0,\n          largestWordWidth = 0,\n          lineJustStarted = true,\n          additionalSpace = splitByGrapheme ? 0 : this._getWidthOfCharSpacing(),\n          reservedSpace = reservedSpace || 0; // fix a difference between split and graphemeSplit\n\n      if (words.length === 0) {\n        words.push([]);\n      }\n\n      desiredWidth -= reservedSpace;\n\n      for (var i = 0; i < words.length; i++) {\n        // if using splitByGrapheme words are already in graphemes.\n        word = splitByGrapheme ? words[i] : fabric.util.string.graphemeSplit(words[i]);\n        wordWidth = this._measureWord(word, lineIndex, offset);\n        offset += word.length;\n        lineWidth += infixWidth + wordWidth - additionalSpace;\n\n        if (lineWidth >= desiredWidth && !lineJustStarted) {\n          graphemeLines.push(line);\n          line = [];\n          lineWidth = wordWidth;\n          lineJustStarted = true;\n        } else {\n          lineWidth += additionalSpace;\n        }\n\n        if (!lineJustStarted && !splitByGrapheme) {\n          line.push(infix);\n        }\n\n        line = line.concat(word);\n        infixWidth = this._measureWord([infix], lineIndex, offset);\n        offset++;\n        lineJustStarted = false; // keep track of largest word\n\n        if (wordWidth > largestWordWidth) {\n          largestWordWidth = wordWidth;\n        }\n      }\n\n      i && graphemeLines.push(line);\n\n      if (largestWordWidth + reservedSpace > this.dynamicMinWidth) {\n        this.dynamicMinWidth = largestWordWidth - additionalSpace + reservedSpace;\n      }\n\n      return graphemeLines;\n    },\n\n    /**\n     * Detect if the text line is ended with an hard break\n     * text and itext do not have wrapping, return false\n     * @param {Number} lineIndex text to split\n     * @return {Boolean}\n     */\n    isEndOfWrapping: function isEndOfWrapping(lineIndex) {\n      if (!this._styleMap[lineIndex + 1]) {\n        // is last line, return true;\n        return true;\n      }\n\n      if (this._styleMap[lineIndex + 1].line !== this._styleMap[lineIndex].line) {\n        // this is last line before a line break, return true;\n        return true;\n      }\n\n      return false;\n    },\n\n    /**\n     * Detect if a line has a linebreak and so we need to account for it when moving\n     * and counting style.\n     * @return Number\n     */\n    missingNewlineOffset: function missingNewlineOffset(lineIndex) {\n      if (this.splitByGrapheme) {\n        return this.isEndOfWrapping(lineIndex) ? 1 : 0;\n      }\n\n      return 1;\n    },\n\n    /**\n    * Gets lines of text to render in the Textbox. This function calculates\n    * text wrapping on the fly every time it is called.\n    * @param {String} text text to split\n    * @returns {Array} Array of lines in the Textbox.\n    * @override\n    */\n    _splitTextIntoLines: function _splitTextIntoLines(text) {\n      var newText = fabric.Text.prototype._splitTextIntoLines.call(this, text),\n          graphemeLines = this._wrapText(newText.lines, this.width),\n          lines = new Array(graphemeLines.length);\n\n      for (var i = 0; i < graphemeLines.length; i++) {\n        lines[i] = graphemeLines[i].join('');\n      }\n\n      newText.lines = lines;\n      newText.graphemeLines = graphemeLines;\n      return newText;\n    },\n    getMinWidth: function getMinWidth() {\n      return Math.max(this.minWidth, this.dynamicMinWidth);\n    },\n    _removeExtraneousStyles: function _removeExtraneousStyles() {\n      var linesToKeep = {};\n\n      for (var prop in this._styleMap) {\n        if (this._textLines[prop]) {\n          linesToKeep[this._styleMap[prop].line] = 1;\n        }\n      }\n\n      for (var prop in this.styles) {\n        if (!linesToKeep[prop]) {\n          delete this.styles[prop];\n        }\n      }\n    },\n\n    /**\n     * Returns object representation of an instance\n     * @method toObject\n     * @param {Array} [propertiesToInclude] Any properties that you might want to additionally include in the output\n     * @return {Object} object representation of an instance\n     */\n    toObject: function toObject(propertiesToInclude) {\n      return this.callSuper('toObject', ['minWidth', 'splitByGrapheme'].concat(propertiesToInclude));\n    }\n  });\n  /**\n   * Returns fabric.Textbox instance from an object representation\n   * @static\n   * @memberOf fabric.Textbox\n   * @param {Object} object Object to create an instance from\n   * @param {Function} [callback] Callback to invoke when an fabric.Textbox instance is created\n   */\n\n  fabric.Textbox.fromObject = function (object, callback) {\n    return fabric.Object._fromObject('Textbox', object, callback, 'text');\n  };\n})(typeof exports !== 'undefined' ? exports : this);","\"use strict\";\n\nvar _ = require(\"./lodash\"),\n    Graph = require(\"./graphlib\").Graph;\n\nmodule.exports = {\n  addDummyNode: addDummyNode,\n  simplify: simplify,\n  asNonCompoundGraph: asNonCompoundGraph,\n  successorWeights: successorWeights,\n  predecessorWeights: predecessorWeights,\n  intersectRect: intersectRect,\n  buildLayerMatrix: buildLayerMatrix,\n  normalizeRanks: normalizeRanks,\n  removeEmptyRanks: removeEmptyRanks,\n  addBorderNode: addBorderNode,\n  maxRank: maxRank,\n  partition: partition,\n  time: time,\n  notime: notime\n};\n/*\n * Adds a dummy node to the graph and return v.\n */\n\nfunction addDummyNode(g, type, attrs, name) {\n  var v;\n\n  do {\n    v = _.uniqueId(name);\n  } while (g.hasNode(v));\n\n  attrs.dummy = type;\n  g.setNode(v, attrs);\n  return v;\n}\n/*\n * Returns a new graph with only simple edges. Handles aggregation of data\n * associated with multi-edges.\n */\n\n\nfunction simplify(g) {\n  var simplified = new Graph().setGraph(g.graph());\n\n  _.forEach(g.nodes(), function (v) {\n    simplified.setNode(v, g.node(v));\n  });\n\n  _.forEach(g.edges(), function (e) {\n    var simpleLabel = simplified.edge(e.v, e.w) || {\n      weight: 0,\n      minlen: 1\n    },\n        label = g.edge(e);\n    simplified.setEdge(e.v, e.w, {\n      weight: simpleLabel.weight + label.weight,\n      minlen: Math.max(simpleLabel.minlen, label.minlen)\n    });\n  });\n\n  return simplified;\n}\n\nfunction asNonCompoundGraph(g) {\n  var simplified = new Graph({\n    multigraph: g.isMultigraph()\n  }).setGraph(g.graph());\n\n  _.forEach(g.nodes(), function (v) {\n    if (!g.children(v).length) {\n      simplified.setNode(v, g.node(v));\n    }\n  });\n\n  _.forEach(g.edges(), function (e) {\n    simplified.setEdge(e, g.edge(e));\n  });\n\n  return simplified;\n}\n\nfunction successorWeights(g) {\n  var weightMap = _.map(g.nodes(), function (v) {\n    var sucs = {};\n\n    _.forEach(g.outEdges(v), function (e) {\n      sucs[e.w] = (sucs[e.w] || 0) + g.edge(e).weight;\n    });\n\n    return sucs;\n  });\n\n  return _.zipObject(g.nodes(), weightMap);\n}\n\nfunction predecessorWeights(g) {\n  var weightMap = _.map(g.nodes(), function (v) {\n    var preds = {};\n\n    _.forEach(g.inEdges(v), function (e) {\n      preds[e.v] = (preds[e.v] || 0) + g.edge(e).weight;\n    });\n\n    return preds;\n  });\n\n  return _.zipObject(g.nodes(), weightMap);\n}\n/*\n * Finds where a line starting at point ({x, y}) would intersect a rectangle\n * ({x, y, width, height}) if it were pointing at the rectangle's center.\n */\n\n\nfunction intersectRect(rect, point) {\n  var x = rect.x;\n  var y = rect.y; // Rectangle intersection algorithm from:\n  // http://math.stackexchange.com/questions/108113/find-edge-between-two-boxes\n\n  var dx = point.x - x;\n  var dy = point.y - y;\n  var w = rect.width / 2;\n  var h = rect.height / 2;\n\n  if (!dx && !dy) {\n    throw new Error(\"Not possible to find intersection inside of the rectangle\");\n  }\n\n  var sx, sy;\n\n  if (Math.abs(dy) * w > Math.abs(dx) * h) {\n    // Intersection is top or bottom of rect.\n    if (dy < 0) {\n      h = -h;\n    }\n\n    sx = h * dx / dy;\n    sy = h;\n  } else {\n    // Intersection is left or right of rect.\n    if (dx < 0) {\n      w = -w;\n    }\n\n    sx = w;\n    sy = w * dy / dx;\n  }\n\n  return {\n    x: x + sx,\n    y: y + sy\n  };\n}\n/*\n * Given a DAG with each node assigned \"rank\" and \"order\" properties, this\n * function will produce a matrix with the ids of each node.\n */\n\n\nfunction buildLayerMatrix(g) {\n  var layering = _.map(_.range(maxRank(g) + 1), function () {\n    return [];\n  });\n\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v),\n        rank = node.rank;\n\n    if (!_.isUndefined(rank)) {\n      layering[rank][node.order] = v;\n    }\n  });\n\n  return layering;\n}\n/*\n * Adjusts the ranks for all nodes in the graph such that all nodes v have\n * rank(v) >= 0 and at least one node w has rank(w) = 0.\n */\n\n\nfunction normalizeRanks(g) {\n  var min = _.min(_.map(g.nodes(), function (v) {\n    return g.node(v).rank;\n  }));\n\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n\n    if (_.has(node, \"rank\")) {\n      node.rank -= min;\n    }\n  });\n}\n\nfunction removeEmptyRanks(g) {\n  // Ranks may not start at 0, so we need to offset them\n  var offset = _.min(_.map(g.nodes(), function (v) {\n    return g.node(v).rank;\n  }));\n\n  var layers = [];\n\n  _.forEach(g.nodes(), function (v) {\n    var rank = g.node(v).rank - offset;\n\n    if (!layers[rank]) {\n      layers[rank] = [];\n    }\n\n    layers[rank].push(v);\n  });\n\n  var delta = 0,\n      nodeRankFactor = g.graph().nodeRankFactor;\n\n  _.forEach(layers, function (vs, i) {\n    if (_.isUndefined(vs) && i % nodeRankFactor !== 0) {\n      --delta;\n    } else if (delta) {\n      _.forEach(vs, function (v) {\n        g.node(v).rank += delta;\n      });\n    }\n  });\n}\n\nfunction addBorderNode(g, prefix, rank, order) {\n  var node = {\n    width: 0,\n    height: 0\n  };\n\n  if (arguments.length >= 4) {\n    node.rank = rank;\n    node.order = order;\n  }\n\n  return addDummyNode(g, \"border\", node, prefix);\n}\n\nfunction maxRank(g) {\n  return _.max(_.map(g.nodes(), function (v) {\n    var rank = g.node(v).rank;\n\n    if (!_.isUndefined(rank)) {\n      return rank;\n    }\n  }));\n}\n/*\n * Partition a collection into two groups: `lhs` and `rhs`. If the supplied\n * function returns true for an entry it goes into `lhs`. Otherwise it goes\n * into `rhs.\n */\n\n\nfunction partition(collection, fn) {\n  var result = {\n    lhs: [],\n    rhs: []\n  };\n\n  _.forEach(collection, function (value) {\n    if (fn(value)) {\n      result.lhs.push(value);\n    } else {\n      result.rhs.push(value);\n    }\n  });\n\n  return result;\n}\n/*\n * Returns a new function that wraps `fn` with a timer. The wrapper logs the\n * time it takes to execute the function.\n */\n\n\nfunction time(name, fn) {\n  var start = _.now();\n\n  try {\n    return fn();\n  } finally {\n    console.log(name + \" time: \" + (_.now() - start) + \"ms\");\n  }\n}\n\nfunction notime(name, fn) {\n  return fn();\n}","/* global window */\nvar lodash;\n\nif (typeof require === \"function\") {\n  try {\n    lodash = {\n      clone: require(\"lodash/clone\"),\n      constant: require(\"lodash/constant\"),\n      each: require(\"lodash/each\"),\n      filter: require(\"lodash/filter\"),\n      has: require(\"lodash/has\"),\n      isArray: require(\"lodash/isArray\"),\n      isEmpty: require(\"lodash/isEmpty\"),\n      isFunction: require(\"lodash/isFunction\"),\n      isUndefined: require(\"lodash/isUndefined\"),\n      keys: require(\"lodash/keys\"),\n      map: require(\"lodash/map\"),\n      reduce: require(\"lodash/reduce\"),\n      size: require(\"lodash/size\"),\n      transform: require(\"lodash/transform\"),\n      union: require(\"lodash/union\"),\n      values: require(\"lodash/values\")\n    };\n  } catch (e) {}\n}\n\nif (!lodash) {\n  lodash = window._;\n}\n\nmodule.exports = lodash;","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]';\n/** Used to detect unsigned integer values. */\n\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\n\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0:\n      return func.call(thisArg);\n\n    case 1:\n      return func.call(thisArg, args[0]);\n\n    case 2:\n      return func.call(thisArg, args[0], args[1]);\n\n    case 3:\n      return func.call(thisArg, args[0], args[1], args[2]);\n  }\n\n  return func.apply(thisArg, args);\n}\n/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\n\n\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n\n  return result;\n}\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar objectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeMax = Math.max;\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction arrayLikeKeys(value, inherited) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  // Safari 9 makes `arguments.length` enumerable in strict mode.\n  var result = isArray(value) || isArguments(value) ? baseTimes(value.length, String) : [];\n  var length = result.length,\n      skipIndexes = !!length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && (key == 'length' || isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n/**\n * Used by `_.defaults` to customize its `_.assignIn` use.\n *\n * @private\n * @param {*} objValue The destination value.\n * @param {*} srcValue The source value.\n * @param {string} key The key of the property to assign.\n * @param {Object} object The parent object of `objValue`.\n * @returns {*} Returns the value to assign.\n */\n\n\nfunction assignInDefaults(objValue, srcValue, key, object) {\n  if (objValue === undefined || eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key)) {\n    return srcValue;\n  }\n\n  return objValue;\n}\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || value === undefined && !(key in object)) {\n    object[key] = value;\n  }\n}\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\n\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\n\n\nfunction baseRest(func, start) {\n  start = nativeMax(start === undefined ? func.length - 1 : start, 0);\n  return function () {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n\n    index = -1;\n    var otherArgs = Array(start + 1);\n\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n\n    otherArgs[start] = array;\n    return apply(func, this, otherArgs);\n  };\n}\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction copyObject(source, props, object, customizer) {\n  object || (object = {});\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n    var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined;\n    assignValue(object, key, newValue === undefined ? source[key] : newValue);\n  }\n\n  return object;\n}\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\n\n\nfunction createAssigner(assigner) {\n  return baseRest(function (object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n    customizer = assigner.length > 3 && typeof customizer == 'function' ? (length--, customizer) : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n\n    object = Object(object);\n\n    while (++index < length) {\n      var source = sources[index];\n\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n\n    return object;\n  });\n}\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\n\n\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length && (typeof value == 'number' || reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\n\n\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n\n  var type = typeof index;\n\n  if (type == 'number' ? isArrayLike(object) && isIndex(index, object.length) : type == 'string' && index in object) {\n    return eq(object[index], value);\n  }\n\n  return false;\n}\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\n\n\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n  return value === proto;\n}\n/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\n\nfunction nativeKeysIn(object) {\n  var result = [];\n\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\n\n\nfunction eq(value, other) {\n  return value === other || value !== value && other !== other;\n}\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\n\n\nfunction isArguments(value) {\n  // Safari 8.1 makes `arguments.callee` enumerable in strict mode.\n  return isArrayLikeObject(value) && hasOwnProperty.call(value, 'callee') && (!propertyIsEnumerable.call(value, 'callee') || objectToString.call(value) == argsTag);\n}\n/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\n\n\nvar isArray = Array.isArray;\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\n\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\n\n\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\n\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\n\n\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\n\n\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\n\n\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n/**\n * This method is like `_.assignIn` except that it accepts `customizer`\n * which is invoked to produce the assigned values. If `customizer` returns\n * `undefined`, assignment is handled by the method instead. The `customizer`\n * is invoked with five arguments: (objValue, srcValue, key, object, source).\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias extendWith\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} sources The source objects.\n * @param {Function} [customizer] The function to customize assigned values.\n * @returns {Object} Returns `object`.\n * @see _.assignWith\n * @example\n *\n * function customizer(objValue, srcValue) {\n *   return _.isUndefined(objValue) ? srcValue : objValue;\n * }\n *\n * var defaults = _.partialRight(_.assignInWith, customizer);\n *\n * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\n\n\nvar assignInWith = createAssigner(function (object, source, srcIndex, customizer) {\n  copyObject(source, keysIn(source), object, customizer);\n});\n/**\n * Assigns own and inherited enumerable string keyed properties of source\n * objects to the destination object for all destination properties that\n * resolve to `undefined`. Source objects are applied from left to right.\n * Once a property is set, additional values of the same property are ignored.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.defaultsDeep\n * @example\n *\n * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\n\nvar defaults = baseRest(function (args) {\n  args.push(undefined, assignInDefaults);\n  return apply(assignInWith, undefined, args);\n});\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\n\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = defaults;","/* global window */\nvar graphlib;\n\nif (typeof require === \"function\") {\n  try {\n    graphlib = require(\"graphlib\");\n  } catch (e) {}\n}\n\nif (!graphlib) {\n  graphlib = window.graphlib;\n}\n\nmodule.exports = graphlib;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `self`. */\n\n\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n/** Used as a reference to the global object. */\n\nvar root = freeGlobal || freeSelf || Function('return this')();\nmodule.exports = root;","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;","export default function _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}","function _typeof2(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof2 = function _typeof2(obj) { return typeof obj; }; } else { _typeof2 = function _typeof2(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof2(obj); }\n\nexport default function _typeof(obj) {\n  if (typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return _typeof2(obj);\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n    };\n  }\n\n  return _typeof(obj);\n}","import _typeof from \"../../helpers/esm/typeof\";\nimport assertThisInitialized from \"./assertThisInitialized\";\nexport default function _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return assertThisInitialized(self);\n}","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf\";\nexport default function _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) setPrototypeOf(subClass, superClass);\n}","var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\n\n\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;","var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\n\n\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n\n  if (value == null) {\n    return identity;\n  }\n\n  if (typeof value == 'object') {\n    return isArray(value) ? baseMatchesProperty(value[0], value[1]) : baseMatches(value);\n  }\n\n  return property(value);\n}\n\nmodule.exports = baseIteratee;","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\n\n\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;","var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\n\n\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;","var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n/** `Object#toString` result references. */\n\n\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n\n  return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);\n}\n\nmodule.exports = baseGetTag;","/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;","/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || value !== value && other !== other;\n}\n\nmodule.exports = eq;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Symbol = root.Symbol;\nmodule.exports = Symbol;","var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Built-in value references. */\n\nvar Buffer = moduleExports ? root.Buffer : undefined;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\n\nvar isBuffer = nativeIsBuffer || stubFalse;\nmodule.exports = isBuffer;","var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeysIn = require('./_baseKeysIn'),\n    isArrayLike = require('./isArrayLike');\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\n\n\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nmodule.exports = keysIn;","var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n/** `Object#toString` result references. */\n\n\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\nvar dataViewTag = '[object DataView]';\n/** Used to detect maps, sets, and weakmaps. */\n\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\n\nvar getTag = baseGetTag; // Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\n\nif (DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag || Map && getTag(new Map()) != mapTag || Promise && getTag(Promise.resolve()) != promiseTag || Set && getTag(new Set()) != setTag || WeakMap && getTag(new WeakMap()) != weakMapTag) {\n  getTag = function getTag(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString:\n          return dataViewTag;\n\n        case mapCtorString:\n          return mapTag;\n\n        case promiseCtorString:\n          return promiseTag;\n\n        case setCtorString:\n          return setTag;\n\n        case weakMapCtorString:\n          return weakMapTag;\n      }\n    }\n\n    return result;\n  };\n}\n\nmodule.exports = getTag;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar symbolTag = '[object Symbol]';\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\n\nfunction isSymbol(value) {\n  return typeof value == 'symbol' || isObjectLike(value) && baseGetTag(value) == symbolTag;\n}\n\nmodule.exports = isSymbol;","var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n/** `Object#toString` result references. */\n\n\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\n\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  } // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n\n\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;","var assignValue = require('./_assignValue'),\n    baseAssignValue = require('./_baseAssignValue');\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n    var newValue = customizer ? customizer(object[key], source[key], key, object, source) : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n\n  return object;\n}\n\nmodule.exports = copyObject;","var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\n\nvar isArguments = baseIsArguments(function () {\n  return arguments;\n}()) ? baseIsArguments : function (value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') && !propertyIsEnumerable.call(value, 'callee');\n};\nmodule.exports = isArguments;","var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n/* Node.js helper references. */\n\n\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\n\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\nmodule.exports = isTypedArray;","var isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\n\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = toKey;","/**\n * Copyright (c) 2014, Chris Pettitt\n * All rights reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * 1. Redistributions of source code must retain the above copyright notice, this\n * list of conditions and the following disclaimer.\n *\n * 2. Redistributions in binary form must reproduce the above copyright notice,\n * this list of conditions and the following disclaimer in the documentation\n * and/or other materials provided with the distribution.\n *\n * 3. Neither the name of the copyright holder nor the names of its contributors\n * may be used to endorse or promote products derived from this software without\n * specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND\n * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\n * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE\n * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL\n * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR\n * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER\n * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,\n * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\nvar lib = require(\"./lib\");\n\nmodule.exports = {\n  Graph: lib.Graph,\n  json: require(\"./lib/json\"),\n  alg: require(\"./lib/alg\"),\n  version: lib.version\n};","var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n} // Add methods to `Stack`.\n\n\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\nmodule.exports = Stack;","var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `ListCache`.\n\n\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\nmodule.exports = ListCache;","var eq = require('./eq');\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\n\n\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = assocIndexOf;","var getNative = require('./_getNative');\n/* Built-in method references that are verified to be native. */\n\n\nvar nativeCreate = getNative(Object, 'create');\nmodule.exports = nativeCreate;","var isKeyable = require('./_isKeyable');\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\n\n\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key) ? data[typeof key == 'string' ? 'string' : 'hash'] : data.map;\n}\n\nmodule.exports = getMapData;","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) || value === undefined && !(key in object)) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignValue;","var defineProperty = require('./_defineProperty');\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nmodule.exports = baseAssignValue;","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/** Used to detect unsigned integer values. */\n\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\n\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length && (type == 'number' || type != 'symbol' && reIsUint.test(value)) && value > -1 && value % 1 == 0 && value < length;\n}\n\nmodule.exports = isIndex;","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function (value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\n\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = typeof Ctor == 'function' && Ctor.prototype || objectProto;\n  return value === proto;\n}\n\nmodule.exports = isPrototype;","var overArg = require('./_overArg');\n/** Built-in value references. */\n\n\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\nmodule.exports = getPrototype;","var baseForOwn = require('./_baseForOwn'),\n    createBaseEach = require('./_createBaseEach');\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\n\n\nvar baseEach = createBaseEach(baseForOwn);\nmodule.exports = baseEach;","var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\n\n\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;","/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n\n  return result;\n}\n\nmodule.exports = arrayMap;","var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\n\n\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;","var eq = require('./eq'),\n    isArrayLike = require('./isArrayLike'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject');\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\n\n\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n\n  var type = typeof index;\n\n  if (type == 'number' ? isArrayLike(object) && isIndex(index, object.length) : type == 'string' && index in object) {\n    return eq(object[index], value);\n  }\n\n  return false;\n}\n\nmodule.exports = isIterateeCall;","\"use strict\";\n\nvar _ = require(\"../lodash\");\n\nmodule.exports = {\n  longestPath: longestPath,\n  slack: slack\n};\n/*\n * Initializes ranks for the input graph using the longest path algorithm. This\n * algorithm scales well and is fast in practice, it yields rather poor\n * solutions. Nodes are pushed to the lowest layer possible, leaving the bottom\n * ranks wide and leaving edges longer than necessary. However, due to its\n * speed, this algorithm is good for getting an initial ranking that can be fed\n * into other algorithms.\n *\n * This algorithm does not normalize layers because it will be used by other\n * algorithms in most cases. If using this algorithm directly, be sure to\n * run normalize at the end.\n *\n * Pre-conditions:\n *\n *    1. Input graph is a DAG.\n *    2. Input graph node labels can be assigned properties.\n *\n * Post-conditions:\n *\n *    1. Each node will be assign an (unnormalized) \"rank\" property.\n */\n\nfunction longestPath(g) {\n  var visited = {};\n\n  function dfs(v) {\n    var label = g.node(v);\n\n    if (_.has(visited, v)) {\n      return label.rank;\n    }\n\n    visited[v] = true;\n\n    var rank = _.min(_.map(g.outEdges(v), function (e) {\n      return dfs(e.w) - g.edge(e).minlen;\n    }));\n\n    if (rank === Number.POSITIVE_INFINITY || // return value of _.map([]) for Lodash 3\n    rank === undefined || // return value of _.map([]) for Lodash 4\n    rank === null) {\n      // return value of _.map([null])\n      rank = 0;\n    }\n\n    return label.rank = rank;\n  }\n\n  _.forEach(g.sources(), dfs);\n}\n/*\n * Returns the amount of slack for the given edge. The slack is defined as the\n * difference between the length of the edge and its minimum length.\n */\n\n\nfunction slack(g, e) {\n  return g.node(e.w).rank - g.node(e.v).rank - g.edge(e).minlen;\n}","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\nvar getOwnPropertyDescriptors = Object.getOwnPropertyDescriptors || function getOwnPropertyDescriptors(obj) {\n  var keys = Object.keys(obj);\n  var descriptors = {};\n\n  for (var i = 0; i < keys.length; i++) {\n    descriptors[keys[i]] = Object.getOwnPropertyDescriptor(obj, keys[i]);\n  }\n\n  return descriptors;\n};\n\nvar formatRegExp = /%[sdj%]/g;\n\nexports.format = function (f) {\n  if (!isString(f)) {\n    var objects = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      objects.push(inspect(arguments[i]));\n    }\n\n    return objects.join(' ');\n  }\n\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  var str = String(f).replace(formatRegExp, function (x) {\n    if (x === '%%') return '%';\n    if (i >= len) return x;\n\n    switch (x) {\n      case '%s':\n        return String(args[i++]);\n\n      case '%d':\n        return Number(args[i++]);\n\n      case '%j':\n        try {\n          return JSON.stringify(args[i++]);\n        } catch (_) {\n          return '[Circular]';\n        }\n\n      default:\n        return x;\n    }\n  });\n\n  for (var x = args[i]; i < len; x = args[++i]) {\n    if (isNull(x) || !isObject(x)) {\n      str += ' ' + x;\n    } else {\n      str += ' ' + inspect(x);\n    }\n  }\n\n  return str;\n}; // Mark that a method should not be used.\n// Returns a modified function which warns once by default.\n// If --no-deprecation is set, then it is a no-op.\n\n\nexports.deprecate = function (fn, msg) {\n  if (typeof process !== 'undefined' && process.noDeprecation === true) {\n    return fn;\n  } // Allow for deprecating things in the process of starting up.\n\n\n  if (typeof process === 'undefined') {\n    return function () {\n      return exports.deprecate(fn, msg).apply(this, arguments);\n    };\n  }\n\n  var warned = false;\n\n  function deprecated() {\n    if (!warned) {\n      if (process.throwDeprecation) {\n        throw new Error(msg);\n      } else if (process.traceDeprecation) {\n        console.trace(msg);\n      } else {\n        console.error(msg);\n      }\n\n      warned = true;\n    }\n\n    return fn.apply(this, arguments);\n  }\n\n  return deprecated;\n};\n\nvar debugs = {};\nvar debugEnviron;\n\nexports.debuglog = function (set) {\n  if (isUndefined(debugEnviron)) debugEnviron = process.env.NODE_DEBUG || '';\n  set = set.toUpperCase();\n\n  if (!debugs[set]) {\n    if (new RegExp('\\\\b' + set + '\\\\b', 'i').test(debugEnviron)) {\n      var pid = process.pid;\n\n      debugs[set] = function () {\n        var msg = exports.format.apply(exports, arguments);\n        console.error('%s %d: %s', set, pid, msg);\n      };\n    } else {\n      debugs[set] = function () {};\n    }\n  }\n\n  return debugs[set];\n};\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Object} opts Optional options object that alters the output.\n */\n\n/* legacy: obj, showHidden, depth, colors*/\n\n\nfunction inspect(obj, opts) {\n  // default options\n  var ctx = {\n    seen: [],\n    stylize: stylizeNoColor\n  }; // legacy...\n\n  if (arguments.length >= 3) ctx.depth = arguments[2];\n  if (arguments.length >= 4) ctx.colors = arguments[3];\n\n  if (isBoolean(opts)) {\n    // legacy...\n    ctx.showHidden = opts;\n  } else if (opts) {\n    // got an \"options\" object\n    exports._extend(ctx, opts);\n  } // set default options\n\n\n  if (isUndefined(ctx.showHidden)) ctx.showHidden = false;\n  if (isUndefined(ctx.depth)) ctx.depth = 2;\n  if (isUndefined(ctx.colors)) ctx.colors = false;\n  if (isUndefined(ctx.customInspect)) ctx.customInspect = true;\n  if (ctx.colors) ctx.stylize = stylizeWithColor;\n  return formatValue(ctx, obj, ctx.depth);\n}\n\nexports.inspect = inspect; // http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\n\ninspect.colors = {\n  'bold': [1, 22],\n  'italic': [3, 23],\n  'underline': [4, 24],\n  'inverse': [7, 27],\n  'white': [37, 39],\n  'grey': [90, 39],\n  'black': [30, 39],\n  'blue': [34, 39],\n  'cyan': [36, 39],\n  'green': [32, 39],\n  'magenta': [35, 39],\n  'red': [31, 39],\n  'yellow': [33, 39]\n}; // Don't use 'blue' not visible on cmd.exe\n\ninspect.styles = {\n  'special': 'cyan',\n  'number': 'yellow',\n  'boolean': 'yellow',\n  'undefined': 'grey',\n  'null': 'bold',\n  'string': 'green',\n  'date': 'magenta',\n  // \"name\": intentionally not styling\n  'regexp': 'red'\n};\n\nfunction stylizeWithColor(str, styleType) {\n  var style = inspect.styles[styleType];\n\n  if (style) {\n    return \"\\x1B[\" + inspect.colors[style][0] + 'm' + str + \"\\x1B[\" + inspect.colors[style][1] + 'm';\n  } else {\n    return str;\n  }\n}\n\nfunction stylizeNoColor(str, styleType) {\n  return str;\n}\n\nfunction arrayToHash(array) {\n  var hash = {};\n  array.forEach(function (val, idx) {\n    hash[val] = true;\n  });\n  return hash;\n}\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (ctx.customInspect && value && isFunction(value.inspect) && // Filter out the util module, it's inspect function is special\n  value.inspect !== exports.inspect && // Also filter out any prototype objects using the circular check.\n  !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes, ctx);\n\n    if (!isString(ret)) {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n\n    return ret;\n  } // Primitive types cannot have properties\n\n\n  var primitive = formatPrimitive(ctx, value);\n\n  if (primitive) {\n    return primitive;\n  } // Look up the keys of the object.\n\n\n  var keys = Object.keys(value);\n  var visibleKeys = arrayToHash(keys);\n\n  if (ctx.showHidden) {\n    keys = Object.getOwnPropertyNames(value);\n  } // IE doesn't make error fields non-enumerable\n  // http://msdn.microsoft.com/en-us/library/ie/dww52sbt(v=vs.94).aspx\n\n\n  if (isError(value) && (keys.indexOf('message') >= 0 || keys.indexOf('description') >= 0)) {\n    return formatError(value);\n  } // Some type of object without properties can be shortcutted.\n\n\n  if (keys.length === 0) {\n    if (isFunction(value)) {\n      var name = value.name ? ': ' + value.name : '';\n      return ctx.stylize('[Function' + name + ']', 'special');\n    }\n\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toString.call(value), 'date');\n    }\n\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '',\n      array = false,\n      braces = ['{', '}']; // Make Array say that they are Array\n\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  } // Make functions say that they are functions\n\n\n  if (isFunction(value)) {\n    var n = value.name ? ': ' + value.name : '';\n    base = ' [Function' + n + ']';\n  } // Make RegExps say that they are RegExps\n\n\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  } // Make dates with properties first say the date\n\n\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  } // Make error with message first say the error\n\n\n  if (isError(value)) {\n    base = ' ' + formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n  var output;\n\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function (key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n  return reduceToSingleString(output, base, braces);\n}\n\nfunction formatPrimitive(ctx, value) {\n  if (isUndefined(value)) return ctx.stylize('undefined', 'undefined');\n\n  if (isString(value)) {\n    var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '').replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"') + '\\'';\n    return ctx.stylize(simple, 'string');\n  }\n\n  if (isNumber(value)) return ctx.stylize('' + value, 'number');\n  if (isBoolean(value)) return ctx.stylize('' + value, 'boolean'); // For some reason typeof null is \"object\", so special case here.\n\n  if (isNull(value)) return ctx.stylize('null', 'null');\n}\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (hasOwnProperty(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n\n  keys.forEach(function (key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys, key, true));\n    }\n  });\n  return output;\n}\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str, desc;\n  desc = Object.getOwnPropertyDescriptor(value, key) || {\n    value: value[key]\n  };\n\n  if (desc.get) {\n    if (desc.set) {\n      str = ctx.stylize('[Getter/Setter]', 'special');\n    } else {\n      str = ctx.stylize('[Getter]', 'special');\n    }\n  } else {\n    if (desc.set) {\n      str = ctx.stylize('[Setter]', 'special');\n    }\n  }\n\n  if (!hasOwnProperty(visibleKeys, key)) {\n    name = '[' + key + ']';\n  }\n\n  if (!str) {\n    if (ctx.seen.indexOf(desc.value) < 0) {\n      if (isNull(recurseTimes)) {\n        str = formatValue(ctx, desc.value, null);\n      } else {\n        str = formatValue(ctx, desc.value, recurseTimes - 1);\n      }\n\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function (line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function (line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n\n  if (isUndefined(name)) {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n\n    name = JSON.stringify('' + key);\n\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\").replace(/\\\\\"/g, '\"').replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function (prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.replace(/\\u001b\\[\\d\\d?m/g, '').length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] + (base === '' ? '' : base + '\\n ') + ' ' + output.join(',\\n  ') + ' ' + braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n} // NOTE: These type checking functions intentionally don't use `instanceof`\n// because it is fragile and can be easily faked with `Object.create()`.\n\n\nfunction isArray(ar) {\n  return Array.isArray(ar);\n}\n\nexports.isArray = isArray;\n\nfunction isBoolean(arg) {\n  return typeof arg === 'boolean';\n}\n\nexports.isBoolean = isBoolean;\n\nfunction isNull(arg) {\n  return arg === null;\n}\n\nexports.isNull = isNull;\n\nfunction isNullOrUndefined(arg) {\n  return arg == null;\n}\n\nexports.isNullOrUndefined = isNullOrUndefined;\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nexports.isNumber = isNumber;\n\nfunction isString(arg) {\n  return typeof arg === 'string';\n}\n\nexports.isString = isString;\n\nfunction isSymbol(arg) {\n  return typeof arg === 'symbol';\n}\n\nexports.isSymbol = isSymbol;\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\nexports.isUndefined = isUndefined;\n\nfunction isRegExp(re) {\n  return isObject(re) && objectToString(re) === '[object RegExp]';\n}\n\nexports.isRegExp = isRegExp;\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nexports.isObject = isObject;\n\nfunction isDate(d) {\n  return isObject(d) && objectToString(d) === '[object Date]';\n}\n\nexports.isDate = isDate;\n\nfunction isError(e) {\n  return isObject(e) && (objectToString(e) === '[object Error]' || e instanceof Error);\n}\n\nexports.isError = isError;\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nexports.isFunction = isFunction;\n\nfunction isPrimitive(arg) {\n  return arg === null || typeof arg === 'boolean' || typeof arg === 'number' || typeof arg === 'string' || typeof arg === 'symbol' || // ES6 symbol\n  typeof arg === 'undefined';\n}\n\nexports.isPrimitive = isPrimitive;\nexports.isBuffer = require('./support/isBuffer');\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']; // 26 Feb 16:19:34\n\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()), pad(d.getMinutes()), pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n} // log is just a thin wrapper to console.log that prepends a timestamp\n\n\nexports.log = function () {\n  console.log('%s - %s', timestamp(), exports.format.apply(exports, arguments));\n};\n/**\n * Inherit the prototype methods from one constructor into another.\n *\n * The Function.prototype.inherits from lang.js rewritten as a standalone\n * function (not on Function.prototype). NOTE: If this file is to be loaded\n * during bootstrapping this function needs to be rewritten using some native\n * functions as prototype setup using normal JavaScript does not work as\n * expected during bootstrapping (see mirror.js in r114903).\n *\n * @param {function} ctor Constructor function which needs to inherit the\n *     prototype.\n * @param {function} superCtor Constructor function to inherit prototype from.\n */\n\n\nexports.inherits = require('inherits');\n\nexports._extend = function (origin, add) {\n  // Don't do anything if add isn't an object\n  if (!add || !isObject(add)) return origin;\n  var keys = Object.keys(add);\n  var i = keys.length;\n\n  while (i--) {\n    origin[keys[i]] = add[keys[i]];\n  }\n\n  return origin;\n};\n\nfunction hasOwnProperty(obj, prop) {\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nvar kCustomPromisifiedSymbol = typeof Symbol !== 'undefined' ? Symbol('util.promisify.custom') : undefined;\n\nexports.promisify = function promisify(original) {\n  if (typeof original !== 'function') throw new TypeError('The \"original\" argument must be of type Function');\n\n  if (kCustomPromisifiedSymbol && original[kCustomPromisifiedSymbol]) {\n    var fn = original[kCustomPromisifiedSymbol];\n\n    if (typeof fn !== 'function') {\n      throw new TypeError('The \"util.promisify.custom\" argument must be of type Function');\n    }\n\n    Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n      value: fn,\n      enumerable: false,\n      writable: false,\n      configurable: true\n    });\n    return fn;\n  }\n\n  function fn() {\n    var promiseResolve, promiseReject;\n    var promise = new Promise(function (resolve, reject) {\n      promiseResolve = resolve;\n      promiseReject = reject;\n    });\n    var args = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    args.push(function (err, value) {\n      if (err) {\n        promiseReject(err);\n      } else {\n        promiseResolve(value);\n      }\n    });\n\n    try {\n      original.apply(this, args);\n    } catch (err) {\n      promiseReject(err);\n    }\n\n    return promise;\n  }\n\n  Object.setPrototypeOf(fn, Object.getPrototypeOf(original));\n  if (kCustomPromisifiedSymbol) Object.defineProperty(fn, kCustomPromisifiedSymbol, {\n    value: fn,\n    enumerable: false,\n    writable: false,\n    configurable: true\n  });\n  return Object.defineProperties(fn, getOwnPropertyDescriptors(original));\n};\n\nexports.promisify.custom = kCustomPromisifiedSymbol;\n\nfunction callbackifyOnRejected(reason, cb) {\n  // `!reason` guard inspired by bluebird (Ref: https://goo.gl/t5IS6M).\n  // Because `null` is a special error value in callbacks which means \"no error\n  // occurred\", we error-wrap so the callback consumer can distinguish between\n  // \"the promise rejected with null\" or \"the promise fulfilled with undefined\".\n  if (!reason) {\n    var newReason = new Error('Promise was rejected with a falsy value');\n    newReason.reason = reason;\n    reason = newReason;\n  }\n\n  return cb(reason);\n}\n\nfunction callbackify(original) {\n  if (typeof original !== 'function') {\n    throw new TypeError('The \"original\" argument must be of type Function');\n  } // We DO NOT return the promise as it gives the user a false sense that\n  // the promise is actually somehow related to the callback's execution\n  // and that the callback throwing will reject the promise.\n\n\n  function callbackified() {\n    var args = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      args.push(arguments[i]);\n    }\n\n    var maybeCb = args.pop();\n\n    if (typeof maybeCb !== 'function') {\n      throw new TypeError('The last argument must be of type Function');\n    }\n\n    var self = this;\n\n    var cb = function cb() {\n      return maybeCb.apply(self, arguments);\n    }; // In true node style we process the callback on `nextTick` with all the\n    // implications (stack, `uncaughtException`, `async_hooks`)\n\n\n    original.apply(this, args).then(function (ret) {\n      process.nextTick(cb, null, ret);\n    }, function (rej) {\n      process.nextTick(callbackifyOnRejected, rej, cb);\n    });\n  }\n\n  Object.setPrototypeOf(callbackified, Object.getPrototypeOf(original));\n  Object.defineProperties(callbackified, getOwnPropertyDescriptors(original));\n  return callbackified;\n}\n\nexports.callbackify = callbackify;","\"use strict\";\n\nvar _ = require(\"./lodash\");\n\nmodule.exports = Graph;\nvar DEFAULT_EDGE_NAME = \"\\x00\",\n    GRAPH_NODE = \"\\x00\",\n    EDGE_KEY_DELIM = \"\\x01\"; // Implementation notes:\n//\n//  * Node id query functions should return string ids for the nodes\n//  * Edge id query functions should return an \"edgeObj\", edge object, that is\n//    composed of enough information to uniquely identify an edge: {v, w, name}.\n//  * Internally we use an \"edgeId\", a stringified form of the edgeObj, to\n//    reference edges. This is because we need a performant way to look these\n//    edges up and, object properties, which have string keys, are the closest\n//    we're going to get to a performant hashtable in JavaScript.\n\nfunction Graph(opts) {\n  this._isDirected = _.has(opts, \"directed\") ? opts.directed : true;\n  this._isMultigraph = _.has(opts, \"multigraph\") ? opts.multigraph : false;\n  this._isCompound = _.has(opts, \"compound\") ? opts.compound : false; // Label for the graph itself\n\n  this._label = undefined; // Defaults to be set when creating a new node\n\n  this._defaultNodeLabelFn = _.constant(undefined); // Defaults to be set when creating a new edge\n\n  this._defaultEdgeLabelFn = _.constant(undefined); // v -> label\n\n  this._nodes = {};\n\n  if (this._isCompound) {\n    // v -> parent\n    this._parent = {}; // v -> children\n\n    this._children = {};\n    this._children[GRAPH_NODE] = {};\n  } // v -> edgeObj\n\n\n  this._in = {}; // u -> v -> Number\n\n  this._preds = {}; // v -> edgeObj\n\n  this._out = {}; // v -> w -> Number\n\n  this._sucs = {}; // e -> edgeObj\n\n  this._edgeObjs = {}; // e -> label\n\n  this._edgeLabels = {};\n}\n/* Number of nodes in the graph. Should only be changed by the implementation. */\n\n\nGraph.prototype._nodeCount = 0;\n/* Number of edges in the graph. Should only be changed by the implementation. */\n\nGraph.prototype._edgeCount = 0;\n/* === Graph functions ========= */\n\nGraph.prototype.isDirected = function () {\n  return this._isDirected;\n};\n\nGraph.prototype.isMultigraph = function () {\n  return this._isMultigraph;\n};\n\nGraph.prototype.isCompound = function () {\n  return this._isCompound;\n};\n\nGraph.prototype.setGraph = function (label) {\n  this._label = label;\n  return this;\n};\n\nGraph.prototype.graph = function () {\n  return this._label;\n};\n/* === Node functions ========== */\n\n\nGraph.prototype.setDefaultNodeLabel = function (newDefault) {\n  if (!_.isFunction(newDefault)) {\n    newDefault = _.constant(newDefault);\n  }\n\n  this._defaultNodeLabelFn = newDefault;\n  return this;\n};\n\nGraph.prototype.nodeCount = function () {\n  return this._nodeCount;\n};\n\nGraph.prototype.nodes = function () {\n  return _.keys(this._nodes);\n};\n\nGraph.prototype.sources = function () {\n  var self = this;\n  return _.filter(this.nodes(), function (v) {\n    return _.isEmpty(self._in[v]);\n  });\n};\n\nGraph.prototype.sinks = function () {\n  var self = this;\n  return _.filter(this.nodes(), function (v) {\n    return _.isEmpty(self._out[v]);\n  });\n};\n\nGraph.prototype.setNodes = function (vs, value) {\n  var args = arguments;\n  var self = this;\n\n  _.each(vs, function (v) {\n    if (args.length > 1) {\n      self.setNode(v, value);\n    } else {\n      self.setNode(v);\n    }\n  });\n\n  return this;\n};\n\nGraph.prototype.setNode = function (v, value) {\n  if (_.has(this._nodes, v)) {\n    if (arguments.length > 1) {\n      this._nodes[v] = value;\n    }\n\n    return this;\n  }\n\n  this._nodes[v] = arguments.length > 1 ? value : this._defaultNodeLabelFn(v);\n\n  if (this._isCompound) {\n    this._parent[v] = GRAPH_NODE;\n    this._children[v] = {};\n    this._children[GRAPH_NODE][v] = true;\n  }\n\n  this._in[v] = {};\n  this._preds[v] = {};\n  this._out[v] = {};\n  this._sucs[v] = {};\n  ++this._nodeCount;\n  return this;\n};\n\nGraph.prototype.node = function (v) {\n  return this._nodes[v];\n};\n\nGraph.prototype.hasNode = function (v) {\n  return _.has(this._nodes, v);\n};\n\nGraph.prototype.removeNode = function (v) {\n  var self = this;\n\n  if (_.has(this._nodes, v)) {\n    var removeEdge = function removeEdge(e) {\n      self.removeEdge(self._edgeObjs[e]);\n    };\n\n    delete this._nodes[v];\n\n    if (this._isCompound) {\n      this._removeFromParentsChildList(v);\n\n      delete this._parent[v];\n\n      _.each(this.children(v), function (child) {\n        self.setParent(child);\n      });\n\n      delete this._children[v];\n    }\n\n    _.each(_.keys(this._in[v]), removeEdge);\n\n    delete this._in[v];\n    delete this._preds[v];\n\n    _.each(_.keys(this._out[v]), removeEdge);\n\n    delete this._out[v];\n    delete this._sucs[v];\n    --this._nodeCount;\n  }\n\n  return this;\n};\n\nGraph.prototype.setParent = function (v, parent) {\n  if (!this._isCompound) {\n    throw new Error(\"Cannot set parent in a non-compound graph\");\n  }\n\n  if (_.isUndefined(parent)) {\n    parent = GRAPH_NODE;\n  } else {\n    // Coerce parent to string\n    parent += \"\";\n\n    for (var ancestor = parent; !_.isUndefined(ancestor); ancestor = this.parent(ancestor)) {\n      if (ancestor === v) {\n        throw new Error(\"Setting \" + parent + \" as parent of \" + v + \" would create a cycle\");\n      }\n    }\n\n    this.setNode(parent);\n  }\n\n  this.setNode(v);\n\n  this._removeFromParentsChildList(v);\n\n  this._parent[v] = parent;\n  this._children[parent][v] = true;\n  return this;\n};\n\nGraph.prototype._removeFromParentsChildList = function (v) {\n  delete this._children[this._parent[v]][v];\n};\n\nGraph.prototype.parent = function (v) {\n  if (this._isCompound) {\n    var parent = this._parent[v];\n\n    if (parent !== GRAPH_NODE) {\n      return parent;\n    }\n  }\n};\n\nGraph.prototype.children = function (v) {\n  if (_.isUndefined(v)) {\n    v = GRAPH_NODE;\n  }\n\n  if (this._isCompound) {\n    var children = this._children[v];\n\n    if (children) {\n      return _.keys(children);\n    }\n  } else if (v === GRAPH_NODE) {\n    return this.nodes();\n  } else if (this.hasNode(v)) {\n    return [];\n  }\n};\n\nGraph.prototype.predecessors = function (v) {\n  var predsV = this._preds[v];\n\n  if (predsV) {\n    return _.keys(predsV);\n  }\n};\n\nGraph.prototype.successors = function (v) {\n  var sucsV = this._sucs[v];\n\n  if (sucsV) {\n    return _.keys(sucsV);\n  }\n};\n\nGraph.prototype.neighbors = function (v) {\n  var preds = this.predecessors(v);\n\n  if (preds) {\n    return _.union(preds, this.successors(v));\n  }\n};\n\nGraph.prototype.isLeaf = function (v) {\n  var neighbors;\n\n  if (this.isDirected()) {\n    neighbors = this.successors(v);\n  } else {\n    neighbors = this.neighbors(v);\n  }\n\n  return neighbors.length === 0;\n};\n\nGraph.prototype.filterNodes = function (filter) {\n  var copy = new this.constructor({\n    directed: this._isDirected,\n    multigraph: this._isMultigraph,\n    compound: this._isCompound\n  });\n  copy.setGraph(this.graph());\n  var self = this;\n\n  _.each(this._nodes, function (value, v) {\n    if (filter(v)) {\n      copy.setNode(v, value);\n    }\n  });\n\n  _.each(this._edgeObjs, function (e) {\n    if (copy.hasNode(e.v) && copy.hasNode(e.w)) {\n      copy.setEdge(e, self.edge(e));\n    }\n  });\n\n  var parents = {};\n\n  function findParent(v) {\n    var parent = self.parent(v);\n\n    if (parent === undefined || copy.hasNode(parent)) {\n      parents[v] = parent;\n      return parent;\n    } else if (parent in parents) {\n      return parents[parent];\n    } else {\n      return findParent(parent);\n    }\n  }\n\n  if (this._isCompound) {\n    _.each(copy.nodes(), function (v) {\n      copy.setParent(v, findParent(v));\n    });\n  }\n\n  return copy;\n};\n/* === Edge functions ========== */\n\n\nGraph.prototype.setDefaultEdgeLabel = function (newDefault) {\n  if (!_.isFunction(newDefault)) {\n    newDefault = _.constant(newDefault);\n  }\n\n  this._defaultEdgeLabelFn = newDefault;\n  return this;\n};\n\nGraph.prototype.edgeCount = function () {\n  return this._edgeCount;\n};\n\nGraph.prototype.edges = function () {\n  return _.values(this._edgeObjs);\n};\n\nGraph.prototype.setPath = function (vs, value) {\n  var self = this,\n      args = arguments;\n\n  _.reduce(vs, function (v, w) {\n    if (args.length > 1) {\n      self.setEdge(v, w, value);\n    } else {\n      self.setEdge(v, w);\n    }\n\n    return w;\n  });\n\n  return this;\n};\n/*\n * setEdge(v, w, [value, [name]])\n * setEdge({ v, w, [name] }, [value])\n */\n\n\nGraph.prototype.setEdge = function () {\n  var v,\n      w,\n      name,\n      value,\n      valueSpecified = false,\n      arg0 = arguments[0];\n\n  if (typeof arg0 === \"object\" && arg0 !== null && \"v\" in arg0) {\n    v = arg0.v;\n    w = arg0.w;\n    name = arg0.name;\n\n    if (arguments.length === 2) {\n      value = arguments[1];\n      valueSpecified = true;\n    }\n  } else {\n    v = arg0;\n    w = arguments[1];\n    name = arguments[3];\n\n    if (arguments.length > 2) {\n      value = arguments[2];\n      valueSpecified = true;\n    }\n  }\n\n  v = \"\" + v;\n  w = \"\" + w;\n\n  if (!_.isUndefined(name)) {\n    name = \"\" + name;\n  }\n\n  var e = edgeArgsToId(this._isDirected, v, w, name);\n\n  if (_.has(this._edgeLabels, e)) {\n    if (valueSpecified) {\n      this._edgeLabels[e] = value;\n    }\n\n    return this;\n  }\n\n  if (!_.isUndefined(name) && !this._isMultigraph) {\n    throw new Error(\"Cannot set a named edge when isMultigraph = false\");\n  } // It didn't exist, so we need to create it.\n  // First ensure the nodes exist.\n\n\n  this.setNode(v);\n  this.setNode(w);\n  this._edgeLabels[e] = valueSpecified ? value : this._defaultEdgeLabelFn(v, w, name);\n  var edgeObj = edgeArgsToObj(this._isDirected, v, w, name); // Ensure we add undirected edges in a consistent way.\n\n  v = edgeObj.v;\n  w = edgeObj.w;\n  Object.freeze(edgeObj);\n  this._edgeObjs[e] = edgeObj;\n  incrementOrInitEntry(this._preds[w], v);\n  incrementOrInitEntry(this._sucs[v], w);\n  this._in[w][e] = edgeObj;\n  this._out[v][e] = edgeObj;\n  this._edgeCount++;\n  return this;\n};\n\nGraph.prototype.edge = function (v, w, name) {\n  var e = arguments.length === 1 ? edgeObjToId(this._isDirected, arguments[0]) : edgeArgsToId(this._isDirected, v, w, name);\n  return this._edgeLabels[e];\n};\n\nGraph.prototype.hasEdge = function (v, w, name) {\n  var e = arguments.length === 1 ? edgeObjToId(this._isDirected, arguments[0]) : edgeArgsToId(this._isDirected, v, w, name);\n  return _.has(this._edgeLabels, e);\n};\n\nGraph.prototype.removeEdge = function (v, w, name) {\n  var e = arguments.length === 1 ? edgeObjToId(this._isDirected, arguments[0]) : edgeArgsToId(this._isDirected, v, w, name),\n      edge = this._edgeObjs[e];\n\n  if (edge) {\n    v = edge.v;\n    w = edge.w;\n    delete this._edgeLabels[e];\n    delete this._edgeObjs[e];\n    decrementOrRemoveEntry(this._preds[w], v);\n    decrementOrRemoveEntry(this._sucs[v], w);\n    delete this._in[w][e];\n    delete this._out[v][e];\n    this._edgeCount--;\n  }\n\n  return this;\n};\n\nGraph.prototype.inEdges = function (v, u) {\n  var inV = this._in[v];\n\n  if (inV) {\n    var edges = _.values(inV);\n\n    if (!u) {\n      return edges;\n    }\n\n    return _.filter(edges, function (edge) {\n      return edge.v === u;\n    });\n  }\n};\n\nGraph.prototype.outEdges = function (v, w) {\n  var outV = this._out[v];\n\n  if (outV) {\n    var edges = _.values(outV);\n\n    if (!w) {\n      return edges;\n    }\n\n    return _.filter(edges, function (edge) {\n      return edge.w === w;\n    });\n  }\n};\n\nGraph.prototype.nodeEdges = function (v, w) {\n  var inEdges = this.inEdges(v, w);\n\n  if (inEdges) {\n    return inEdges.concat(this.outEdges(v, w));\n  }\n};\n\nfunction incrementOrInitEntry(map, k) {\n  if (map[k]) {\n    map[k]++;\n  } else {\n    map[k] = 1;\n  }\n}\n\nfunction decrementOrRemoveEntry(map, k) {\n  if (! --map[k]) {\n    delete map[k];\n  }\n}\n\nfunction edgeArgsToId(isDirected, v_, w_, name) {\n  var v = \"\" + v_;\n  var w = \"\" + w_;\n\n  if (!isDirected && v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n\n  return v + EDGE_KEY_DELIM + w + EDGE_KEY_DELIM + (_.isUndefined(name) ? DEFAULT_EDGE_NAME : name);\n}\n\nfunction edgeArgsToObj(isDirected, v_, w_, name) {\n  var v = \"\" + v_;\n  var w = \"\" + w_;\n\n  if (!isDirected && v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n\n  var edgeObj = {\n    v: v,\n    w: w\n  };\n\n  if (name) {\n    edgeObj.name = name;\n  }\n\n  return edgeObj;\n}\n\nfunction edgeObjToId(isDirected, edgeObj) {\n  return edgeArgsToId(isDirected, edgeObj.v, edgeObj.w, edgeObj.name);\n}","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Map = getNative(root, 'Map');\nmodule.exports = Map;","var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `MapCache`.\n\n\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\nmodule.exports = MapCache;","/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n\n  return array;\n}\n\nmodule.exports = arrayEach;","module.exports = function (module) {\n  if (!module.webpackPolyfill) {\n    module.deprecate = function () {};\n\n    module.paths = []; // module.parent = undefined by default\n\n    if (!module.children) module.children = [];\n    Object.defineProperty(module, \"loaded\", {\n      enumerable: true,\n      get: function get() {\n        return module.l;\n      }\n    });\n    Object.defineProperty(module, \"id\", {\n      enumerable: true,\n      get: function get() {\n        return module.i;\n      }\n    });\n    module.webpackPolyfill = 1;\n  }\n\n  return module;\n};","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\n\nfunction isLength(value) {\n  return typeof value == 'number' && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;","var freeGlobal = require('./_freeGlobal');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Detect free variable `process` from Node.js. */\n\nvar freeProcess = moduleExports && freeGlobal.process;\n/** Used to access faster Node.js helpers. */\n\nvar nodeUtil = function () {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    } // Legacy `process.binding('util')` for Node.js < 10.\n\n\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}();\n\nmodule.exports = nodeUtil;","var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n\n  var result = [];\n\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseKeys;","var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Built-in value references. */\n\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\n\nvar getSymbols = !nativeGetSymbols ? stubArray : function (object) {\n  if (object == null) {\n    return [];\n  }\n\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function (symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\nmodule.exports = getSymbols;","/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n\n  return array;\n}\n\nmodule.exports = arrayPush;","var Uint8Array = require('./_Uint8Array');\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\n\n\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nmodule.exports = cloneArrayBuffer;","/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function () {\n    return value;\n  };\n}\n\nmodule.exports = constant;","var baseFor = require('./_baseFor'),\n    keys = require('./keys');\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nmodule.exports = baseForOwn;","var createBaseFor = require('./_createBaseFor');\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\n\n\nvar baseFor = createBaseFor();\nmodule.exports = baseFor;","/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n  set.forEach(function (value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;","var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\n\n\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n\n  return index && index == length ? object : undefined;\n}\n\nmodule.exports = baseGet;","var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used to match property names within property paths. */\n\n\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\n\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n\n  var type = typeof value;\n\n  if (type == 'number' || type == 'symbol' || type == 'boolean' || value == null || isSymbol(value)) {\n    return true;\n  }\n\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) || object != null && value in Object(object);\n}\n\nmodule.exports = isKey;","var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\n\n\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseFlatten;","var isSymbol = require('./isSymbol');\n/**\n * The base implementation of methods like `_.max` and `_.min` which accepts a\n * `comparator` to determine the extremum value.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The iteratee invoked per iteration.\n * @param {Function} comparator The comparator used to compare values.\n * @returns {*} Returns the extremum value.\n */\n\n\nfunction baseExtremum(array, iteratee, comparator) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var value = array[index],\n        current = iteratee(value);\n\n    if (current != null && (computed === undefined ? current === current && !isSymbol(current) : comparator(current, computed))) {\n      var computed = current,\n          result = value;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseExtremum;","/*\nCopyright (c) 2012-2014 Chris Pettitt\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n*/\nmodule.exports = {\n  graphlib: require(\"./lib/graphlib\"),\n  layout: require(\"./lib/layout\"),\n  debug: require(\"./lib/debug\"),\n  util: {\n    time: require(\"./lib/util\").time,\n    notime: require(\"./lib/util\").notime\n  },\n  version: require(\"./lib/version\")\n};","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty\";\nexport default function _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n    var ownKeys = Object.keys(source);\n\n    if (typeof Object.getOwnPropertySymbols === 'function') {\n      ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) {\n        return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n      }));\n    }\n\n    ownKeys.forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    });\n  }\n\n  return target;\n}","var g; // This works in non-strict mode\n\ng = function () {\n  return this;\n}();\n\ntry {\n  // This works if eval is allowed (see CSP)\n  g = g || new Function(\"return this\")();\n} catch (e) {\n  // This works if the window reference is available\n  if (typeof window === \"object\") g = window;\n} // g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\n\nmodule.exports = g;","var Stack = require('./_Stack'),\n    arrayEach = require('./_arrayEach'),\n    assignValue = require('./_assignValue'),\n    baseAssign = require('./_baseAssign'),\n    baseAssignIn = require('./_baseAssignIn'),\n    cloneBuffer = require('./_cloneBuffer'),\n    copyArray = require('./_copyArray'),\n    copySymbols = require('./_copySymbols'),\n    copySymbolsIn = require('./_copySymbolsIn'),\n    getAllKeys = require('./_getAllKeys'),\n    getAllKeysIn = require('./_getAllKeysIn'),\n    getTag = require('./_getTag'),\n    initCloneArray = require('./_initCloneArray'),\n    initCloneByTag = require('./_initCloneByTag'),\n    initCloneObject = require('./_initCloneObject'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isMap = require('./isMap'),\n    isObject = require('./isObject'),\n    isSet = require('./isSet'),\n    keys = require('./keys');\n/** Used to compose bitmasks for cloning. */\n\n\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/** Used to identify `toStringTag` values supported by `_.clone`. */\n\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] = cloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] = cloneableTags[boolTag] = cloneableTags[dateTag] = cloneableTags[float32Tag] = cloneableTags[float64Tag] = cloneableTags[int8Tag] = cloneableTags[int16Tag] = cloneableTags[int32Tag] = cloneableTags[mapTag] = cloneableTags[numberTag] = cloneableTags[objectTag] = cloneableTags[regexpTag] = cloneableTags[setTag] = cloneableTags[stringTag] = cloneableTags[symbolTag] = cloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] = cloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] = cloneableTags[weakMapTag] = false;\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\n\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n\n  if (result !== undefined) {\n    return result;\n  }\n\n  if (!isObject(value)) {\n    return value;\n  }\n\n  var isArr = isArray(value);\n\n  if (isArr) {\n    result = initCloneArray(value);\n\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n\n    if (tag == objectTag || tag == argsTag || isFunc && !object) {\n      result = isFlat || isFunc ? {} : initCloneObject(value);\n\n      if (!isDeep) {\n        return isFlat ? copySymbolsIn(value, baseAssignIn(result, value)) : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  } // Check for circular references and return its corresponding clone.\n\n\n  stack || (stack = new Stack());\n  var stacked = stack.get(value);\n\n  if (stacked) {\n    return stacked;\n  }\n\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function (subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n    return result;\n  }\n\n  if (isMap(value)) {\n    value.forEach(function (subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n    return result;\n  }\n\n  var keysFunc = isFull ? isFlat ? getAllKeysIn : getAllKeys : isFlat ? keysIn : keys;\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function (subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    } // Recursively populate clone (susceptible to call stack limits).\n\n\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nmodule.exports = baseClone;","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\nmodule.exports = freeGlobal;","/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\n\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n\n    try {\n      return func + '';\n    } catch (e) {}\n  }\n\n  return '';\n}\n\nmodule.exports = toSource;","var getNative = require('./_getNative');\n\nvar defineProperty = function () {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}();\n\nmodule.exports = defineProperty;","var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && ( // Safari 9 has enumerable `arguments.length` in strict mode.\n    key == 'length' || // Node.js 0.10 has enumerable non-index properties on buffers.\n    isBuff && (key == 'offset' || key == 'parent') || // PhantomJS 2 has enumerable non-index properties on typed arrays.\n    isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset') || // Skip index properties.\n    isIndex(key, length)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function (arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;","var root = require('./_root');\n/** Detect free variable `exports`. */\n\n\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n/** Detect free variable `module`. */\n\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n/** Detect the popular CommonJS extension `module.exports`. */\n\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n/** Built-in value references. */\n\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\n\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n  buffer.copy(result);\n  return result;\n}\n\nmodule.exports = cloneBuffer;","/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n  array || (array = Array(length));\n\n  while (++index < length) {\n    array[index] = source[index];\n  }\n\n  return array;\n}\n\nmodule.exports = copyArray;","/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = arrayFilter;","/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;","var arrayPush = require('./_arrayPush'),\n    getPrototype = require('./_getPrototype'),\n    getSymbols = require('./_getSymbols'),\n    stubArray = require('./stubArray');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\n\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function (object) {\n  var result = [];\n\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n\n  return result;\n};\nmodule.exports = getSymbolsIn;","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;","var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Set = getNative(root, 'Set');\nmodule.exports = Set;","var root = require('./_root');\n/** Built-in value references. */\n\n\nvar Uint8Array = root.Uint8Array;\nmodule.exports = Uint8Array;","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\n\n\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nmodule.exports = cloneTypedArray;","var baseCreate = require('./_baseCreate'),\n    getPrototype = require('./_getPrototype'),\n    isPrototype = require('./_isPrototype');\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\n\n\nfunction initCloneObject(object) {\n  return typeof object.constructor == 'function' && !isPrototype(object) ? baseCreate(getPrototype(object)) : {};\n}\n\nmodule.exports = initCloneObject;","var isObject = require('./isObject');\n/** Built-in value references. */\n\n\nvar objectCreate = Object.create;\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\n\nvar baseCreate = function () {\n  function object() {}\n\n  return function (proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n\n    object.prototype = proto;\n    var result = new object();\n    object.prototype = undefined;\n    return result;\n  };\n}();\n\nmodule.exports = baseCreate;","module.exports = require('./forEach');","var arrayEach = require('./_arrayEach'),\n    baseEach = require('./_baseEach'),\n    castFunction = require('./_castFunction'),\n    isArray = require('./isArray');\n/**\n * Iterates over elements of `collection` and invokes `iteratee` for each element.\n * The iteratee is invoked with three arguments: (value, index|key, collection).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n * property are iterated like arrays. To avoid this behavior use `_.forIn`\n * or `_.forOwn` for object iteration.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias each\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n * @see _.forEachRight\n * @example\n *\n * _.forEach([1, 2], function(value) {\n *   console.log(value);\n * });\n * // => Logs `1` then `2`.\n *\n * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n */\n\n\nfunction forEach(collection, iteratee) {\n  var func = isArray(collection) ? arrayEach : baseEach;\n  return func(collection, castFunction(iteratee));\n}\n\nmodule.exports = forEach;","var identity = require('./identity');\n/**\n * Casts `value` to `identity` if it's not a function.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Function} Returns cast function.\n */\n\n\nfunction castFunction(value) {\n  return typeof value == 'function' ? value : identity;\n}\n\nmodule.exports = castFunction;","var arrayFilter = require('./_arrayFilter'),\n    baseFilter = require('./_baseFilter'),\n    baseIteratee = require('./_baseIteratee'),\n    isArray = require('./isArray');\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n */\n\n\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nmodule.exports = filter;","var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\n\n\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n\n  if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {\n    return value !== value && other !== other;\n  }\n\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;","var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\n\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(array);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var index = -1,\n      result = true,\n      seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : undefined;\n  stack.set(array, other);\n  stack.set(other, array); // Ignore non-index properties.\n\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);\n    }\n\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n\n      result = false;\n      break;\n    } // Recursively compare arrays (susceptible to call stack limits).\n\n\n    if (seen) {\n      if (!arraySome(other, function (othValue, othIndex) {\n        if (!cacheHas(seen, othIndex) && (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n          return seen.push(othIndex);\n        }\n      })) {\n        result = false;\n        break;\n      }\n    } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n      result = false;\n      break;\n    }\n  }\n\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;","var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\n\n\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n  this.__data__ = new MapCache();\n\n  while (++index < length) {\n    this.add(values[index]);\n  }\n} // Add methods to `SetCache`.\n\n\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\nmodule.exports = SetCache;","/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;","var isObject = require('./isObject');\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\n\n\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;","/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function (object) {\n    if (object == null) {\n      return false;\n    }\n\n    return object[key] === srcValue && (srcValue !== undefined || key in Object(object));\n  };\n}\n\nmodule.exports = matchesStrictComparable;","var baseToString = require('./_baseToString');\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\n\n\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;","var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\n\n\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;","var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\n\n\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n\n    object = object[key];\n  }\n\n  if (result || ++index != length) {\n    return result;\n  }\n\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) && (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;","/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function (object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;","var baseHas = require('./_baseHas'),\n    hasPath = require('./_hasPath');\n/**\n * Checks if `path` is a direct property of `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = { 'a': { 'b': 2 } };\n * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.has(object, 'a');\n * // => true\n *\n * _.has(object, 'a.b');\n * // => true\n *\n * _.has(object, ['a', 'b']);\n * // => true\n *\n * _.has(other, 'a');\n * // => false\n */\n\n\nfunction has(object, path) {\n  return object != null && hasPath(object, path, baseHas);\n}\n\nmodule.exports = has;","/**\n * Checks if `value` is `undefined`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n * @example\n *\n * _.isUndefined(void 0);\n * // => true\n *\n * _.isUndefined(null);\n * // => false\n */\nfunction isUndefined(value) {\n  return value === undefined;\n}\n\nmodule.exports = isUndefined;","var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    isArray = require('./isArray');\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\n\n\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nmodule.exports = map;","var baseEach = require('./_baseEach'),\n    isArrayLike = require('./isArrayLike');\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\n\n\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n  baseEach(collection, function (value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nmodule.exports = baseMap;","var arrayReduce = require('./_arrayReduce'),\n    baseEach = require('./_baseEach'),\n    baseIteratee = require('./_baseIteratee'),\n    baseReduce = require('./_baseReduce'),\n    isArray = require('./isArray');\n/**\n * Reduces `collection` to a value which is the accumulated result of running\n * each element in `collection` thru `iteratee`, where each successive\n * invocation is supplied the return value of the previous. If `accumulator`\n * is not given, the first element of `collection` is used as the initial\n * value. The iteratee is invoked with four arguments:\n * (accumulator, value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.reduce`, `_.reduceRight`, and `_.transform`.\n *\n * The guarded methods are:\n * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n * and `sortBy`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @returns {*} Returns the accumulated value.\n * @see _.reduceRight\n * @example\n *\n * _.reduce([1, 2], function(sum, n) {\n *   return sum + n;\n * }, 0);\n * // => 3\n *\n * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n *   (result[value] || (result[value] = [])).push(key);\n *   return result;\n * }, {});\n * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n */\n\n\nfunction reduce(collection, iteratee, accumulator) {\n  var func = isArray(collection) ? arrayReduce : baseReduce,\n      initAccum = arguments.length < 3;\n  return func(collection, baseIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n}\n\nmodule.exports = reduce;","var apply = require('./_apply');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeMax = Math.max;\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\n\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? func.length - 1 : start, 0);\n  return function () {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n\n    index = -1;\n    var otherArgs = Array(start + 1);\n\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;","var baseSetToString = require('./_baseSetToString'),\n    shortOut = require('./_shortOut');\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\n\n\nvar setToString = shortOut(baseSetToString);\nmodule.exports = setToString;","/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while (fromRight ? index-- : ++index < length) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = baseFindIndex;","var isArrayLike = require('./isArrayLike'),\n    isObjectLike = require('./isObjectLike');\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\n\n\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nmodule.exports = isArrayLikeObject;","var baseValues = require('./_baseValues'),\n    keys = require('./keys');\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\n\n\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nmodule.exports = values;","var _ = require(\"../lodash\"),\n    PriorityQueue = require(\"../data/priority-queue\");\n\nmodule.exports = dijkstra;\n\nvar DEFAULT_WEIGHT_FUNC = _.constant(1);\n\nfunction dijkstra(g, source, weightFn, edgeFn) {\n  return runDijkstra(g, String(source), weightFn || DEFAULT_WEIGHT_FUNC, edgeFn || function (v) {\n    return g.outEdges(v);\n  });\n}\n\nfunction runDijkstra(g, source, weightFn, edgeFn) {\n  var results = {},\n      pq = new PriorityQueue(),\n      v,\n      vEntry;\n\n  var updateNeighbors = function updateNeighbors(edge) {\n    var w = edge.v !== v ? edge.v : edge.w,\n        wEntry = results[w],\n        weight = weightFn(edge),\n        distance = vEntry.distance + weight;\n\n    if (weight < 0) {\n      throw new Error(\"dijkstra does not allow negative edge weights. \" + \"Bad edge: \" + edge + \" Weight: \" + weight);\n    }\n\n    if (distance < wEntry.distance) {\n      wEntry.distance = distance;\n      wEntry.predecessor = v;\n      pq.decrease(w, distance);\n    }\n  };\n\n  g.nodes().forEach(function (v) {\n    var distance = v === source ? 0 : Number.POSITIVE_INFINITY;\n    results[v] = {\n      distance: distance\n    };\n    pq.add(v, distance);\n  });\n\n  while (pq.size() > 0) {\n    v = pq.removeMin();\n    vEntry = results[v];\n\n    if (vEntry.distance === Number.POSITIVE_INFINITY) {\n      break;\n    }\n\n    edgeFn(v).forEach(updateNeighbors);\n  }\n\n  return results;\n}","var _ = require(\"../lodash\");\n\nmodule.exports = PriorityQueue;\n/**\n * A min-priority queue data structure. This algorithm is derived from Cormen,\n * et al., \"Introduction to Algorithms\". The basic idea of a min-priority\n * queue is that you can efficiently (in O(1) time) get the smallest key in\n * the queue. Adding and removing elements takes O(log n) time. A key can\n * have its priority decreased in O(log n) time.\n */\n\nfunction PriorityQueue() {\n  this._arr = [];\n  this._keyIndices = {};\n}\n/**\n * Returns the number of elements in the queue. Takes `O(1)` time.\n */\n\n\nPriorityQueue.prototype.size = function () {\n  return this._arr.length;\n};\n/**\n * Returns the keys that are in the queue. Takes `O(n)` time.\n */\n\n\nPriorityQueue.prototype.keys = function () {\n  return this._arr.map(function (x) {\n    return x.key;\n  });\n};\n/**\n * Returns `true` if **key** is in the queue and `false` if not.\n */\n\n\nPriorityQueue.prototype.has = function (key) {\n  return _.has(this._keyIndices, key);\n};\n/**\n * Returns the priority for **key**. If **key** is not present in the queue\n * then this function returns `undefined`. Takes `O(1)` time.\n *\n * @param {Object} key\n */\n\n\nPriorityQueue.prototype.priority = function (key) {\n  var index = this._keyIndices[key];\n\n  if (index !== undefined) {\n    return this._arr[index].priority;\n  }\n};\n/**\n * Returns the key for the minimum element in this queue. If the queue is\n * empty this function throws an Error. Takes `O(1)` time.\n */\n\n\nPriorityQueue.prototype.min = function () {\n  if (this.size() === 0) {\n    throw new Error(\"Queue underflow\");\n  }\n\n  return this._arr[0].key;\n};\n/**\n * Inserts a new key into the priority queue. If the key already exists in\n * the queue this function returns `false`; otherwise it will return `true`.\n * Takes `O(n)` time.\n *\n * @param {Object} key the key to add\n * @param {Number} priority the initial priority for the key\n */\n\n\nPriorityQueue.prototype.add = function (key, priority) {\n  var keyIndices = this._keyIndices;\n  key = String(key);\n\n  if (!_.has(keyIndices, key)) {\n    var arr = this._arr;\n    var index = arr.length;\n    keyIndices[key] = index;\n    arr.push({\n      key: key,\n      priority: priority\n    });\n\n    this._decrease(index);\n\n    return true;\n  }\n\n  return false;\n};\n/**\n * Removes and returns the smallest key in the queue. Takes `O(log n)` time.\n */\n\n\nPriorityQueue.prototype.removeMin = function () {\n  this._swap(0, this._arr.length - 1);\n\n  var min = this._arr.pop();\n\n  delete this._keyIndices[min.key];\n\n  this._heapify(0);\n\n  return min.key;\n};\n/**\n * Decreases the priority for **key** to **priority**. If the new priority is\n * greater than the previous priority, this function will throw an Error.\n *\n * @param {Object} key the key for which to raise priority\n * @param {Number} priority the new priority for the key\n */\n\n\nPriorityQueue.prototype.decrease = function (key, priority) {\n  var index = this._keyIndices[key];\n\n  if (priority > this._arr[index].priority) {\n    throw new Error(\"New priority is greater than current priority. \" + \"Key: \" + key + \" Old: \" + this._arr[index].priority + \" New: \" + priority);\n  }\n\n  this._arr[index].priority = priority;\n\n  this._decrease(index);\n};\n\nPriorityQueue.prototype._heapify = function (i) {\n  var arr = this._arr;\n  var l = 2 * i,\n      r = l + 1,\n      largest = i;\n\n  if (l < arr.length) {\n    largest = arr[l].priority < arr[largest].priority ? l : largest;\n\n    if (r < arr.length) {\n      largest = arr[r].priority < arr[largest].priority ? r : largest;\n    }\n\n    if (largest !== i) {\n      this._swap(i, largest);\n\n      this._heapify(largest);\n    }\n  }\n};\n\nPriorityQueue.prototype._decrease = function (index) {\n  var arr = this._arr;\n  var priority = arr[index].priority;\n  var parent;\n\n  while (index !== 0) {\n    parent = index >> 1;\n\n    if (arr[parent].priority < priority) {\n      break;\n    }\n\n    this._swap(index, parent);\n\n    index = parent;\n  }\n};\n\nPriorityQueue.prototype._swap = function (i, j) {\n  var arr = this._arr;\n  var keyIndices = this._keyIndices;\n  var origArrI = arr[i];\n  var origArrJ = arr[j];\n  arr[i] = origArrJ;\n  arr[j] = origArrI;\n  keyIndices[origArrJ.key] = i;\n  keyIndices[origArrI.key] = j;\n};","var _ = require(\"../lodash\");\n\nmodule.exports = tarjan;\n\nfunction tarjan(g) {\n  var index = 0,\n      stack = [],\n      visited = {},\n      // node id -> { onStack, lowlink, index }\n  results = [];\n\n  function dfs(v) {\n    var entry = visited[v] = {\n      onStack: true,\n      lowlink: index,\n      index: index++\n    };\n    stack.push(v);\n    g.successors(v).forEach(function (w) {\n      if (!_.has(visited, w)) {\n        dfs(w);\n        entry.lowlink = Math.min(entry.lowlink, visited[w].lowlink);\n      } else if (visited[w].onStack) {\n        entry.lowlink = Math.min(entry.lowlink, visited[w].index);\n      }\n    });\n\n    if (entry.lowlink === entry.index) {\n      var cmpt = [],\n          w;\n\n      do {\n        w = stack.pop();\n        visited[w].onStack = false;\n        cmpt.push(w);\n      } while (v !== w);\n\n      results.push(cmpt);\n    }\n  }\n\n  g.nodes().forEach(function (v) {\n    if (!_.has(visited, v)) {\n      dfs(v);\n    }\n  });\n  return results;\n}","var _ = require(\"../lodash\");\n\nmodule.exports = topsort;\ntopsort.CycleException = CycleException;\n\nfunction topsort(g) {\n  var visited = {},\n      stack = {},\n      results = [];\n\n  function visit(node) {\n    if (_.has(stack, node)) {\n      throw new CycleException();\n    }\n\n    if (!_.has(visited, node)) {\n      stack[node] = true;\n      visited[node] = true;\n\n      _.each(g.predecessors(node), visit);\n\n      delete stack[node];\n      results.push(node);\n    }\n  }\n\n  _.each(g.sinks(), visit);\n\n  if (_.size(visited) !== g.nodeCount()) {\n    throw new CycleException();\n  }\n\n  return results;\n}\n\nfunction CycleException() {}\n\nCycleException.prototype = new Error(); // must be an instance of Error to pass testing","var _ = require(\"../lodash\");\n\nmodule.exports = dfs;\n/*\n * A helper that preforms a pre- or post-order traversal on the input graph\n * and returns the nodes in the order they were visited. If the graph is\n * undirected then this algorithm will navigate using neighbors. If the graph\n * is directed then this algorithm will navigate using successors.\n *\n * Order must be one of \"pre\" or \"post\".\n */\n\nfunction dfs(g, vs, order) {\n  if (!_.isArray(vs)) {\n    vs = [vs];\n  }\n\n  var navigation = (g.isDirected() ? g.successors : g.neighbors).bind(g);\n  var acc = [],\n      visited = {};\n\n  _.each(vs, function (v) {\n    if (!g.hasNode(v)) {\n      throw new Error(\"Graph does not have node: \" + v);\n    }\n\n    doDfs(g, v, order === \"post\", visited, navigation, acc);\n  });\n\n  return acc;\n}\n\nfunction doDfs(g, v, postorder, visited, navigation, acc) {\n  if (!_.has(visited, v)) {\n    visited[v] = true;\n\n    if (!postorder) {\n      acc.push(v);\n    }\n\n    _.each(navigation(v), function (w) {\n      doDfs(g, w, postorder, visited, navigation, acc);\n    });\n\n    if (postorder) {\n      acc.push(v);\n    }\n  }\n}","var toNumber = require('./toNumber');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\n\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n\n  value = toNumber(value);\n\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = value < 0 ? -1 : 1;\n    return sign * MAX_INTEGER;\n  }\n\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;","var baseFlatten = require('./_baseFlatten');\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\n\n\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nmodule.exports = flatten;","var baseAssignValue = require('./_baseAssignValue'),\n    eq = require('./eq');\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\n\n\nfunction assignMergeValue(object, key, value) {\n  if (value !== undefined && !eq(object[key], value) || value === undefined && !(key in object)) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nmodule.exports = assignMergeValue;","/**\n * Gets the value at `key`, unless `key` is \"__proto__\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\nmodule.exports = safeGet;","/**\n * The base implementation of `_.lt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is less than `other`,\n *  else `false`.\n */\nfunction baseLt(value, other) {\n  return value < other;\n}\n\nmodule.exports = baseLt;","\"use strict\";\n\nvar _ = require(\"../lodash\"),\n    Graph = require(\"../graphlib\").Graph,\n    slack = require(\"./util\").slack;\n\nmodule.exports = feasibleTree;\n/*\n * Constructs a spanning tree with tight edges and adjusted the input node's\n * ranks to achieve this. A tight edge is one that is has a length that matches\n * its \"minlen\" attribute.\n *\n * The basic structure for this function is derived from Gansner, et al., \"A\n * Technique for Drawing Directed Graphs.\"\n *\n * Pre-conditions:\n *\n *    1. Graph must be a DAG.\n *    2. Graph must be connected.\n *    3. Graph must have at least one node.\n *    5. Graph nodes must have been previously assigned a \"rank\" property that\n *       respects the \"minlen\" property of incident edges.\n *    6. Graph edges must have a \"minlen\" property.\n *\n * Post-conditions:\n *\n *    - Graph nodes will have their rank adjusted to ensure that all edges are\n *      tight.\n *\n * Returns a tree (undirected graph) that is constructed using only \"tight\"\n * edges.\n */\n\nfunction feasibleTree(g) {\n  var t = new Graph({\n    directed: false\n  }); // Choose arbitrary node from which to start our tree\n\n  var start = g.nodes()[0],\n      size = g.nodeCount();\n  t.setNode(start, {});\n  var edge, delta;\n\n  while (tightTree(t, g) < size) {\n    edge = findMinSlackEdge(t, g);\n    delta = t.hasNode(edge.v) ? slack(g, edge) : -slack(g, edge);\n    shiftRanks(t, g, delta);\n  }\n\n  return t;\n}\n/*\n * Finds a maximal tree of tight edges and returns the number of nodes in the\n * tree.\n */\n\n\nfunction tightTree(t, g) {\n  function dfs(v) {\n    _.forEach(g.nodeEdges(v), function (e) {\n      var edgeV = e.v,\n          w = v === edgeV ? e.w : edgeV;\n\n      if (!t.hasNode(w) && !slack(g, e)) {\n        t.setNode(w, {});\n        t.setEdge(v, w, {});\n        dfs(w);\n      }\n    });\n  }\n\n  _.forEach(t.nodes(), dfs);\n\n  return t.nodeCount();\n}\n/*\n * Finds the edge with the smallest slack that is incident on tree and returns\n * it.\n */\n\n\nfunction findMinSlackEdge(t, g) {\n  return _.minBy(g.edges(), function (e) {\n    if (t.hasNode(e.v) !== t.hasNode(e.w)) {\n      return slack(g, e);\n    }\n  });\n}\n\nfunction shiftRanks(t, g, delta) {\n  _.forEach(t.nodes(), function (v) {\n    g.node(v).rank += delta;\n  });\n}","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n\n/* eslint-disable no-proto */\n'use strict';\n\nvar base64 = require('base64-js');\n\nvar ieee754 = require('ieee754');\n\nvar isArray = require('isarray');\n\nexports.Buffer = Buffer;\nexports.SlowBuffer = SlowBuffer;\nexports.INSPECT_MAX_BYTES = 50;\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\n\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined ? global.TYPED_ARRAY_SUPPORT : typedArraySupport();\n/*\n * Export kMaxLength after typed array support is determined.\n */\n\nexports.kMaxLength = kMaxLength();\n\nfunction typedArraySupport() {\n  try {\n    var arr = new Uint8Array(1);\n    arr.__proto__ = {\n      __proto__: Uint8Array.prototype,\n      foo: function foo() {\n        return 42;\n      }\n    };\n    return arr.foo() === 42 && // typed array instances can be augmented\n    typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n    arr.subarray(1, 1).byteLength === 0; // ie10 has broken `subarray`\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction kMaxLength() {\n  return Buffer.TYPED_ARRAY_SUPPORT ? 0x7fffffff : 0x3fffffff;\n}\n\nfunction createBuffer(that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length');\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length);\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length);\n    }\n\n    that.length = length;\n  }\n\n  return that;\n}\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\n\nfunction Buffer(arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length);\n  } // Common case.\n\n\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error('If encoding is specified then the first argument must be a string');\n    }\n\n    return allocUnsafe(this, arg);\n  }\n\n  return from(this, arg, encodingOrOffset, length);\n}\n\nBuffer.poolSize = 8192; // not used by this implementation\n// TODO: Legacy, not needed anymore. Remove in next major version.\n\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype;\n  return arr;\n};\n\nfunction from(that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number');\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length);\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset);\n  }\n\n  return fromObject(that, value);\n}\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\n\n\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length);\n};\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype;\n  Buffer.__proto__ = Uint8Array;\n\n  if (typeof Symbol !== 'undefined' && Symbol.species && Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    });\n  }\n}\n\nfunction assertSize(size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number');\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative');\n  }\n}\n\nfunction alloc(that, size, fill, encoding) {\n  assertSize(size);\n\n  if (size <= 0) {\n    return createBuffer(that, size);\n  }\n\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string' ? createBuffer(that, size).fill(fill, encoding) : createBuffer(that, size).fill(fill);\n  }\n\n  return createBuffer(that, size);\n}\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\n\n\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding);\n};\n\nfunction allocUnsafe(that, size) {\n  assertSize(size);\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0);\n\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0;\n    }\n  }\n\n  return that;\n}\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\n\n\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size);\n};\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\n\n\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size);\n};\n\nfunction fromString(that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8';\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding');\n  }\n\n  var length = byteLength(string, encoding) | 0;\n  that = createBuffer(that, length);\n  var actual = that.write(string, encoding);\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual);\n  }\n\n  return that;\n}\n\nfunction fromArrayLike(that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0;\n  that = createBuffer(that, length);\n\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255;\n  }\n\n  return that;\n}\n\nfunction fromArrayBuffer(that, array, byteOffset, length) {\n  array.byteLength; // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds');\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds');\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array);\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset);\n  } else {\n    array = new Uint8Array(array, byteOffset, length);\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array;\n    that.__proto__ = Buffer.prototype;\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array);\n  }\n\n  return that;\n}\n\nfunction fromObject(that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0;\n    that = createBuffer(that, len);\n\n    if (that.length === 0) {\n      return that;\n    }\n\n    obj.copy(that, 0, 0, len);\n    return that;\n  }\n\n  if (obj) {\n    if (typeof ArrayBuffer !== 'undefined' && obj.buffer instanceof ArrayBuffer || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0);\n      }\n\n      return fromArrayLike(that, obj);\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data);\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.');\n}\n\nfunction checked(length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + kMaxLength().toString(16) + ' bytes');\n  }\n\n  return length | 0;\n}\n\nfunction SlowBuffer(length) {\n  if (+length != length) {\n    // eslint-disable-line eqeqeq\n    length = 0;\n  }\n\n  return Buffer.alloc(+length);\n}\n\nBuffer.isBuffer = function isBuffer(b) {\n  return !!(b != null && b._isBuffer);\n};\n\nBuffer.compare = function compare(a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers');\n  }\n\n  if (a === b) return 0;\n  var x = a.length;\n  var y = b.length;\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i];\n      y = b[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n};\n\nBuffer.isEncoding = function isEncoding(encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true;\n\n    default:\n      return false;\n  }\n};\n\nBuffer.concat = function concat(list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers');\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0);\n  }\n\n  var i;\n\n  if (length === undefined) {\n    length = 0;\n\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length;\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length);\n  var pos = 0;\n\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i];\n\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers');\n    }\n\n    buf.copy(buffer, pos);\n    pos += buf.length;\n  }\n\n  return buffer;\n};\n\nfunction byteLength(string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length;\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' && (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength;\n  }\n\n  if (typeof string !== 'string') {\n    string = '' + string;\n  }\n\n  var len = string.length;\n  if (len === 0) return 0; // Use a for loop to avoid recursion\n\n  var loweredCase = false;\n\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len;\n\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length;\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2;\n\n      case 'hex':\n        return len >>> 1;\n\n      case 'base64':\n        return base64ToBytes(string).length;\n\n      default:\n        if (loweredCase) return utf8ToBytes(string).length; // assume utf8\n\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n}\n\nBuffer.byteLength = byteLength;\n\nfunction slowToString(encoding, start, end) {\n  var loweredCase = false; // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n\n  if (start === undefined || start < 0) {\n    start = 0;\n  } // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n\n\n  if (start > this.length) {\n    return '';\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length;\n  }\n\n  if (end <= 0) {\n    return '';\n  } // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n\n\n  end >>>= 0;\n  start >>>= 0;\n\n  if (end <= start) {\n    return '';\n  }\n\n  if (!encoding) encoding = 'utf8';\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end);\n\n      case 'ascii':\n        return asciiSlice(this, start, end);\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end);\n\n      case 'base64':\n        return base64Slice(this, start, end);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = (encoding + '').toLowerCase();\n        loweredCase = true;\n    }\n  }\n} // The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\n\n\nBuffer.prototype._isBuffer = true;\n\nfunction swap(b, n, m) {\n  var i = b[n];\n  b[n] = b[m];\n  b[m] = i;\n}\n\nBuffer.prototype.swap16 = function swap16() {\n  var len = this.length;\n\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits');\n  }\n\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1);\n  }\n\n  return this;\n};\n\nBuffer.prototype.swap32 = function swap32() {\n  var len = this.length;\n\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits');\n  }\n\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3);\n    swap(this, i + 1, i + 2);\n  }\n\n  return this;\n};\n\nBuffer.prototype.swap64 = function swap64() {\n  var len = this.length;\n\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits');\n  }\n\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7);\n    swap(this, i + 1, i + 6);\n    swap(this, i + 2, i + 5);\n    swap(this, i + 3, i + 4);\n  }\n\n  return this;\n};\n\nBuffer.prototype.toString = function toString() {\n  var length = this.length | 0;\n  if (length === 0) return '';\n  if (arguments.length === 0) return utf8Slice(this, 0, length);\n  return slowToString.apply(this, arguments);\n};\n\nBuffer.prototype.equals = function equals(b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');\n  if (this === b) return true;\n  return Buffer.compare(this, b) === 0;\n};\n\nBuffer.prototype.inspect = function inspect() {\n  var str = '';\n  var max = exports.INSPECT_MAX_BYTES;\n\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ');\n    if (this.length > max) str += ' ... ';\n  }\n\n  return '<Buffer ' + str + '>';\n};\n\nBuffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer');\n  }\n\n  if (start === undefined) {\n    start = 0;\n  }\n\n  if (end === undefined) {\n    end = target ? target.length : 0;\n  }\n\n  if (thisStart === undefined) {\n    thisStart = 0;\n  }\n\n  if (thisEnd === undefined) {\n    thisEnd = this.length;\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index');\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0;\n  }\n\n  if (thisStart >= thisEnd) {\n    return -1;\n  }\n\n  if (start >= end) {\n    return 1;\n  }\n\n  start >>>= 0;\n  end >>>= 0;\n  thisStart >>>= 0;\n  thisEnd >>>= 0;\n  if (this === target) return 0;\n  var x = thisEnd - thisStart;\n  var y = end - start;\n  var len = Math.min(x, y);\n  var thisCopy = this.slice(thisStart, thisEnd);\n  var targetCopy = target.slice(start, end);\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i];\n      y = targetCopy[i];\n      break;\n    }\n  }\n\n  if (x < y) return -1;\n  if (y < x) return 1;\n  return 0;\n}; // Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\n\n\nfunction bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1; // Normalize byteOffset\n\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset;\n    byteOffset = 0;\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff;\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000;\n  }\n\n  byteOffset = +byteOffset; // Coerce to Number.\n\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : buffer.length - 1;\n  } // Normalize byteOffset: negative offsets start from the end of the buffer\n\n\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset;\n\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1;else byteOffset = buffer.length - 1;\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0;else return -1;\n  } // Normalize val\n\n\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding);\n  } // Finally, search either indexOf (if dir is true) or lastIndexOf\n\n\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1;\n    }\n\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir);\n  } else if (typeof val === 'number') {\n    val = val & 0xFF; // Search for a byte value [0-255]\n\n    if (Buffer.TYPED_ARRAY_SUPPORT && typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);\n      }\n    }\n\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir);\n  }\n\n  throw new TypeError('val must be string, number or Buffer');\n}\n\nfunction arrayIndexOf(arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1;\n  var arrLength = arr.length;\n  var valLength = val.length;\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase();\n\n    if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1;\n      }\n\n      indexSize = 2;\n      arrLength /= 2;\n      valLength /= 2;\n      byteOffset /= 2;\n    }\n  }\n\n  function read(buf, i) {\n    if (indexSize === 1) {\n      return buf[i];\n    } else {\n      return buf.readUInt16BE(i * indexSize);\n    }\n  }\n\n  var i;\n\n  if (dir) {\n    var foundIndex = -1;\n\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i;\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex;\n        foundIndex = -1;\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;\n\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true;\n\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false;\n          break;\n        }\n      }\n\n      if (found) return i;\n    }\n  }\n\n  return -1;\n}\n\nBuffer.prototype.includes = function includes(val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1;\n};\n\nBuffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true);\n};\n\nBuffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false);\n};\n\nfunction hexWrite(buf, string, offset, length) {\n  offset = Number(offset) || 0;\n  var remaining = buf.length - offset;\n\n  if (!length) {\n    length = remaining;\n  } else {\n    length = Number(length);\n\n    if (length > remaining) {\n      length = remaining;\n    }\n  } // must be an even number of digits\n\n\n  var strLen = string.length;\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string');\n\n  if (length > strLen / 2) {\n    length = strLen / 2;\n  }\n\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16);\n    if (isNaN(parsed)) return i;\n    buf[offset + i] = parsed;\n  }\n\n  return i;\n}\n\nfunction utf8Write(buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nfunction asciiWrite(buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length);\n}\n\nfunction latin1Write(buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length);\n}\n\nfunction base64Write(buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length);\n}\n\nfunction ucs2Write(buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);\n}\n\nBuffer.prototype.write = function write(string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8';\n    length = this.length;\n    offset = 0; // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset;\n    length = this.length;\n    offset = 0; // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0;\n\n    if (isFinite(length)) {\n      length = length | 0;\n      if (encoding === undefined) encoding = 'utf8';\n    } else {\n      encoding = length;\n      length = undefined;\n    } // legacy write(string, encoding, offset, length) - remove in v0.13\n\n  } else {\n    throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');\n  }\n\n  var remaining = this.length - offset;\n  if (length === undefined || length > remaining) length = remaining;\n\n  if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds');\n  }\n\n  if (!encoding) encoding = 'utf8';\n  var loweredCase = false;\n\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length);\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length);\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length);\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length);\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length);\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length);\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);\n        encoding = ('' + encoding).toLowerCase();\n        loweredCase = true;\n    }\n  }\n};\n\nBuffer.prototype.toJSON = function toJSON() {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  };\n};\n\nfunction base64Slice(buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf);\n  } else {\n    return base64.fromByteArray(buf.slice(start, end));\n  }\n}\n\nfunction utf8Slice(buf, start, end) {\n  end = Math.min(buf.length, end);\n  var res = [];\n  var i = start;\n\n  while (i < end) {\n    var firstByte = buf[i];\n    var codePoint = null;\n    var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint;\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte;\n          }\n\n          break;\n\n        case 2:\n          secondByte = buf[i + 1];\n\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;\n\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 3:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;\n\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n          break;\n\n        case 4:\n          secondByte = buf[i + 1];\n          thirdByte = buf[i + 2];\n          fourthByte = buf[i + 3];\n\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;\n\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint;\n            }\n          }\n\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD;\n      bytesPerSequence = 1;\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000;\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800);\n      codePoint = 0xDC00 | codePoint & 0x3FF;\n    }\n\n    res.push(codePoint);\n    i += bytesPerSequence;\n  }\n\n  return decodeCodePointsArray(res);\n} // Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\n\n\nvar MAX_ARGUMENTS_LENGTH = 0x1000;\n\nfunction decodeCodePointsArray(codePoints) {\n  var len = codePoints.length;\n\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints); // avoid extra slice()\n  } // Decode in chunks to avoid \"call stack size exceeded\".\n\n\n  var res = '';\n  var i = 0;\n\n  while (i < len) {\n    res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));\n  }\n\n  return res;\n}\n\nfunction asciiSlice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F);\n  }\n\n  return ret;\n}\n\nfunction latin1Slice(buf, start, end) {\n  var ret = '';\n  end = Math.min(buf.length, end);\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i]);\n  }\n\n  return ret;\n}\n\nfunction hexSlice(buf, start, end) {\n  var len = buf.length;\n  if (!start || start < 0) start = 0;\n  if (!end || end < 0 || end > len) end = len;\n  var out = '';\n\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i]);\n  }\n\n  return out;\n}\n\nfunction utf16leSlice(buf, start, end) {\n  var bytes = buf.slice(start, end);\n  var res = '';\n\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);\n  }\n\n  return res;\n}\n\nBuffer.prototype.slice = function slice(start, end) {\n  var len = this.length;\n  start = ~~start;\n  end = end === undefined ? len : ~~end;\n\n  if (start < 0) {\n    start += len;\n    if (start < 0) start = 0;\n  } else if (start > len) {\n    start = len;\n  }\n\n  if (end < 0) {\n    end += len;\n    if (end < 0) end = 0;\n  } else if (end > len) {\n    end = len;\n  }\n\n  if (end < start) end = start;\n  var newBuf;\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end);\n    newBuf.__proto__ = Buffer.prototype;\n  } else {\n    var sliceLen = end - start;\n    newBuf = new Buffer(sliceLen, undefined);\n\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start];\n    }\n  }\n\n  return newBuf;\n};\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\n\n\nfunction checkOffset(offset, ext, length) {\n  if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length);\n  }\n\n  var val = this[offset + --byteLength];\n  var mul = 1;\n\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul;\n  }\n\n  return val;\n};\n\nBuffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  return this[offset];\n};\n\nBuffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] | this[offset + 1] << 8;\n};\n\nBuffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  return this[offset] << 8 | this[offset + 1];\n};\n\nBuffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;\n};\n\nBuffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);\n};\n\nBuffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var val = this[offset];\n  var mul = 1;\n  var i = 0;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul;\n  }\n\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\n\nBuffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n  if (!noAssert) checkOffset(offset, byteLength, this.length);\n  var i = byteLength;\n  var mul = 1;\n  var val = this[offset + --i];\n\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul;\n  }\n\n  mul *= 0x80;\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength);\n  return val;\n};\n\nBuffer.prototype.readInt8 = function readInt8(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length);\n  if (!(this[offset] & 0x80)) return this[offset];\n  return (0xff - this[offset] + 1) * -1;\n};\n\nBuffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset] | this[offset + 1] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length);\n  var val = this[offset + 1] | this[offset] << 8;\n  return val & 0x8000 ? val | 0xFFFF0000 : val;\n};\n\nBuffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;\n};\n\nBuffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];\n};\n\nBuffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, true, 23, 4);\n};\n\nBuffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length);\n  return ieee754.read(this, offset, false, 23, 4);\n};\n\nBuffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, true, 52, 8);\n};\n\nBuffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length);\n  return ieee754.read(this, offset, false, 52, 8);\n};\n\nfunction checkInt(buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance');\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds');\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var mul = 1;\n  var i = 0;\n  this[offset] = value & 0xFF;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  byteLength = byteLength | 0;\n\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1;\n    checkInt(this, value, offset, byteLength, maxBytes, 0);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  this[offset + i] = value & 0xFF;\n\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = value / mul & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nfunction objectWriteUInt16(buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1;\n\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & 0xff << 8 * (littleEndian ? i : 1 - i)) >>> (littleEndian ? i : 1 - i) * 8;\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n\n  return offset + 2;\n};\n\nfunction objectWriteUInt32(buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1;\n\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = value >>> (littleEndian ? i : 3 - i) * 8 & 0xff;\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = value >>> 24;\n    this[offset + 2] = value >>> 16;\n    this[offset + 1] = value >>> 8;\n    this[offset] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = 0;\n  var mul = 1;\n  var sub = 0;\n  this[offset] = value & 0xFF;\n\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1;\n    }\n\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {\n  value = +value;\n  offset = offset | 0;\n\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1);\n    checkInt(this, value, offset, byteLength, limit - 1, -limit);\n  }\n\n  var i = byteLength - 1;\n  var mul = 1;\n  var sub = 0;\n  this[offset + i] = value & 0xFF;\n\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1;\n    }\n\n    this[offset + i] = (value / mul >> 0) - sub & 0xFF;\n  }\n\n  return offset + byteLength;\n};\n\nBuffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value);\n  if (value < 0) value = 0xff + value + 1;\n  this[offset] = value & 0xff;\n  return offset + 1;\n};\n\nBuffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n  } else {\n    objectWriteUInt16(this, value, offset, true);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 8;\n    this[offset + 1] = value & 0xff;\n  } else {\n    objectWriteUInt16(this, value, offset, false);\n  }\n\n  return offset + 2;\n};\n\nBuffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value & 0xff;\n    this[offset + 1] = value >>> 8;\n    this[offset + 2] = value >>> 16;\n    this[offset + 3] = value >>> 24;\n  } else {\n    objectWriteUInt32(this, value, offset, true);\n  }\n\n  return offset + 4;\n};\n\nBuffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {\n  value = +value;\n  offset = offset | 0;\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);\n  if (value < 0) value = 0xffffffff + value + 1;\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = value >>> 24;\n    this[offset + 1] = value >>> 16;\n    this[offset + 2] = value >>> 8;\n    this[offset + 3] = value & 0xff;\n  } else {\n    objectWriteUInt32(this, value, offset, false);\n  }\n\n  return offset + 4;\n};\n\nfunction checkIEEE754(buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range');\n  if (offset < 0) throw new RangeError('Index out of range');\n}\n\nfunction writeFloat(buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);\n  }\n\n  ieee754.write(buf, value, offset, littleEndian, 23, 4);\n  return offset + 4;\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert);\n};\n\nfunction writeDouble(buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);\n  }\n\n  ieee754.write(buf, value, offset, littleEndian, 52, 8);\n  return offset + 8;\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert);\n};\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert);\n}; // copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\n\nBuffer.prototype.copy = function copy(target, targetStart, start, end) {\n  if (!start) start = 0;\n  if (!end && end !== 0) end = this.length;\n  if (targetStart >= target.length) targetStart = target.length;\n  if (!targetStart) targetStart = 0;\n  if (end > 0 && end < start) end = start; // Copy 0 bytes; we're done\n\n  if (end === start) return 0;\n  if (target.length === 0 || this.length === 0) return 0; // Fatal error conditions\n\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds');\n  }\n\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds');\n  if (end < 0) throw new RangeError('sourceEnd out of bounds'); // Are we oob?\n\n  if (end > this.length) end = this.length;\n\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start;\n  }\n\n  var len = end - start;\n  var i;\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start];\n    }\n  } else {\n    Uint8Array.prototype.set.call(target, this.subarray(start, start + len), targetStart);\n  }\n\n  return len;\n}; // Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\n\n\nBuffer.prototype.fill = function fill(val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start;\n      start = 0;\n      end = this.length;\n    } else if (typeof end === 'string') {\n      encoding = end;\n      end = this.length;\n    }\n\n    if (val.length === 1) {\n      var code = val.charCodeAt(0);\n\n      if (code < 256) {\n        val = code;\n      }\n    }\n\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string');\n    }\n\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding);\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255;\n  } // Invalid ranges are not set to a default, so can range check early.\n\n\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index');\n  }\n\n  if (end <= start) {\n    return this;\n  }\n\n  start = start >>> 0;\n  end = end === undefined ? this.length : end >>> 0;\n  if (!val) val = 0;\n  var i;\n\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val;\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val) ? val : utf8ToBytes(new Buffer(val, encoding).toString());\n    var len = bytes.length;\n\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len];\n    }\n  }\n\n  return this;\n}; // HELPER FUNCTIONS\n// ================\n\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g;\n\nfunction base64clean(str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, ''); // Node converts strings with length < 2 to ''\n\n  if (str.length < 2) return ''; // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\n  while (str.length % 4 !== 0) {\n    str = str + '=';\n  }\n\n  return str;\n}\n\nfunction stringtrim(str) {\n  if (str.trim) return str.trim();\n  return str.replace(/^\\s+|\\s+$/g, '');\n}\n\nfunction toHex(n) {\n  if (n < 16) return '0' + n.toString(16);\n  return n.toString(16);\n}\n\nfunction utf8ToBytes(string, units) {\n  units = units || Infinity;\n  var codePoint;\n  var length = string.length;\n  var leadSurrogate = null;\n  var bytes = [];\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i); // is surrogate component\n\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n          continue;\n        } // valid lead\n\n\n        leadSurrogate = codePoint;\n        continue;\n      } // 2 leads in a row\n\n\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n        leadSurrogate = codePoint;\n        continue;\n      } // valid surrogate pair\n\n\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);\n    }\n\n    leadSurrogate = null; // encode utf8\n\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break;\n      bytes.push(codePoint);\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break;\n      bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break;\n      bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break;\n      bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);\n    } else {\n      throw new Error('Invalid code point');\n    }\n  }\n\n  return bytes;\n}\n\nfunction asciiToBytes(str) {\n  var byteArray = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF);\n  }\n\n  return byteArray;\n}\n\nfunction utf16leToBytes(str, units) {\n  var c, hi, lo;\n  var byteArray = [];\n\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break;\n    c = str.charCodeAt(i);\n    hi = c >> 8;\n    lo = c % 256;\n    byteArray.push(lo);\n    byteArray.push(hi);\n  }\n\n  return byteArray;\n}\n\nfunction base64ToBytes(str) {\n  return base64.toByteArray(base64clean(str));\n}\n\nfunction blitBuffer(src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if (i + offset >= dst.length || i >= src.length) break;\n    dst[i + offset] = src[i];\n  }\n\n  return i;\n}\n\nfunction isnan(val) {\n  return val !== val; // eslint-disable-line no-self-compare\n}","'use strict';\n\nexports.byteLength = byteLength;\nexports.toByteArray = toByteArray;\nexports.fromByteArray = fromByteArray;\nvar lookup = [];\nvar revLookup = [];\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i];\n  revLookup[code.charCodeAt(i)] = i;\n} // Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\n\n\nrevLookup['-'.charCodeAt(0)] = 62;\nrevLookup['_'.charCodeAt(0)] = 63;\n\nfunction getLens(b64) {\n  var len = b64.length;\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4');\n  } // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n\n\n  var validLen = b64.indexOf('=');\n  if (validLen === -1) validLen = len;\n  var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;\n  return [validLen, placeHoldersLen];\n} // base64 is 4/3 + up to two characters of the original data\n\n\nfunction byteLength(b64) {\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction _byteLength(b64, validLen, placeHoldersLen) {\n  return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;\n}\n\nfunction toByteArray(b64) {\n  var tmp;\n  var lens = getLens(b64);\n  var validLen = lens[0];\n  var placeHoldersLen = lens[1];\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));\n  var curByte = 0; // if there are placeholders, only get up to the last complete 4 chars\n\n  var len = placeHoldersLen > 0 ? validLen - 4 : validLen;\n\n  for (var i = 0; i < len; i += 4) {\n    tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];\n    arr[curByte++] = tmp >> 16 & 0xFF;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;\n    arr[curByte++] = tmp >> 8 & 0xFF;\n    arr[curByte++] = tmp & 0xFF;\n  }\n\n  return arr;\n}\n\nfunction tripletToBase64(num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];\n}\n\nfunction encodeChunk(uint8, start, end) {\n  var tmp;\n  var output = [];\n\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);\n    output.push(tripletToBase64(tmp));\n  }\n\n  return output.join('');\n}\n\nfunction fromByteArray(uint8) {\n  var tmp;\n  var len = uint8.length;\n  var extraBytes = len % 3; // if we have 1 byte left, pad 2 bytes\n\n  var parts = [];\n  var maxChunkLength = 16383; // must be multiple of 3\n  // go through the array every three bytes, we'll deal with trailing stuff later\n\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));\n  } // pad the end with zeros, but make sure to not forget the extra bytes\n\n\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1];\n    parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1];\n    parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');\n  }\n\n  return parts.join('');\n}","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var nBits = -7;\n  var i = isLE ? nBytes - 1 : 0;\n  var d = isLE ? -1 : 1;\n  var s = buffer[offset + i];\n  i += d;\n  e = s & (1 << -nBits) - 1;\n  s >>= -nBits;\n  nBits += eLen;\n\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & (1 << -nBits) - 1;\n  e >>= -nBits;\n  nBits += mLen;\n\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias;\n  } else if (e === eMax) {\n    return m ? NaN : (s ? -1 : 1) * Infinity;\n  } else {\n    m = m + Math.pow(2, mLen);\n    e = e - eBias;\n  }\n\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen);\n};\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c;\n  var eLen = nBytes * 8 - mLen - 1;\n  var eMax = (1 << eLen) - 1;\n  var eBias = eMax >> 1;\n  var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;\n  var i = isLE ? 0 : nBytes - 1;\n  var d = isLE ? 1 : -1;\n  var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;\n  value = Math.abs(value);\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0;\n    e = eMax;\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2);\n\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--;\n      c *= 2;\n    }\n\n    if (e + eBias >= 1) {\n      value += rt / c;\n    } else {\n      value += rt * Math.pow(2, 1 - eBias);\n    }\n\n    if (value * c >= 2) {\n      e++;\n      c /= 2;\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0;\n      e = eMax;\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen);\n      e = e + eBias;\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);\n      e = 0;\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = e << mLen | m;\n  eLen += mLen;\n\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128;\n};","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};","// shim for using process in browser\nvar process = module.exports = {}; // cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n  throw new Error('setTimeout has not been defined');\n}\n\nfunction defaultClearTimeout() {\n  throw new Error('clearTimeout has not been defined');\n}\n\n(function () {\n  try {\n    if (typeof setTimeout === 'function') {\n      cachedSetTimeout = setTimeout;\n    } else {\n      cachedSetTimeout = defaultSetTimout;\n    }\n  } catch (e) {\n    cachedSetTimeout = defaultSetTimout;\n  }\n\n  try {\n    if (typeof clearTimeout === 'function') {\n      cachedClearTimeout = clearTimeout;\n    } else {\n      cachedClearTimeout = defaultClearTimeout;\n    }\n  } catch (e) {\n    cachedClearTimeout = defaultClearTimeout;\n  }\n})();\n\nfunction runTimeout(fun) {\n  if (cachedSetTimeout === setTimeout) {\n    //normal enviroments in sane situations\n    return setTimeout(fun, 0);\n  } // if setTimeout wasn't available but was latter defined\n\n\n  if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n    cachedSetTimeout = setTimeout;\n    return setTimeout(fun, 0);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedSetTimeout(fun, 0);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n      return cachedSetTimeout.call(null, fun, 0);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n      return cachedSetTimeout.call(this, fun, 0);\n    }\n  }\n}\n\nfunction runClearTimeout(marker) {\n  if (cachedClearTimeout === clearTimeout) {\n    //normal enviroments in sane situations\n    return clearTimeout(marker);\n  } // if clearTimeout wasn't available but was latter defined\n\n\n  if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n    cachedClearTimeout = clearTimeout;\n    return clearTimeout(marker);\n  }\n\n  try {\n    // when when somebody has screwed with setTimeout but no I.E. maddness\n    return cachedClearTimeout(marker);\n  } catch (e) {\n    try {\n      // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n      return cachedClearTimeout.call(null, marker);\n    } catch (e) {\n      // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n      // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n      return cachedClearTimeout.call(this, marker);\n    }\n  }\n}\n\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n  if (!draining || !currentQueue) {\n    return;\n  }\n\n  draining = false;\n\n  if (currentQueue.length) {\n    queue = currentQueue.concat(queue);\n  } else {\n    queueIndex = -1;\n  }\n\n  if (queue.length) {\n    drainQueue();\n  }\n}\n\nfunction drainQueue() {\n  if (draining) {\n    return;\n  }\n\n  var timeout = runTimeout(cleanUpNextTick);\n  draining = true;\n  var len = queue.length;\n\n  while (len) {\n    currentQueue = queue;\n    queue = [];\n\n    while (++queueIndex < len) {\n      if (currentQueue) {\n        currentQueue[queueIndex].run();\n      }\n    }\n\n    queueIndex = -1;\n    len = queue.length;\n  }\n\n  currentQueue = null;\n  draining = false;\n  runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n  var args = new Array(arguments.length - 1);\n\n  if (arguments.length > 1) {\n    for (var i = 1; i < arguments.length; i++) {\n      args[i - 1] = arguments[i];\n    }\n  }\n\n  queue.push(new Item(fun, args));\n\n  if (queue.length === 1 && !draining) {\n    runTimeout(drainQueue);\n  }\n}; // v8 likes predictible objects\n\n\nfunction Item(fun, array) {\n  this.fun = fun;\n  this.array = array;\n}\n\nItem.prototype.run = function () {\n  this.fun.apply(null, this.array);\n};\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\n\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) {\n  return [];\n};\n\nprocess.binding = function (name) {\n  throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () {\n  return '/';\n};\n\nprocess.chdir = function (dir) {\n  throw new Error('process.chdir is not supported');\n};\n\nprocess.umask = function () {\n  return 0;\n};","module.exports = function isBuffer(arg) {\n  return arg && typeof arg === 'object' && typeof arg.copy === 'function' && typeof arg.fill === 'function' && typeof arg.readUInt8 === 'function';\n};","if (typeof Object.create === 'function') {\n  // implementation from standard node.js 'util' module\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n    ctor.prototype = Object.create(superCtor.prototype, {\n      constructor: {\n        value: ctor,\n        enumerable: false,\n        writable: true,\n        configurable: true\n      }\n    });\n  };\n} else {\n  // old school shim for old browsers\n  module.exports = function inherits(ctor, superCtor) {\n    ctor.super_ = superCtor;\n\n    var TempCtor = function TempCtor() {};\n\n    TempCtor.prototype = superCtor.prototype;\n    ctor.prototype = new TempCtor();\n    ctor.prototype.constructor = ctor;\n  };\n}","// Includes only the \"core\" of graphlib\nmodule.exports = {\n  Graph: require(\"./graph\"),\n  version: require(\"./version\")\n};","var baseClone = require('./_baseClone');\n/** Used to compose bitmasks for cloning. */\n\n\nvar CLONE_SYMBOLS_FLAG = 4;\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\n\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = clone;","/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;","var assocIndexOf = require('./_assocIndexOf');\n/** Used for built-in method references. */\n\n\nvar arrayProto = Array.prototype;\n/** Built-in value references. */\n\nvar splice = arrayProto.splice;\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n\n  var lastIndex = data.length - 1;\n\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;","var assocIndexOf = require('./_assocIndexOf');\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\n\n\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n\n  return this;\n}\n\nmodule.exports = listCacheSet;","var ListCache = require('./_ListCache');\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\n\n\nfunction stackClear() {\n  this.__data__ = new ListCache();\n  this.size = 0;\n}\n\nmodule.exports = stackClear;","/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;","/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;","/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;","var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n/** Used as the size to enable large array optimizations. */\n\n\nvar LARGE_ARRAY_SIZE = 200;\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\n\nfunction stackSet(key, value) {\n  var data = this.__data__;\n\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n\n    if (!Map || pairs.length < LARGE_ARRAY_SIZE - 1) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n\n    data = this.__data__ = new MapCache(pairs);\n  }\n\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;","var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\n\n\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n/** Used to detect host constructors (Safari). */\n\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n/** Used for built-in method references. */\n\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Used to detect if a method is native. */\n\nvar reIsNative = RegExp('^' + funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&').replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$');\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\n\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;","var Symbol = require('./_Symbol');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/** Built-in value references. */\n\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\n\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = getRawTag;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\n\nvar nativeObjectToString = objectProto.toString;\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\n\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;","var coreJsData = require('./_coreJsData');\n/** Used to detect methods masquerading as native. */\n\n\nvar maskSrcKey = function () {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? 'Symbol(src)_1.' + uid : '';\n}();\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\n\n\nfunction isMasked(func) {\n  return !!maskSrcKey && maskSrcKey in func;\n}\n\nmodule.exports = isMasked;","var root = require('./_root');\n/** Used to detect overreaching core-js shims. */\n\n\nvar coreJsData = root['__core-js_shared__'];\nmodule.exports = coreJsData;","/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;","var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\n\n\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash(),\n    'map': new (Map || ListCache)(),\n    'string': new Hash()\n  };\n}\n\nmodule.exports = mapCacheClear;","var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\n\n\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n  this.clear();\n\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n} // Add methods to `Hash`.\n\n\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\nmodule.exports = Hash;","var nativeCreate = require('./_nativeCreate');\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\n\n\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;","/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\nfunction hashGet(key) {\n  var data = this.__data__;\n\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;","var nativeCreate = require('./_nativeCreate');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? data[key] !== undefined : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;","var nativeCreate = require('./_nativeCreate');\n/** Used to stand-in for `undefined` hash values. */\n\n\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\n\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = nativeCreate && value === undefined ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;","var getMapData = require('./_getMapData');\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\n\n\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;","/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean' ? value !== '__proto__' : value === null;\n}\n\nmodule.exports = isKeyable;","var getMapData = require('./_getMapData');\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\n\n\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;","var getMapData = require('./_getMapData');\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\n\n\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;","var getMapData = require('./_getMapData');\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\n\n\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;","var copyObject = require('./_copyObject'),\n    keys = require('./keys');\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nmodule.exports = baseAssign;","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n\n  return result;\n}\n\nmodule.exports = baseTimes;","var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]';\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\n\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;","var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/** Used to identify `toStringTag` values of typed arrays. */\n\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\n\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;","var overArg = require('./_overArg');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeKeys = overArg(Object.keys, Object);\nmodule.exports = nativeKeys;","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nmodule.exports = baseAssignIn;","var isObject = require('./isObject'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeysIn = require('./_nativeKeysIn');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\n\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseKeysIn;","/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = nativeKeysIn;","var copyObject = require('./_copyObject'),\n    getSymbols = require('./_getSymbols');\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nmodule.exports = copySymbols;","var copyObject = require('./_copyObject'),\n    getSymbolsIn = require('./_getSymbolsIn');\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nmodule.exports = copySymbolsIn;","var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbolsIn = require('./_getSymbolsIn'),\n    keysIn = require('./keysIn');\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\n\n\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nmodule.exports = getAllKeysIn;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar DataView = getNative(root, 'DataView');\nmodule.exports = DataView;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar Promise = getNative(root, 'Promise');\nmodule.exports = Promise;","var getNative = require('./_getNative'),\n    root = require('./_root');\n/* Built-in method references that are verified to be native. */\n\n\nvar WeakMap = getNative(root, 'WeakMap');\nmodule.exports = WeakMap;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\n\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length); // Add properties assigned by `RegExp#exec`.\n\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n\n  return result;\n}\n\nmodule.exports = initCloneArray;","var cloneArrayBuffer = require('./_cloneArrayBuffer'),\n    cloneDataView = require('./_cloneDataView'),\n    cloneRegExp = require('./_cloneRegExp'),\n    cloneSymbol = require('./_cloneSymbol'),\n    cloneTypedArray = require('./_cloneTypedArray');\n/** `Object#toString` result references. */\n\n\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\n\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag:\n    case float64Tag:\n    case int8Tag:\n    case int16Tag:\n    case int32Tag:\n    case uint8Tag:\n    case uint8ClampedTag:\n    case uint16Tag:\n    case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor();\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor();\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nmodule.exports = initCloneByTag;","var cloneArrayBuffer = require('./_cloneArrayBuffer');\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\n\n\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nmodule.exports = cloneDataView;","/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\n\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nmodule.exports = cloneRegExp;","var Symbol = require('./_Symbol');\n/** Used to convert symbols to primitives and strings. */\n\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\n\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nmodule.exports = cloneSymbol;","var baseIsMap = require('./_baseIsMap'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n/* Node.js helper references. */\n\n\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\n\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\nmodule.exports = isMap;","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar mapTag = '[object Map]';\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\n\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nmodule.exports = baseIsMap;","var baseIsSet = require('./_baseIsSet'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n/* Node.js helper references. */\n\n\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\n\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\nmodule.exports = isSet;","var getTag = require('./_getTag'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar setTag = '[object Set]';\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\n\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nmodule.exports = baseIsSet;","/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function (object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n\n    return object;\n  };\n}\n\nmodule.exports = createBaseFor;","var isArrayLike = require('./isArrayLike');\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\n\n\nfunction createBaseEach(eachFunc, fromRight) {\n  return function (collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while (fromRight ? index-- : ++index < length) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;","var baseEach = require('./_baseEach');\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\n\n\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function (value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nmodule.exports = baseFilter;","var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\n\n\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n\n  return function (object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;","var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\n\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n\n  object = Object(object);\n\n  while (index--) {\n    var data = matchData[index];\n\n    if (noCustomizer && data[2] ? data[1] !== object[data[0]] : !(data[0] in object)) {\n      return false;\n    }\n  }\n\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack();\n\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n\n      if (!(result === undefined ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack) : result)) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = baseIsMatch;","var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** `Object#toString` result references. */\n\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n\n    objIsArr = true;\n    objIsObj = false;\n  }\n\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack());\n    return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n      stack || (stack = new Stack());\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n\n  if (!isSameTag) {\n    return false;\n  }\n\n  stack || (stack = new Stack());\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;","/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\n\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n\n  return this;\n}\n\nmodule.exports = setCacheAdd;","/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;","/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = arraySome;","var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/** `Object#toString` result references. */\n\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {\n        return false;\n      }\n\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == other + '';\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      } // Assume cyclic values are equal.\n\n\n      var stacked = stack.get(object);\n\n      if (stacked) {\n        return stacked == other;\n      }\n\n      bitmask |= COMPARE_UNORDERED_FLAG; // Recursively compare objects (susceptible to call stack limits).\n\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n\n  }\n\n  return false;\n}\n\nmodule.exports = equalByTag;","/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n  map.forEach(function (value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;","var getAllKeys = require('./_getAllKeys');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1;\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\n\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n\n  var index = objLength;\n\n  while (index--) {\n    var key = objProps[index];\n\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  } // Assume cyclic values are equal.\n\n\n  var stacked = stack.get(object);\n\n  if (stacked && stack.get(other)) {\n    return stacked == other;\n  }\n\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n  var skipCtor = isPartial;\n\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);\n    } // Recursively compare objects (susceptible to call stack limits).\n\n\n    if (!(compared === undefined ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {\n      result = false;\n      break;\n    }\n\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor; // Non `Object` object instances with different constructors are not equal.\n\n    if (objCtor != othCtor && 'constructor' in object && 'constructor' in other && !(typeof objCtor == 'function' && objCtor instanceof objCtor && typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;","var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\n\n\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n\n  return result;\n}\n\nmodule.exports = getMatchData;","var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n/** Used to compose bitmasks for value comparisons. */\n\n\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\n\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n\n  return function (object) {\n    var objValue = get(object, path);\n    return objValue === undefined && objValue === srcValue ? hasIn(object, path) : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;","var baseGet = require('./_baseGet');\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\n\n\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;","var memoizeCapped = require('./_memoizeCapped');\n/** Used to match property names within property paths. */\n\n\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n/** Used to match backslashes in property paths. */\n\nvar reEscapeChar = /\\\\(\\\\)?/g;\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\n\nvar stringToPath = memoizeCapped(function (string) {\n  var result = [];\n\n  if (string.charCodeAt(0) === 46\n  /* . */\n  ) {\n      result.push('');\n    }\n\n  string.replace(rePropName, function (match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : number || match);\n  });\n  return result;\n});\nmodule.exports = stringToPath;","var memoize = require('./memoize');\n/** Used as the maximum memoize cache size. */\n\n\nvar MAX_MEMOIZE_SIZE = 500;\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\n\nfunction memoizeCapped(func) {\n  var result = memoize(func, function (key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n\n    return key;\n  });\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;","var MapCache = require('./_MapCache');\n/** Error message constants. */\n\n\nvar FUNC_ERROR_TEXT = 'Expected a function';\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\n\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || resolver != null && typeof resolver != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n\n  var memoized = function memoized() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n\n  memoized.cache = new (memoize.Cache || MapCache)();\n  return memoized;\n} // Expose `MapCache`.\n\n\nmemoize.Cache = MapCache;\nmodule.exports = memoize;","var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/** Used to convert symbols to primitives and strings. */\n\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\n\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n\n  var result = value + '';\n  return result == '0' && 1 / value == -INFINITY ? '-0' : result;\n}\n\nmodule.exports = baseToString;","/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;","var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\n\n\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;","var baseGet = require('./_baseGet');\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\n\n\nfunction basePropertyDeep(path) {\n  return function (object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * The base implementation of `_.has` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\n\nfunction baseHas(object, key) {\n  return object != null && hasOwnProperty.call(object, key);\n}\n\nmodule.exports = baseHas;","var baseKeys = require('./_baseKeys'),\n    getTag = require('./_getTag'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLike = require('./isArrayLike'),\n    isBuffer = require('./isBuffer'),\n    isPrototype = require('./_isPrototype'),\n    isTypedArray = require('./isTypedArray');\n/** `Object#toString` result references. */\n\n\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n/** Used for built-in method references. */\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\n\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n\n  if (isArrayLike(value) && (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' || isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n\n  var tag = getTag(value);\n\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = isEmpty;","/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n\n  return accumulator;\n}\n\nmodule.exports = arrayReduce;","/**\n * The base implementation of `_.reduce` and `_.reduceRight`, without support\n * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} accumulator The initial value.\n * @param {boolean} initAccum Specify using the first or last element of\n *  `collection` as the initial value.\n * @param {Function} eachFunc The function to iterate over `collection`.\n * @returns {*} Returns the accumulated value.\n */\nfunction baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n  eachFunc(collection, function (value, index, collection) {\n    accumulator = initAccum ? (initAccum = false, value) : iteratee(accumulator, value, index, collection);\n  });\n  return accumulator;\n}\n\nmodule.exports = baseReduce;","var baseKeys = require('./_baseKeys'),\n    getTag = require('./_getTag'),\n    isArrayLike = require('./isArrayLike'),\n    isString = require('./isString'),\n    stringSize = require('./_stringSize');\n/** `Object#toString` result references. */\n\n\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n/**\n * Gets the size of `collection` by returning its length for array-like\n * values or the number of own enumerable string keyed properties for objects.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @returns {number} Returns the collection size.\n * @example\n *\n * _.size([1, 2, 3]);\n * // => 3\n *\n * _.size({ 'a': 1, 'b': 2 });\n * // => 2\n *\n * _.size('pebbles');\n * // => 7\n */\n\nfunction size(collection) {\n  if (collection == null) {\n    return 0;\n  }\n\n  if (isArrayLike(collection)) {\n    return isString(collection) ? stringSize(collection) : collection.length;\n  }\n\n  var tag = getTag(collection);\n\n  if (tag == mapTag || tag == setTag) {\n    return collection.size;\n  }\n\n  return baseKeys(collection).length;\n}\n\nmodule.exports = size;","var baseGetTag = require('./_baseGetTag'),\n    isArray = require('./isArray'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar stringTag = '[object String]';\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\n\nfunction isString(value) {\n  return typeof value == 'string' || !isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag;\n}\n\nmodule.exports = isString;","var asciiSize = require('./_asciiSize'),\n    hasUnicode = require('./_hasUnicode'),\n    unicodeSize = require('./_unicodeSize');\n/**\n * Gets the number of symbols in `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the string size.\n */\n\n\nfunction stringSize(string) {\n  return hasUnicode(string) ? unicodeSize(string) : asciiSize(string);\n}\n\nmodule.exports = stringSize;","var baseProperty = require('./_baseProperty');\n/**\n * Gets the size of an ASCII `string`.\n *\n * @private\n * @param {string} string The string inspect.\n * @returns {number} Returns the string size.\n */\n\n\nvar asciiSize = baseProperty('length');\nmodule.exports = asciiSize;","/** Used to compose unicode character classes. */\nvar rsAstralRange = \"\\\\ud800-\\\\udfff\",\n    rsComboMarksRange = \"\\\\u0300-\\\\u036f\",\n    reComboHalfMarksRange = \"\\\\ufe20-\\\\ufe2f\",\n    rsComboSymbolsRange = \"\\\\u20d0-\\\\u20ff\",\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = \"\\\\ufe0e\\\\ufe0f\";\n/** Used to compose unicode capture groups. */\n\nvar rsZWJ = \"\\\\u200d\";\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\n\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange + rsComboRange + rsVarRange + ']');\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\n\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nmodule.exports = hasUnicode;","/** Used to compose unicode character classes. */\nvar rsAstralRange = \"\\\\ud800-\\\\udfff\",\n    rsComboMarksRange = \"\\\\u0300-\\\\u036f\",\n    reComboHalfMarksRange = \"\\\\ufe20-\\\\ufe2f\",\n    rsComboSymbolsRange = \"\\\\u20d0-\\\\u20ff\",\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = \"\\\\ufe0e\\\\ufe0f\";\n/** Used to compose unicode capture groups. */\n\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = \"\\\\ud83c[\\\\udffb-\\\\udfff]\",\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = \"(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}\",\n    rsSurrPair = \"[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]\",\n    rsZWJ = \"\\\\u200d\";\n/** Used to compose unicode regexes. */\n\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\n\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n/**\n * Gets the size of a Unicode `string`.\n *\n * @private\n * @param {string} string The string inspect.\n * @returns {number} Returns the string size.\n */\n\nfunction unicodeSize(string) {\n  var result = reUnicode.lastIndex = 0;\n\n  while (reUnicode.test(string)) {\n    ++result;\n  }\n\n  return result;\n}\n\nmodule.exports = unicodeSize;","var arrayEach = require('./_arrayEach'),\n    baseCreate = require('./_baseCreate'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee'),\n    getPrototype = require('./_getPrototype'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isFunction = require('./isFunction'),\n    isObject = require('./isObject'),\n    isTypedArray = require('./isTypedArray');\n/**\n * An alternative to `_.reduce`; this method transforms `object` to a new\n * `accumulator` object which is the result of running each of its own\n * enumerable string keyed properties thru `iteratee`, with each invocation\n * potentially mutating the `accumulator` object. If `accumulator` is not\n * provided, a new object with the same `[[Prototype]]` will be used. The\n * iteratee is invoked with four arguments: (accumulator, value, key, object).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 1.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The custom accumulator value.\n * @returns {*} Returns the accumulated value.\n * @example\n *\n * _.transform([2, 3, 4], function(result, n) {\n *   result.push(n *= n);\n *   return n % 2 == 0;\n * }, []);\n * // => [4, 9]\n *\n * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n *   (result[value] || (result[value] = [])).push(key);\n * }, {});\n * // => { '1': ['a', 'c'], '2': ['b'] }\n */\n\n\nfunction transform(object, iteratee, accumulator) {\n  var isArr = isArray(object),\n      isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n  iteratee = baseIteratee(iteratee, 4);\n\n  if (accumulator == null) {\n    var Ctor = object && object.constructor;\n\n    if (isArrLike) {\n      accumulator = isArr ? new Ctor() : [];\n    } else if (isObject(object)) {\n      accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n    } else {\n      accumulator = {};\n    }\n  }\n\n  (isArrLike ? arrayEach : baseForOwn)(object, function (value, index, object) {\n    return iteratee(accumulator, value, index, object);\n  });\n  return accumulator;\n}\n\nmodule.exports = transform;","var baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    baseUniq = require('./_baseUniq'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n/**\n * Creates an array of unique values, in order, from all given arrays using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * _.union([2], [1, 2]);\n * // => [2, 1]\n */\n\n\nvar union = baseRest(function (arrays) {\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n});\nmodule.exports = union;","var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n/** Built-in value references. */\n\n\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\n\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) || !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;","/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0:\n      return func.call(thisArg);\n\n    case 1:\n      return func.call(thisArg, args[0]);\n\n    case 2:\n      return func.call(thisArg, args[0], args[1]);\n\n    case 3:\n      return func.call(thisArg, args[0], args[1], args[2]);\n  }\n\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;","var constant = require('./constant'),\n    defineProperty = require('./_defineProperty'),\n    identity = require('./identity');\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\n\n\nvar baseSetToString = !defineProperty ? identity : function (func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\nmodule.exports = baseSetToString;","/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeNow = Date.now;\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\n\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n  return function () {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n    lastCalled = stamp;\n\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;","var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n/** Used as the size to enable large array optimizations. */\n\n\nvar LARGE_ARRAY_SIZE = 200;\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\n\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  } else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n\n    if (set) {\n      return setToArray(set);\n    }\n\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache();\n  } else {\n    seen = iteratee ? [] : result;\n  }\n\n  outer: while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n    value = comparator || value !== 0 ? value : 0;\n\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n\n      if (iteratee) {\n        seen.push(computed);\n      }\n\n      result.push(value);\n    } else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n\n      result.push(value);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = baseUniq;","var baseIndexOf = require('./_baseIndexOf');\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\n\n\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;","var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\n\n\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value ? strictIndexOf(array, value, fromIndex) : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;","/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;","/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n\n  return -1;\n}\n\nmodule.exports = strictIndexOf;","/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;","var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n/** Used as references for various `Number` constants. */\n\n\nvar INFINITY = 1 / 0;\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\n\nvar createSet = !(Set && 1 / setToArray(new Set([, -0]))[1] == INFINITY) ? noop : function (values) {\n  return new Set(values);\n};\nmodule.exports = createSet;","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {// No operation performed.\n}\n\nmodule.exports = noop;","var arrayMap = require('./_arrayMap');\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\n\n\nfunction baseValues(object, props) {\n  return arrayMap(props, function (key) {\n    return object[key];\n  });\n}\n\nmodule.exports = baseValues;","module.exports = '2.1.7';","var _ = require(\"./lodash\"),\n    Graph = require(\"./graph\");\n\nmodule.exports = {\n  write: write,\n  read: read\n};\n\nfunction write(g) {\n  var json = {\n    options: {\n      directed: g.isDirected(),\n      multigraph: g.isMultigraph(),\n      compound: g.isCompound()\n    },\n    nodes: writeNodes(g),\n    edges: writeEdges(g)\n  };\n\n  if (!_.isUndefined(g.graph())) {\n    json.value = _.clone(g.graph());\n  }\n\n  return json;\n}\n\nfunction writeNodes(g) {\n  return _.map(g.nodes(), function (v) {\n    var nodeValue = g.node(v),\n        parent = g.parent(v),\n        node = {\n      v: v\n    };\n\n    if (!_.isUndefined(nodeValue)) {\n      node.value = nodeValue;\n    }\n\n    if (!_.isUndefined(parent)) {\n      node.parent = parent;\n    }\n\n    return node;\n  });\n}\n\nfunction writeEdges(g) {\n  return _.map(g.edges(), function (e) {\n    var edgeValue = g.edge(e),\n        edge = {\n      v: e.v,\n      w: e.w\n    };\n\n    if (!_.isUndefined(e.name)) {\n      edge.name = e.name;\n    }\n\n    if (!_.isUndefined(edgeValue)) {\n      edge.value = edgeValue;\n    }\n\n    return edge;\n  });\n}\n\nfunction read(json) {\n  var g = new Graph(json.options).setGraph(json.value);\n\n  _.each(json.nodes, function (entry) {\n    g.setNode(entry.v, entry.value);\n\n    if (entry.parent) {\n      g.setParent(entry.v, entry.parent);\n    }\n  });\n\n  _.each(json.edges, function (entry) {\n    g.setEdge({\n      v: entry.v,\n      w: entry.w,\n      name: entry.name\n    }, entry.value);\n  });\n\n  return g;\n}","module.exports = {\n  components: require(\"./components\"),\n  dijkstra: require(\"./dijkstra\"),\n  dijkstraAll: require(\"./dijkstra-all\"),\n  findCycles: require(\"./find-cycles\"),\n  floydWarshall: require(\"./floyd-warshall\"),\n  isAcyclic: require(\"./is-acyclic\"),\n  postorder: require(\"./postorder\"),\n  preorder: require(\"./preorder\"),\n  prim: require(\"./prim\"),\n  tarjan: require(\"./tarjan\"),\n  topsort: require(\"./topsort\")\n};","var _ = require(\"../lodash\");\n\nmodule.exports = components;\n\nfunction components(g) {\n  var visited = {},\n      cmpts = [],\n      cmpt;\n\n  function dfs(v) {\n    if (_.has(visited, v)) return;\n    visited[v] = true;\n    cmpt.push(v);\n\n    _.each(g.successors(v), dfs);\n\n    _.each(g.predecessors(v), dfs);\n  }\n\n  _.each(g.nodes(), function (v) {\n    cmpt = [];\n    dfs(v);\n\n    if (cmpt.length) {\n      cmpts.push(cmpt);\n    }\n  });\n\n  return cmpts;\n}","var dijkstra = require(\"./dijkstra\"),\n    _ = require(\"../lodash\");\n\nmodule.exports = dijkstraAll;\n\nfunction dijkstraAll(g, weightFunc, edgeFunc) {\n  return _.transform(g.nodes(), function (acc, v) {\n    acc[v] = dijkstra(g, v, weightFunc, edgeFunc);\n  }, {});\n}","var _ = require(\"../lodash\"),\n    tarjan = require(\"./tarjan\");\n\nmodule.exports = findCycles;\n\nfunction findCycles(g) {\n  return _.filter(tarjan(g), function (cmpt) {\n    return cmpt.length > 1 || cmpt.length === 1 && g.hasEdge(cmpt[0], cmpt[0]);\n  });\n}","var _ = require(\"../lodash\");\n\nmodule.exports = floydWarshall;\n\nvar DEFAULT_WEIGHT_FUNC = _.constant(1);\n\nfunction floydWarshall(g, weightFn, edgeFn) {\n  return runFloydWarshall(g, weightFn || DEFAULT_WEIGHT_FUNC, edgeFn || function (v) {\n    return g.outEdges(v);\n  });\n}\n\nfunction runFloydWarshall(g, weightFn, edgeFn) {\n  var results = {},\n      nodes = g.nodes();\n  nodes.forEach(function (v) {\n    results[v] = {};\n    results[v][v] = {\n      distance: 0\n    };\n    nodes.forEach(function (w) {\n      if (v !== w) {\n        results[v][w] = {\n          distance: Number.POSITIVE_INFINITY\n        };\n      }\n    });\n    edgeFn(v).forEach(function (edge) {\n      var w = edge.v === v ? edge.w : edge.v,\n          d = weightFn(edge);\n      results[v][w] = {\n        distance: d,\n        predecessor: v\n      };\n    });\n  });\n  nodes.forEach(function (k) {\n    var rowK = results[k];\n    nodes.forEach(function (i) {\n      var rowI = results[i];\n      nodes.forEach(function (j) {\n        var ik = rowI[k];\n        var kj = rowK[j];\n        var ij = rowI[j];\n        var altDistance = ik.distance + kj.distance;\n\n        if (altDistance < ij.distance) {\n          ij.distance = altDistance;\n          ij.predecessor = kj.predecessor;\n        }\n      });\n    });\n  });\n  return results;\n}","var topsort = require(\"./topsort\");\n\nmodule.exports = isAcyclic;\n\nfunction isAcyclic(g) {\n  try {\n    topsort(g);\n  } catch (e) {\n    if (e instanceof topsort.CycleException) {\n      return false;\n    }\n\n    throw e;\n  }\n\n  return true;\n}","var dfs = require(\"./dfs\");\n\nmodule.exports = postorder;\n\nfunction postorder(g, vs) {\n  return dfs(g, vs, \"post\");\n}","var dfs = require(\"./dfs\");\n\nmodule.exports = preorder;\n\nfunction preorder(g, vs) {\n  return dfs(g, vs, \"pre\");\n}","var _ = require(\"../lodash\"),\n    Graph = require(\"../graph\"),\n    PriorityQueue = require(\"../data/priority-queue\");\n\nmodule.exports = prim;\n\nfunction prim(g, weightFunc) {\n  var result = new Graph(),\n      parents = {},\n      pq = new PriorityQueue(),\n      v;\n\n  function updateNeighbors(edge) {\n    var w = edge.v === v ? edge.w : edge.v,\n        pri = pq.priority(w);\n\n    if (pri !== undefined) {\n      var edgeWeight = weightFunc(edge);\n\n      if (edgeWeight < pri) {\n        parents[w] = v;\n        pq.decrease(w, edgeWeight);\n      }\n    }\n  }\n\n  if (g.nodeCount() === 0) {\n    return result;\n  }\n\n  _.each(g.nodes(), function (v) {\n    pq.add(v, Number.POSITIVE_INFINITY);\n    result.setNode(v);\n  }); // Start from an arbitrary node\n\n\n  pq.decrease(g.nodes()[0], 0);\n  var init = false;\n\n  while (pq.size() > 0) {\n    v = pq.removeMin();\n\n    if (_.has(parents, v)) {\n      result.setEdge(v, parents[v]);\n    } else if (init) {\n      throw new Error(\"Input graph is not connected: \" + g);\n    } else {\n      init = true;\n    }\n\n    g.nodeEdges(v).forEach(updateNeighbors);\n  }\n\n  return result;\n}","\"use strict\";\n\nvar _ = require(\"./lodash\"),\n    acyclic = require(\"./acyclic\"),\n    normalize = require(\"./normalize\"),\n    rank = require(\"./rank\"),\n    normalizeRanks = require(\"./util\").normalizeRanks,\n    parentDummyChains = require(\"./parent-dummy-chains\"),\n    removeEmptyRanks = require(\"./util\").removeEmptyRanks,\n    nestingGraph = require(\"./nesting-graph\"),\n    addBorderSegments = require(\"./add-border-segments\"),\n    coordinateSystem = require(\"./coordinate-system\"),\n    order = require(\"./order\"),\n    position = require(\"./position\"),\n    util = require(\"./util\"),\n    Graph = require(\"./graphlib\").Graph;\n\nmodule.exports = layout;\n\nfunction layout(g, opts) {\n  var time = opts && opts.debugTiming ? util.time : util.notime;\n  time(\"layout\", function () {\n    var layoutGraph = time(\"  buildLayoutGraph\", function () {\n      return buildLayoutGraph(g);\n    });\n    time(\"  runLayout\", function () {\n      runLayout(layoutGraph, time);\n    });\n    time(\"  updateInputGraph\", function () {\n      updateInputGraph(g, layoutGraph);\n    });\n  });\n}\n\nfunction runLayout(g, time) {\n  time(\"    makeSpaceForEdgeLabels\", function () {\n    makeSpaceForEdgeLabels(g);\n  });\n  time(\"    removeSelfEdges\", function () {\n    removeSelfEdges(g);\n  });\n  time(\"    acyclic\", function () {\n    acyclic.run(g);\n  });\n  time(\"    nestingGraph.run\", function () {\n    nestingGraph.run(g);\n  });\n  time(\"    rank\", function () {\n    rank(util.asNonCompoundGraph(g));\n  });\n  time(\"    injectEdgeLabelProxies\", function () {\n    injectEdgeLabelProxies(g);\n  });\n  time(\"    removeEmptyRanks\", function () {\n    removeEmptyRanks(g);\n  });\n  time(\"    nestingGraph.cleanup\", function () {\n    nestingGraph.cleanup(g);\n  });\n  time(\"    normalizeRanks\", function () {\n    normalizeRanks(g);\n  });\n  time(\"    assignRankMinMax\", function () {\n    assignRankMinMax(g);\n  });\n  time(\"    removeEdgeLabelProxies\", function () {\n    removeEdgeLabelProxies(g);\n  });\n  time(\"    normalize.run\", function () {\n    normalize.run(g);\n  });\n  time(\"    parentDummyChains\", function () {\n    parentDummyChains(g);\n  });\n  time(\"    addBorderSegments\", function () {\n    addBorderSegments(g);\n  });\n  time(\"    order\", function () {\n    order(g);\n  });\n  time(\"    insertSelfEdges\", function () {\n    insertSelfEdges(g);\n  });\n  time(\"    adjustCoordinateSystem\", function () {\n    coordinateSystem.adjust(g);\n  });\n  time(\"    position\", function () {\n    position(g);\n  });\n  time(\"    positionSelfEdges\", function () {\n    positionSelfEdges(g);\n  });\n  time(\"    removeBorderNodes\", function () {\n    removeBorderNodes(g);\n  });\n  time(\"    normalize.undo\", function () {\n    normalize.undo(g);\n  });\n  time(\"    fixupEdgeLabelCoords\", function () {\n    fixupEdgeLabelCoords(g);\n  });\n  time(\"    undoCoordinateSystem\", function () {\n    coordinateSystem.undo(g);\n  });\n  time(\"    translateGraph\", function () {\n    translateGraph(g);\n  });\n  time(\"    assignNodeIntersects\", function () {\n    assignNodeIntersects(g);\n  });\n  time(\"    reversePoints\", function () {\n    reversePointsForReversedEdges(g);\n  });\n  time(\"    acyclic.undo\", function () {\n    acyclic.undo(g);\n  });\n}\n/*\n * Copies final layout information from the layout graph back to the input\n * graph. This process only copies whitelisted attributes from the layout graph\n * to the input graph, so it serves as a good place to determine what\n * attributes can influence layout.\n */\n\n\nfunction updateInputGraph(inputGraph, layoutGraph) {\n  _.forEach(inputGraph.nodes(), function (v) {\n    var inputLabel = inputGraph.node(v),\n        layoutLabel = layoutGraph.node(v);\n\n    if (inputLabel) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n\n      if (layoutGraph.children(v).length) {\n        inputLabel.width = layoutLabel.width;\n        inputLabel.height = layoutLabel.height;\n      }\n    }\n  });\n\n  _.forEach(inputGraph.edges(), function (e) {\n    var inputLabel = inputGraph.edge(e),\n        layoutLabel = layoutGraph.edge(e);\n    inputLabel.points = layoutLabel.points;\n\n    if (_.has(layoutLabel, \"x\")) {\n      inputLabel.x = layoutLabel.x;\n      inputLabel.y = layoutLabel.y;\n    }\n  });\n\n  inputGraph.graph().width = layoutGraph.graph().width;\n  inputGraph.graph().height = layoutGraph.graph().height;\n}\n\nvar graphNumAttrs = [\"nodesep\", \"edgesep\", \"ranksep\", \"marginx\", \"marginy\"],\n    graphDefaults = {\n  ranksep: 50,\n  edgesep: 20,\n  nodesep: 50,\n  rankdir: \"tb\"\n},\n    graphAttrs = [\"acyclicer\", \"ranker\", \"rankdir\", \"align\"],\n    nodeNumAttrs = [\"width\", \"height\"],\n    nodeDefaults = {\n  width: 0,\n  height: 0\n},\n    edgeNumAttrs = [\"minlen\", \"weight\", \"width\", \"height\", \"labeloffset\"],\n    edgeDefaults = {\n  minlen: 1,\n  weight: 1,\n  width: 0,\n  height: 0,\n  labeloffset: 10,\n  labelpos: \"r\"\n},\n    edgeAttrs = [\"labelpos\"];\n/*\n * Constructs a new graph from the input graph, which can be used for layout.\n * This process copies only whitelisted attributes from the input graph to the\n * layout graph. Thus this function serves as a good place to determine what\n * attributes can influence layout.\n */\n\nfunction buildLayoutGraph(inputGraph) {\n  var g = new Graph({\n    multigraph: true,\n    compound: true\n  }),\n      graph = canonicalize(inputGraph.graph());\n  g.setGraph(_.merge({}, graphDefaults, selectNumberAttrs(graph, graphNumAttrs), _.pick(graph, graphAttrs)));\n\n  _.forEach(inputGraph.nodes(), function (v) {\n    var node = canonicalize(inputGraph.node(v));\n    g.setNode(v, _.defaults(selectNumberAttrs(node, nodeNumAttrs), nodeDefaults));\n    g.setParent(v, inputGraph.parent(v));\n  });\n\n  _.forEach(inputGraph.edges(), function (e) {\n    var edge = canonicalize(inputGraph.edge(e));\n    g.setEdge(e, _.merge({}, edgeDefaults, selectNumberAttrs(edge, edgeNumAttrs), _.pick(edge, edgeAttrs)));\n  });\n\n  return g;\n}\n/*\n * This idea comes from the Gansner paper: to account for edge labels in our\n * layout we split each rank in half by doubling minlen and halving ranksep.\n * Then we can place labels at these mid-points between nodes.\n *\n * We also add some minimal padding to the width to push the label for the edge\n * away from the edge itself a bit.\n */\n\n\nfunction makeSpaceForEdgeLabels(g) {\n  var graph = g.graph();\n  graph.ranksep /= 2;\n\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n    edge.minlen *= 2;\n\n    if (edge.labelpos.toLowerCase() !== \"c\") {\n      if (graph.rankdir === \"TB\" || graph.rankdir === \"BT\") {\n        edge.width += edge.labeloffset;\n      } else {\n        edge.height += edge.labeloffset;\n      }\n    }\n  });\n}\n/*\n * Creates temporary dummy nodes that capture the rank in which each edge's\n * label is going to, if it has one of non-zero width and height. We do this\n * so that we can safely remove empty ranks while preserving balance for the\n * label's position.\n */\n\n\nfunction injectEdgeLabelProxies(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n\n    if (edge.width && edge.height) {\n      var v = g.node(e.v),\n          w = g.node(e.w),\n          label = {\n        rank: (w.rank - v.rank) / 2 + v.rank,\n        e: e\n      };\n      util.addDummyNode(g, \"edge-proxy\", label, \"_ep\");\n    }\n  });\n}\n\nfunction assignRankMinMax(g) {\n  var maxRank = 0;\n\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n\n    if (node.borderTop) {\n      node.minRank = g.node(node.borderTop).rank;\n      node.maxRank = g.node(node.borderBottom).rank;\n      maxRank = _.max(maxRank, node.maxRank);\n    }\n  });\n\n  g.graph().maxRank = maxRank;\n}\n\nfunction removeEdgeLabelProxies(g) {\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n\n    if (node.dummy === \"edge-proxy\") {\n      g.edge(node.e).labelRank = node.rank;\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction translateGraph(g) {\n  var minX = Number.POSITIVE_INFINITY,\n      maxX = 0,\n      minY = Number.POSITIVE_INFINITY,\n      maxY = 0,\n      graphLabel = g.graph(),\n      marginX = graphLabel.marginx || 0,\n      marginY = graphLabel.marginy || 0;\n\n  function getExtremes(attrs) {\n    var x = attrs.x,\n        y = attrs.y,\n        w = attrs.width,\n        h = attrs.height;\n    minX = Math.min(minX, x - w / 2);\n    maxX = Math.max(maxX, x + w / 2);\n    minY = Math.min(minY, y - h / 2);\n    maxY = Math.max(maxY, y + h / 2);\n  }\n\n  _.forEach(g.nodes(), function (v) {\n    getExtremes(g.node(v));\n  });\n\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n\n    if (_.has(edge, \"x\")) {\n      getExtremes(edge);\n    }\n  });\n\n  minX -= marginX;\n  minY -= marginY;\n\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n    node.x -= minX;\n    node.y -= minY;\n  });\n\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n\n    _.forEach(edge.points, function (p) {\n      p.x -= minX;\n      p.y -= minY;\n    });\n\n    if (_.has(edge, \"x\")) {\n      edge.x -= minX;\n    }\n\n    if (_.has(edge, \"y\")) {\n      edge.y -= minY;\n    }\n  });\n\n  graphLabel.width = maxX - minX + marginX;\n  graphLabel.height = maxY - minY + marginY;\n}\n\nfunction assignNodeIntersects(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e),\n        nodeV = g.node(e.v),\n        nodeW = g.node(e.w),\n        p1,\n        p2;\n\n    if (!edge.points) {\n      edge.points = [];\n      p1 = nodeW;\n      p2 = nodeV;\n    } else {\n      p1 = edge.points[0];\n      p2 = edge.points[edge.points.length - 1];\n    }\n\n    edge.points.unshift(util.intersectRect(nodeV, p1));\n    edge.points.push(util.intersectRect(nodeW, p2));\n  });\n}\n\nfunction fixupEdgeLabelCoords(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n\n    if (_.has(edge, \"x\")) {\n      if (edge.labelpos === \"l\" || edge.labelpos === \"r\") {\n        edge.width -= edge.labeloffset;\n      }\n\n      switch (edge.labelpos) {\n        case \"l\":\n          edge.x -= edge.width / 2 + edge.labeloffset;\n          break;\n\n        case \"r\":\n          edge.x += edge.width / 2 + edge.labeloffset;\n          break;\n      }\n    }\n  });\n}\n\nfunction reversePointsForReversedEdges(g) {\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n\n    if (edge.reversed) {\n      edge.points.reverse();\n    }\n  });\n}\n\nfunction removeBorderNodes(g) {\n  _.forEach(g.nodes(), function (v) {\n    if (g.children(v).length) {\n      var node = g.node(v),\n          t = g.node(node.borderTop),\n          b = g.node(node.borderBottom),\n          l = g.node(_.last(node.borderLeft)),\n          r = g.node(_.last(node.borderRight));\n      node.width = Math.abs(r.x - l.x);\n      node.height = Math.abs(b.y - t.y);\n      node.x = l.x + node.width / 2;\n      node.y = t.y + node.height / 2;\n    }\n  });\n\n  _.forEach(g.nodes(), function (v) {\n    if (g.node(v).dummy === \"border\") {\n      g.removeNode(v);\n    }\n  });\n}\n\nfunction removeSelfEdges(g) {\n  _.forEach(g.edges(), function (e) {\n    if (e.v === e.w) {\n      var node = g.node(e.v);\n\n      if (!node.selfEdges) {\n        node.selfEdges = [];\n      }\n\n      node.selfEdges.push({\n        e: e,\n        label: g.edge(e)\n      });\n      g.removeEdge(e);\n    }\n  });\n}\n\nfunction insertSelfEdges(g) {\n  var layers = util.buildLayerMatrix(g);\n\n  _.forEach(layers, function (layer) {\n    var orderShift = 0;\n\n    _.forEach(layer, function (v, i) {\n      var node = g.node(v);\n      node.order = i + orderShift;\n\n      _.forEach(node.selfEdges, function (selfEdge) {\n        util.addDummyNode(g, \"selfedge\", {\n          width: selfEdge.label.width,\n          height: selfEdge.label.height,\n          rank: node.rank,\n          order: i + ++orderShift,\n          e: selfEdge.e,\n          label: selfEdge.label\n        }, \"_se\");\n      });\n\n      delete node.selfEdges;\n    });\n  });\n}\n\nfunction positionSelfEdges(g) {\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v);\n\n    if (node.dummy === \"selfedge\") {\n      var selfNode = g.node(node.e.v),\n          x = selfNode.x + selfNode.width / 2,\n          y = selfNode.y,\n          dx = node.x - x,\n          dy = selfNode.height / 2;\n      g.setEdge(node.e, node.label);\n      g.removeNode(v);\n      node.label.points = [{\n        x: x + 2 * dx / 3,\n        y: y - dy\n      }, {\n        x: x + 5 * dx / 6,\n        y: y - dy\n      }, {\n        x: x + dx,\n        y: y\n      }, {\n        x: x + 5 * dx / 6,\n        y: y + dy\n      }, {\n        x: x + 2 * dx / 3,\n        y: y + dy\n      }];\n      node.label.x = node.x;\n      node.label.y = node.y;\n    }\n  });\n}\n\nfunction selectNumberAttrs(obj, attrs) {\n  return _.mapValues(_.pick(obj, attrs), Number);\n}\n\nfunction canonicalize(attrs) {\n  var newAttrs = {};\n\n  _.forEach(attrs, function (v, k) {\n    newAttrs[k.toLowerCase()] = v;\n  });\n\n  return newAttrs;\n}","var baseClone = require('./_baseClone');\n/** Used to compose bitmasks for cloning. */\n\n\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\n\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nmodule.exports = cloneDeep;","var baseRest = require('./_baseRest'),\n    eq = require('./eq'),\n    isIterateeCall = require('./_isIterateeCall'),\n    keysIn = require('./keysIn');\n/** Used for built-in method references. */\n\n\nvar objectProto = Object.prototype;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/**\n * Assigns own and inherited enumerable string keyed properties of source\n * objects to the destination object for all destination properties that\n * resolve to `undefined`. Source objects are applied from left to right.\n * Once a property is set, additional values of the same property are ignored.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.defaultsDeep\n * @example\n *\n * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\n\nvar defaults = baseRest(function (object, sources) {\n  object = Object(object);\n  var index = -1;\n  var length = sources.length;\n  var guard = length > 2 ? sources[2] : undefined;\n\n  if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n    length = 1;\n  }\n\n  while (++index < length) {\n    var source = sources[index];\n    var props = keysIn(source);\n    var propsIndex = -1;\n    var propsLength = props.length;\n\n    while (++propsIndex < propsLength) {\n      var key = props[propsIndex];\n      var value = object[key];\n\n      if (value === undefined || eq(value, objectProto[key]) && !hasOwnProperty.call(object, key)) {\n        object[key] = source[key];\n      }\n    }\n  }\n\n  return object;\n});\nmodule.exports = defaults;","var createFind = require('./_createFind'),\n    findIndex = require('./findIndex');\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\n\n\nvar find = createFind(findIndex);\nmodule.exports = find;","var baseIteratee = require('./_baseIteratee'),\n    isArrayLike = require('./isArrayLike'),\n    keys = require('./keys');\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\n\n\nfunction createFind(findIndexFunc) {\n  return function (collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n\n      predicate = function predicate(key) {\n        return iteratee(iterable[key], key, iterable);\n      };\n    }\n\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nmodule.exports = createFind;","var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\n\nvar nativeMax = Math.max;\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\n\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n\n  if (!length) {\n    return -1;\n  }\n\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nmodule.exports = findIndex;","var toFinite = require('./toFinite');\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\n\n\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n  return result === result ? remainder ? result - remainder : result : 0;\n}\n\nmodule.exports = toInteger;","var isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n/** Used as references for various `Number` constants. */\n\n\nvar NAN = 0 / 0;\n/** Used to match leading and trailing whitespace. */\n\nvar reTrim = /^\\s+|\\s+$/g;\n/** Used to detect bad signed hexadecimal string values. */\n\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n/** Used to detect binary string values. */\n\nvar reIsBinary = /^0b[01]+$/i;\n/** Used to detect octal string values. */\n\nvar reIsOctal = /^0o[0-7]+$/i;\n/** Built-in method references without a dependency on `root`. */\n\nvar freeParseInt = parseInt;\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\n\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n\n  if (isSymbol(value)) {\n    return NAN;\n  }\n\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? other + '' : other;\n  }\n\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return isBinary || reIsOctal.test(value) ? freeParseInt(value.slice(2), isBinary ? 2 : 8) : reIsBadHex.test(value) ? NAN : +value;\n}\n\nmodule.exports = toNumber;","var baseFor = require('./_baseFor'),\n    castFunction = require('./_castFunction'),\n    keysIn = require('./keysIn');\n/**\n * Iterates over own and inherited enumerable string keyed properties of an\n * object and invokes `iteratee` for each property. The iteratee is invoked\n * with three arguments: (value, key, object). Iteratee functions may exit\n * iteration early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 0.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns `object`.\n * @see _.forInRight\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.forIn(new Foo, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n */\n\n\nfunction forIn(object, iteratee) {\n  return object == null ? object : baseFor(object, castFunction(iteratee), keysIn);\n}\n\nmodule.exports = forIn;","/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nmodule.exports = last;","var baseAssignValue = require('./_baseAssignValue'),\n    baseForOwn = require('./_baseForOwn'),\n    baseIteratee = require('./_baseIteratee');\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\n\n\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n  baseForOwn(object, function (value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nmodule.exports = mapValues;","var baseExtremum = require('./_baseExtremum'),\n    baseGt = require('./_baseGt'),\n    identity = require('./identity');\n/**\n * Computes the maximum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {*} Returns the maximum value.\n * @example\n *\n * _.max([4, 2, 8, 6]);\n * // => 8\n *\n * _.max([]);\n * // => undefined\n */\n\n\nfunction max(array) {\n  return array && array.length ? baseExtremum(array, identity, baseGt) : undefined;\n}\n\nmodule.exports = max;","/**\n * The base implementation of `_.gt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is greater than `other`,\n *  else `false`.\n */\nfunction baseGt(value, other) {\n  return value > other;\n}\n\nmodule.exports = baseGt;","var baseMerge = require('./_baseMerge'),\n    createAssigner = require('./_createAssigner');\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\n\n\nvar merge = createAssigner(function (object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\nmodule.exports = merge;","var Stack = require('./_Stack'),\n    assignMergeValue = require('./_assignMergeValue'),\n    baseFor = require('./_baseFor'),\n    baseMergeDeep = require('./_baseMergeDeep'),\n    isObject = require('./isObject'),\n    keysIn = require('./keysIn'),\n    safeGet = require('./_safeGet');\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\n\n\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n\n  baseFor(source, function (srcValue, key) {\n    if (isObject(srcValue)) {\n      stack || (stack = new Stack());\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    } else {\n      var newValue = customizer ? customizer(safeGet(object, key), srcValue, key + '', object, source, stack) : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\nmodule.exports = baseMerge;","var assignMergeValue = require('./_assignMergeValue'),\n    cloneBuffer = require('./_cloneBuffer'),\n    cloneTypedArray = require('./_cloneTypedArray'),\n    copyArray = require('./_copyArray'),\n    initCloneObject = require('./_initCloneObject'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLikeObject = require('./isArrayLikeObject'),\n    isBuffer = require('./isBuffer'),\n    isFunction = require('./isFunction'),\n    isObject = require('./isObject'),\n    isPlainObject = require('./isPlainObject'),\n    isTypedArray = require('./isTypedArray'),\n    safeGet = require('./_safeGet'),\n    toPlainObject = require('./toPlainObject');\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\n\n\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n\n  var newValue = customizer ? customizer(objValue, srcValue, key + '', object, source, stack) : undefined;\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n    newValue = srcValue;\n\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      } else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      } else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      } else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      } else {\n        newValue = [];\n      }\n    } else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      } else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    } else {\n      isCommon = false;\n    }\n  }\n\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n\n  assignMergeValue(object, key, newValue);\n}\n\nmodule.exports = baseMergeDeep;","var baseGetTag = require('./_baseGetTag'),\n    getPrototype = require('./_getPrototype'),\n    isObjectLike = require('./isObjectLike');\n/** `Object#toString` result references. */\n\n\nvar objectTag = '[object Object]';\n/** Used for built-in method references. */\n\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n/** Used to resolve the decompiled source of functions. */\n\nvar funcToString = funcProto.toString;\n/** Used to check objects for own properties. */\n\nvar hasOwnProperty = objectProto.hasOwnProperty;\n/** Used to infer the `Object` constructor. */\n\nvar objectCtorString = funcToString.call(Object);\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\n\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n\n  var proto = getPrototype(value);\n\n  if (proto === null) {\n    return true;\n  }\n\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString;\n}\n\nmodule.exports = isPlainObject;","var copyObject = require('./_copyObject'),\n    keysIn = require('./keysIn');\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\n\n\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\nmodule.exports = toPlainObject;","var baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\n\n\nfunction createAssigner(assigner) {\n  return baseRest(function (object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n    customizer = assigner.length > 3 && typeof customizer == 'function' ? (length--, customizer) : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n\n    object = Object(object);\n\n    while (++index < length) {\n      var source = sources[index];\n\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n\n    return object;\n  });\n}\n\nmodule.exports = createAssigner;","var baseExtremum = require('./_baseExtremum'),\n    baseLt = require('./_baseLt'),\n    identity = require('./identity');\n/**\n * Computes the minimum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {*} Returns the minimum value.\n * @example\n *\n * _.min([4, 2, 8, 6]);\n * // => 2\n *\n * _.min([]);\n * // => undefined\n */\n\n\nfunction min(array) {\n  return array && array.length ? baseExtremum(array, identity, baseLt) : undefined;\n}\n\nmodule.exports = min;","var baseExtremum = require('./_baseExtremum'),\n    baseIteratee = require('./_baseIteratee'),\n    baseLt = require('./_baseLt');\n/**\n * This method is like `_.min` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * the value is ranked. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {*} Returns the minimum value.\n * @example\n *\n * var objects = [{ 'n': 1 }, { 'n': 2 }];\n *\n * _.minBy(objects, function(o) { return o.n; });\n * // => { 'n': 1 }\n *\n * // The `_.property` iteratee shorthand.\n * _.minBy(objects, 'n');\n * // => { 'n': 1 }\n */\n\n\nfunction minBy(array, iteratee) {\n  return array && array.length ? baseExtremum(array, baseIteratee(iteratee, 2), baseLt) : undefined;\n}\n\nmodule.exports = minBy;","var root = require('./_root');\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\n\n\nvar now = function now() {\n  return root.Date.now();\n};\n\nmodule.exports = now;","var basePick = require('./_basePick'),\n    flatRest = require('./_flatRest');\n/**\n * Creates an object composed of the picked `object` properties.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to pick.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pick(object, ['a', 'c']);\n * // => { 'a': 1, 'c': 3 }\n */\n\n\nvar pick = flatRest(function (object, paths) {\n  return object == null ? {} : basePick(object, paths);\n});\nmodule.exports = pick;","var basePickBy = require('./_basePickBy'),\n    hasIn = require('./hasIn');\n/**\n * The base implementation of `_.pick` without support for individual\n * property identifiers.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @returns {Object} Returns the new object.\n */\n\n\nfunction basePick(object, paths) {\n  return basePickBy(object, paths, function (value, path) {\n    return hasIn(object, path);\n  });\n}\n\nmodule.exports = basePick;","var baseGet = require('./_baseGet'),\n    baseSet = require('./_baseSet'),\n    castPath = require('./_castPath');\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\n\n\nfunction basePickBy(object, paths, predicate) {\n  var index = -1,\n      length = paths.length,\n      result = {};\n\n  while (++index < length) {\n    var path = paths[index],\n        value = baseGet(object, path);\n\n    if (predicate(value, path)) {\n      baseSet(result, castPath(path, object), value);\n    }\n  }\n\n  return result;\n}\n\nmodule.exports = basePickBy;","var assignValue = require('./_assignValue'),\n    castPath = require('./_castPath'),\n    isIndex = require('./_isIndex'),\n    isObject = require('./isObject'),\n    toKey = require('./_toKey');\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\n\n\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n\n  path = castPath(path, object);\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n\n      if (newValue === undefined) {\n        newValue = isObject(objValue) ? objValue : isIndex(path[index + 1]) ? [] : {};\n      }\n    }\n\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n\n  return object;\n}\n\nmodule.exports = baseSet;","var flatten = require('./flatten'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n/**\n * A specialized version of `baseRest` which flattens the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @returns {Function} Returns the new function.\n */\n\n\nfunction flatRest(func) {\n  return setToString(overRest(func, undefined, flatten), func + '');\n}\n\nmodule.exports = flatRest;","var createRange = require('./_createRange');\n/**\n * Creates an array of numbers (positive and/or negative) progressing from\n * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n * `start` is specified without an `end` or `step`. If `end` is not specified,\n * it's set to `start` with `start` then set to `0`.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} [start=0] The start of the range.\n * @param {number} end The end of the range.\n * @param {number} [step=1] The value to increment or decrement by.\n * @returns {Array} Returns the range of numbers.\n * @see _.inRange, _.rangeRight\n * @example\n *\n * _.range(4);\n * // => [0, 1, 2, 3]\n *\n * _.range(-4);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 5);\n * // => [1, 2, 3, 4]\n *\n * _.range(0, 20, 5);\n * // => [0, 5, 10, 15]\n *\n * _.range(0, -4, -1);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 4, 0);\n * // => [1, 1, 1]\n *\n * _.range(0);\n * // => []\n */\n\n\nvar range = createRange();\nmodule.exports = range;","var baseRange = require('./_baseRange'),\n    isIterateeCall = require('./_isIterateeCall'),\n    toFinite = require('./toFinite');\n/**\n * Creates a `_.range` or `_.rangeRight` function.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new range function.\n */\n\n\nfunction createRange(fromRight) {\n  return function (start, end, step) {\n    if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n      end = step = undefined;\n    } // Ensure the sign of `-0` is preserved.\n\n\n    start = toFinite(start);\n\n    if (end === undefined) {\n      end = start;\n      start = 0;\n    } else {\n      end = toFinite(end);\n    }\n\n    step = step === undefined ? start < end ? 1 : -1 : toFinite(step);\n    return baseRange(start, end, step, fromRight);\n  };\n}\n\nmodule.exports = createRange;","/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n/**\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\n * coerce arguments.\n *\n * @private\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the range of numbers.\n */\n\nfunction baseRange(start, end, step, fromRight) {\n  var index = -1,\n      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n\n  return result;\n}\n\nmodule.exports = baseRange;","var baseFlatten = require('./_baseFlatten'),\n    baseOrderBy = require('./_baseOrderBy'),\n    baseRest = require('./_baseRest'),\n    isIterateeCall = require('./_isIterateeCall');\n/**\n * Creates an array of elements, sorted in ascending order by the results of\n * running each element in a collection thru each iteratee. This method\n * performs a stable sort, that is, it preserves the original sort order of\n * equal elements. The iteratees are invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {...(Function|Function[])} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 40 },\n *   { 'user': 'barney', 'age': 34 }\n * ];\n *\n * _.sortBy(users, [function(o) { return o.user; }]);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n *\n * _.sortBy(users, ['user', 'age']);\n * // => objects for [['barney', 34], ['barney', 36], ['fred', 40], ['fred', 48]]\n */\n\n\nvar sortBy = baseRest(function (collection, iteratees) {\n  if (collection == null) {\n    return [];\n  }\n\n  var length = iteratees.length;\n\n  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n    iteratees = [];\n  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n    iteratees = [iteratees[0]];\n  }\n\n  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n});\nmodule.exports = sortBy;","var arrayMap = require('./_arrayMap'),\n    baseIteratee = require('./_baseIteratee'),\n    baseMap = require('./_baseMap'),\n    baseSortBy = require('./_baseSortBy'),\n    baseUnary = require('./_baseUnary'),\n    compareMultiple = require('./_compareMultiple'),\n    identity = require('./identity');\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\n\n\nfunction baseOrderBy(collection, iteratees, orders) {\n  var index = -1;\n  iteratees = arrayMap(iteratees.length ? iteratees : [identity], baseUnary(baseIteratee));\n  var result = baseMap(collection, function (value, key, collection) {\n    var criteria = arrayMap(iteratees, function (iteratee) {\n      return iteratee(value);\n    });\n    return {\n      'criteria': criteria,\n      'index': ++index,\n      'value': value\n    };\n  });\n  return baseSortBy(result, function (object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nmodule.exports = baseOrderBy;","/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n  array.sort(comparer);\n\n  while (length--) {\n    array[length] = array[length].value;\n  }\n\n  return array;\n}\n\nmodule.exports = baseSortBy;","var compareAscending = require('./_compareAscending');\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\n\n\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  } // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n\n\n  return object.index - other.index;\n}\n\nmodule.exports = compareMultiple;","var isSymbol = require('./isSymbol');\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\n\n\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if (!othIsNull && !othIsSymbol && !valIsSymbol && value > other || valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol || valIsNull && othIsDefined && othIsReflexive || !valIsDefined && othIsReflexive || !valIsReflexive) {\n      return 1;\n    }\n\n    if (!valIsNull && !valIsSymbol && !othIsSymbol && value < other || othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol || othIsNull && valIsDefined && valIsReflexive || !othIsDefined && valIsReflexive || !othIsReflexive) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n\nmodule.exports = compareAscending;","var toString = require('./toString');\n/** Used to generate unique IDs. */\n\n\nvar idCounter = 0;\n/**\n * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {string} [prefix=''] The value to prefix the ID with.\n * @returns {string} Returns the unique ID.\n * @example\n *\n * _.uniqueId('contact_');\n * // => 'contact_104'\n *\n * _.uniqueId();\n * // => '105'\n */\n\nfunction uniqueId(prefix) {\n  var id = ++idCounter;\n  return toString(prefix) + id;\n}\n\nmodule.exports = uniqueId;","var assignValue = require('./_assignValue'),\n    baseZipObject = require('./_baseZipObject');\n/**\n * This method is like `_.fromPairs` except that it accepts two arrays,\n * one of property identifiers and one of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 0.4.0\n * @category Array\n * @param {Array} [props=[]] The property identifiers.\n * @param {Array} [values=[]] The property values.\n * @returns {Object} Returns the new object.\n * @example\n *\n * _.zipObject(['a', 'b'], [1, 2]);\n * // => { 'a': 1, 'b': 2 }\n */\n\n\nfunction zipObject(props, values) {\n  return baseZipObject(props || [], values || [], assignValue);\n}\n\nmodule.exports = zipObject;","/**\n * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n *\n * @private\n * @param {Array} props The property identifiers.\n * @param {Array} values The property values.\n * @param {Function} assignFunc The function to assign values.\n * @returns {Object} Returns the new object.\n */\nfunction baseZipObject(props, values, assignFunc) {\n  var index = -1,\n      length = props.length,\n      valsLength = values.length,\n      result = {};\n\n  while (++index < length) {\n    var value = index < valsLength ? values[index] : undefined;\n    assignFunc(result, props[index], value);\n  }\n\n  return result;\n}\n\nmodule.exports = baseZipObject;","\"use strict\";\n\nvar _ = require(\"./lodash\"),\n    greedyFAS = require(\"./greedy-fas\");\n\nmodule.exports = {\n  run: run,\n  undo: undo\n};\n\nfunction run(g) {\n  var fas = g.graph().acyclicer === \"greedy\" ? greedyFAS(g, weightFn(g)) : dfsFAS(g);\n\n  _.forEach(fas, function (e) {\n    var label = g.edge(e);\n    g.removeEdge(e);\n    label.forwardName = e.name;\n    label.reversed = true;\n    g.setEdge(e.w, e.v, label, _.uniqueId(\"rev\"));\n  });\n\n  function weightFn(g) {\n    return function (e) {\n      return g.edge(e).weight;\n    };\n  }\n}\n\nfunction dfsFAS(g) {\n  var fas = [],\n      stack = {},\n      visited = {};\n\n  function dfs(v) {\n    if (_.has(visited, v)) {\n      return;\n    }\n\n    visited[v] = true;\n    stack[v] = true;\n\n    _.forEach(g.outEdges(v), function (e) {\n      if (_.has(stack, e.w)) {\n        fas.push(e);\n      } else {\n        dfs(e.w);\n      }\n    });\n\n    delete stack[v];\n  }\n\n  _.forEach(g.nodes(), dfs);\n\n  return fas;\n}\n\nfunction undo(g) {\n  _.forEach(g.edges(), function (e) {\n    var label = g.edge(e);\n\n    if (label.reversed) {\n      g.removeEdge(e);\n      var forwardName = label.forwardName;\n      delete label.reversed;\n      delete label.forwardName;\n      g.setEdge(e.w, e.v, label, forwardName);\n    }\n  });\n}","var _ = require(\"./lodash\"),\n    Graph = require(\"./graphlib\").Graph,\n    List = require(\"./data/list\");\n/*\n * A greedy heuristic for finding a feedback arc set for a graph. A feedback\n * arc set is a set of edges that can be removed to make a graph acyclic.\n * The algorithm comes from: P. Eades, X. Lin, and W. F. Smyth, \"A fast and\n * effective heuristic for the feedback arc set problem.\" This implementation\n * adjusts that from the paper to allow for weighted edges.\n */\n\n\nmodule.exports = greedyFAS;\n\nvar DEFAULT_WEIGHT_FN = _.constant(1);\n\nfunction greedyFAS(g, weightFn) {\n  if (g.nodeCount() <= 1) {\n    return [];\n  }\n\n  var state = buildState(g, weightFn || DEFAULT_WEIGHT_FN);\n  var results = doGreedyFAS(state.graph, state.buckets, state.zeroIdx); // Expand multi-edges\n\n  return _.flatten(_.map(results, function (e) {\n    return g.outEdges(e.v, e.w);\n  }), true);\n}\n\nfunction doGreedyFAS(g, buckets, zeroIdx) {\n  var results = [],\n      sources = buckets[buckets.length - 1],\n      sinks = buckets[0];\n  var entry;\n\n  while (g.nodeCount()) {\n    while (entry = sinks.dequeue()) {\n      removeNode(g, buckets, zeroIdx, entry);\n    }\n\n    while (entry = sources.dequeue()) {\n      removeNode(g, buckets, zeroIdx, entry);\n    }\n\n    if (g.nodeCount()) {\n      for (var i = buckets.length - 2; i > 0; --i) {\n        entry = buckets[i].dequeue();\n\n        if (entry) {\n          results = results.concat(removeNode(g, buckets, zeroIdx, entry, true));\n          break;\n        }\n      }\n    }\n  }\n\n  return results;\n}\n\nfunction removeNode(g, buckets, zeroIdx, entry, collectPredecessors) {\n  var results = collectPredecessors ? [] : undefined;\n\n  _.forEach(g.inEdges(entry.v), function (edge) {\n    var weight = g.edge(edge),\n        uEntry = g.node(edge.v);\n\n    if (collectPredecessors) {\n      results.push({\n        v: edge.v,\n        w: edge.w\n      });\n    }\n\n    uEntry.out -= weight;\n    assignBucket(buckets, zeroIdx, uEntry);\n  });\n\n  _.forEach(g.outEdges(entry.v), function (edge) {\n    var weight = g.edge(edge),\n        w = edge.w,\n        wEntry = g.node(w);\n    wEntry[\"in\"] -= weight;\n    assignBucket(buckets, zeroIdx, wEntry);\n  });\n\n  g.removeNode(entry.v);\n  return results;\n}\n\nfunction buildState(g, weightFn) {\n  var fasGraph = new Graph(),\n      maxIn = 0,\n      maxOut = 0;\n\n  _.forEach(g.nodes(), function (v) {\n    fasGraph.setNode(v, {\n      v: v,\n      \"in\": 0,\n      out: 0\n    });\n  }); // Aggregate weights on nodes, but also sum the weights across multi-edges\n  // into a single edge for the fasGraph.\n\n\n  _.forEach(g.edges(), function (e) {\n    var prevWeight = fasGraph.edge(e.v, e.w) || 0,\n        weight = weightFn(e),\n        edgeWeight = prevWeight + weight;\n    fasGraph.setEdge(e.v, e.w, edgeWeight);\n    maxOut = Math.max(maxOut, fasGraph.node(e.v).out += weight);\n    maxIn = Math.max(maxIn, fasGraph.node(e.w)[\"in\"] += weight);\n  });\n\n  var buckets = _.range(maxOut + maxIn + 3).map(function () {\n    return new List();\n  });\n\n  var zeroIdx = maxIn + 1;\n\n  _.forEach(fasGraph.nodes(), function (v) {\n    assignBucket(buckets, zeroIdx, fasGraph.node(v));\n  });\n\n  return {\n    graph: fasGraph,\n    buckets: buckets,\n    zeroIdx: zeroIdx\n  };\n}\n\nfunction assignBucket(buckets, zeroIdx, entry) {\n  if (!entry.out) {\n    buckets[0].enqueue(entry);\n  } else if (!entry[\"in\"]) {\n    buckets[buckets.length - 1].enqueue(entry);\n  } else {\n    buckets[entry.out - entry[\"in\"] + zeroIdx].enqueue(entry);\n  }\n}","/*\n * Simple doubly linked list implementation derived from Cormen, et al.,\n * \"Introduction to Algorithms\".\n */\nmodule.exports = List;\n\nfunction List() {\n  var sentinel = {};\n  sentinel._next = sentinel._prev = sentinel;\n  this._sentinel = sentinel;\n}\n\nList.prototype.dequeue = function () {\n  var sentinel = this._sentinel,\n      entry = sentinel._prev;\n\n  if (entry !== sentinel) {\n    unlink(entry);\n    return entry;\n  }\n};\n\nList.prototype.enqueue = function (entry) {\n  var sentinel = this._sentinel;\n\n  if (entry._prev && entry._next) {\n    unlink(entry);\n  }\n\n  entry._next = sentinel._next;\n  sentinel._next._prev = entry;\n  sentinel._next = entry;\n  entry._prev = sentinel;\n};\n\nList.prototype.toString = function () {\n  var strs = [],\n      sentinel = this._sentinel,\n      curr = sentinel._prev;\n\n  while (curr !== sentinel) {\n    strs.push(JSON.stringify(curr, filterOutLinks));\n    curr = curr._prev;\n  }\n\n  return \"[\" + strs.join(\", \") + \"]\";\n};\n\nfunction unlink(entry) {\n  entry._prev._next = entry._next;\n  entry._next._prev = entry._prev;\n  delete entry._next;\n  delete entry._prev;\n}\n\nfunction filterOutLinks(k, v) {\n  if (k !== \"_next\" && k !== \"_prev\") {\n    return v;\n  }\n}","\"use strict\";\n\nvar _ = require(\"./lodash\"),\n    util = require(\"./util\");\n\nmodule.exports = {\n  run: run,\n  undo: undo\n};\n/*\n * Breaks any long edges in the graph into short segments that span 1 layer\n * each. This operation is undoable with the denormalize function.\n *\n * Pre-conditions:\n *\n *    1. The input graph is a DAG.\n *    2. Each node in the graph has a \"rank\" property.\n *\n * Post-condition:\n *\n *    1. All edges in the graph have a length of 1.\n *    2. Dummy nodes are added where edges have been split into segments.\n *    3. The graph is augmented with a \"dummyChains\" attribute which contains\n *       the first dummy in each chain of dummy nodes produced.\n */\n\nfunction run(g) {\n  g.graph().dummyChains = [];\n\n  _.forEach(g.edges(), function (edge) {\n    normalizeEdge(g, edge);\n  });\n}\n\nfunction normalizeEdge(g, e) {\n  var v = e.v,\n      vRank = g.node(v).rank,\n      w = e.w,\n      wRank = g.node(w).rank,\n      name = e.name,\n      edgeLabel = g.edge(e),\n      labelRank = edgeLabel.labelRank;\n  if (wRank === vRank + 1) return;\n  g.removeEdge(e);\n  var dummy, attrs, i;\n\n  for (i = 0, ++vRank; vRank < wRank; ++i, ++vRank) {\n    edgeLabel.points = [];\n    attrs = {\n      width: 0,\n      height: 0,\n      edgeLabel: edgeLabel,\n      edgeObj: e,\n      rank: vRank\n    };\n    dummy = util.addDummyNode(g, \"edge\", attrs, \"_d\");\n\n    if (vRank === labelRank) {\n      attrs.width = edgeLabel.width;\n      attrs.height = edgeLabel.height;\n      attrs.dummy = \"edge-label\";\n      attrs.labelpos = edgeLabel.labelpos;\n    }\n\n    g.setEdge(v, dummy, {\n      weight: edgeLabel.weight\n    }, name);\n\n    if (i === 0) {\n      g.graph().dummyChains.push(dummy);\n    }\n\n    v = dummy;\n  }\n\n  g.setEdge(v, w, {\n    weight: edgeLabel.weight\n  }, name);\n}\n\nfunction undo(g) {\n  _.forEach(g.graph().dummyChains, function (v) {\n    var node = g.node(v),\n        origLabel = node.edgeLabel,\n        w;\n    g.setEdge(node.edgeObj, origLabel);\n\n    while (node.dummy) {\n      w = g.successors(v)[0];\n      g.removeNode(v);\n      origLabel.points.push({\n        x: node.x,\n        y: node.y\n      });\n\n      if (node.dummy === \"edge-label\") {\n        origLabel.x = node.x;\n        origLabel.y = node.y;\n        origLabel.width = node.width;\n        origLabel.height = node.height;\n      }\n\n      v = w;\n      node = g.node(v);\n    }\n  });\n}","\"use strict\";\n\nvar rankUtil = require(\"./util\"),\n    longestPath = rankUtil.longestPath,\n    feasibleTree = require(\"./feasible-tree\"),\n    networkSimplex = require(\"./network-simplex\");\n\nmodule.exports = rank;\n/*\n * Assigns a rank to each node in the input graph that respects the \"minlen\"\n * constraint specified on edges between nodes.\n *\n * This basic structure is derived from Gansner, et al., \"A Technique for\n * Drawing Directed Graphs.\"\n *\n * Pre-conditions:\n *\n *    1. Graph must be a connected DAG\n *    2. Graph nodes must be objects\n *    3. Graph edges must have \"weight\" and \"minlen\" attributes\n *\n * Post-conditions:\n *\n *    1. Graph nodes will have a \"rank\" attribute based on the results of the\n *       algorithm. Ranks can start at any index (including negative), we'll\n *       fix them up later.\n */\n\nfunction rank(g) {\n  switch (g.graph().ranker) {\n    case \"network-simplex\":\n      networkSimplexRanker(g);\n      break;\n\n    case \"tight-tree\":\n      tightTreeRanker(g);\n      break;\n\n    case \"longest-path\":\n      longestPathRanker(g);\n      break;\n\n    default:\n      networkSimplexRanker(g);\n  }\n} // A fast and simple ranker, but results are far from optimal.\n\n\nvar longestPathRanker = longestPath;\n\nfunction tightTreeRanker(g) {\n  longestPath(g);\n  feasibleTree(g);\n}\n\nfunction networkSimplexRanker(g) {\n  networkSimplex(g);\n}","\"use strict\";\n\nvar _ = require(\"../lodash\"),\n    feasibleTree = require(\"./feasible-tree\"),\n    slack = require(\"./util\").slack,\n    initRank = require(\"./util\").longestPath,\n    preorder = require(\"../graphlib\").alg.preorder,\n    postorder = require(\"../graphlib\").alg.postorder,\n    simplify = require(\"../util\").simplify;\n\nmodule.exports = networkSimplex; // Expose some internals for testing purposes\n\nnetworkSimplex.initLowLimValues = initLowLimValues;\nnetworkSimplex.initCutValues = initCutValues;\nnetworkSimplex.calcCutValue = calcCutValue;\nnetworkSimplex.leaveEdge = leaveEdge;\nnetworkSimplex.enterEdge = enterEdge;\nnetworkSimplex.exchangeEdges = exchangeEdges;\n/*\n * The network simplex algorithm assigns ranks to each node in the input graph\n * and iteratively improves the ranking to reduce the length of edges.\n *\n * Preconditions:\n *\n *    1. The input graph must be a DAG.\n *    2. All nodes in the graph must have an object value.\n *    3. All edges in the graph must have \"minlen\" and \"weight\" attributes.\n *\n * Postconditions:\n *\n *    1. All nodes in the graph will have an assigned \"rank\" attribute that has\n *       been optimized by the network simplex algorithm. Ranks start at 0.\n *\n *\n * A rough sketch of the algorithm is as follows:\n *\n *    1. Assign initial ranks to each node. We use the longest path algorithm,\n *       which assigns ranks to the lowest position possible. In general this\n *       leads to very wide bottom ranks and unnecessarily long edges.\n *    2. Construct a feasible tight tree. A tight tree is one such that all\n *       edges in the tree have no slack (difference between length of edge\n *       and minlen for the edge). This by itself greatly improves the assigned\n *       rankings by shorting edges.\n *    3. Iteratively find edges that have negative cut values. Generally a\n *       negative cut value indicates that the edge could be removed and a new\n *       tree edge could be added to produce a more compact graph.\n *\n * Much of the algorithms here are derived from Gansner, et al., \"A Technique\n * for Drawing Directed Graphs.\" The structure of the file roughly follows the\n * structure of the overall algorithm.\n */\n\nfunction networkSimplex(g) {\n  g = simplify(g);\n  initRank(g);\n  var t = feasibleTree(g);\n  initLowLimValues(t);\n  initCutValues(t, g);\n  var e, f;\n\n  while (e = leaveEdge(t)) {\n    f = enterEdge(t, g, e);\n    exchangeEdges(t, g, e, f);\n  }\n}\n/*\n * Initializes cut values for all edges in the tree.\n */\n\n\nfunction initCutValues(t, g) {\n  var vs = postorder(t, t.nodes());\n  vs = vs.slice(0, vs.length - 1);\n\n  _.forEach(vs, function (v) {\n    assignCutValue(t, g, v);\n  });\n}\n\nfunction assignCutValue(t, g, child) {\n  var childLab = t.node(child),\n      parent = childLab.parent;\n  t.edge(child, parent).cutvalue = calcCutValue(t, g, child);\n}\n/*\n * Given the tight tree, its graph, and a child in the graph calculate and\n * return the cut value for the edge between the child and its parent.\n */\n\n\nfunction calcCutValue(t, g, child) {\n  var childLab = t.node(child),\n      parent = childLab.parent,\n      // True if the child is on the tail end of the edge in the directed graph\n  childIsTail = true,\n      // The graph's view of the tree edge we're inspecting\n  graphEdge = g.edge(child, parent),\n      // The accumulated cut value for the edge between this node and its parent\n  cutValue = 0;\n\n  if (!graphEdge) {\n    childIsTail = false;\n    graphEdge = g.edge(parent, child);\n  }\n\n  cutValue = graphEdge.weight;\n\n  _.forEach(g.nodeEdges(child), function (e) {\n    var isOutEdge = e.v === child,\n        other = isOutEdge ? e.w : e.v;\n\n    if (other !== parent) {\n      var pointsToHead = isOutEdge === childIsTail,\n          otherWeight = g.edge(e).weight;\n      cutValue += pointsToHead ? otherWeight : -otherWeight;\n\n      if (isTreeEdge(t, child, other)) {\n        var otherCutValue = t.edge(child, other).cutvalue;\n        cutValue += pointsToHead ? -otherCutValue : otherCutValue;\n      }\n    }\n  });\n\n  return cutValue;\n}\n\nfunction initLowLimValues(tree, root) {\n  if (arguments.length < 2) {\n    root = tree.nodes()[0];\n  }\n\n  dfsAssignLowLim(tree, {}, 1, root);\n}\n\nfunction dfsAssignLowLim(tree, visited, nextLim, v, parent) {\n  var low = nextLim,\n      label = tree.node(v);\n  visited[v] = true;\n\n  _.forEach(tree.neighbors(v), function (w) {\n    if (!_.has(visited, w)) {\n      nextLim = dfsAssignLowLim(tree, visited, nextLim, w, v);\n    }\n  });\n\n  label.low = low;\n  label.lim = nextLim++;\n\n  if (parent) {\n    label.parent = parent;\n  } else {\n    // TODO should be able to remove this when we incrementally update low lim\n    delete label.parent;\n  }\n\n  return nextLim;\n}\n\nfunction leaveEdge(tree) {\n  return _.find(tree.edges(), function (e) {\n    return tree.edge(e).cutvalue < 0;\n  });\n}\n\nfunction enterEdge(t, g, edge) {\n  var v = edge.v,\n      w = edge.w; // For the rest of this function we assume that v is the tail and w is the\n  // head, so if we don't have this edge in the graph we should flip it to\n  // match the correct orientation.\n\n  if (!g.hasEdge(v, w)) {\n    v = edge.w;\n    w = edge.v;\n  }\n\n  var vLabel = t.node(v),\n      wLabel = t.node(w),\n      tailLabel = vLabel,\n      flip = false; // If the root is in the tail of the edge then we need to flip the logic that\n  // checks for the head and tail nodes in the candidates function below.\n\n  if (vLabel.lim > wLabel.lim) {\n    tailLabel = wLabel;\n    flip = true;\n  }\n\n  var candidates = _.filter(g.edges(), function (edge) {\n    return flip === isDescendant(t, t.node(edge.v), tailLabel) && flip !== isDescendant(t, t.node(edge.w), tailLabel);\n  });\n\n  return _.minBy(candidates, function (edge) {\n    return slack(g, edge);\n  });\n}\n\nfunction exchangeEdges(t, g, e, f) {\n  var v = e.v,\n      w = e.w;\n  t.removeEdge(v, w);\n  t.setEdge(f.v, f.w, {});\n  initLowLimValues(t);\n  initCutValues(t, g);\n  updateRanks(t, g);\n}\n\nfunction updateRanks(t, g) {\n  var root = _.find(t.nodes(), function (v) {\n    return !g.node(v).parent;\n  }),\n      vs = preorder(t, root);\n\n  vs = vs.slice(1);\n\n  _.forEach(vs, function (v) {\n    var parent = t.node(v).parent,\n        edge = g.edge(v, parent),\n        flipped = false;\n\n    if (!edge) {\n      edge = g.edge(parent, v);\n      flipped = true;\n    }\n\n    g.node(v).rank = g.node(parent).rank + (flipped ? edge.minlen : -edge.minlen);\n  });\n}\n/*\n * Returns true if the edge is in the tree.\n */\n\n\nfunction isTreeEdge(tree, u, v) {\n  return tree.hasEdge(u, v);\n}\n/*\n * Returns true if the specified node is descendant of the root node per the\n * assigned low and lim attributes in the tree.\n */\n\n\nfunction isDescendant(tree, vLabel, rootLabel) {\n  return rootLabel.low <= vLabel.lim && vLabel.lim <= rootLabel.lim;\n}","var _ = require(\"./lodash\");\n\nmodule.exports = parentDummyChains;\n\nfunction parentDummyChains(g) {\n  var postorderNums = postorder(g);\n\n  _.forEach(g.graph().dummyChains, function (v) {\n    var node = g.node(v),\n        edgeObj = node.edgeObj,\n        pathData = findPath(g, postorderNums, edgeObj.v, edgeObj.w),\n        path = pathData.path,\n        lca = pathData.lca,\n        pathIdx = 0,\n        pathV = path[pathIdx],\n        ascending = true;\n\n    while (v !== edgeObj.w) {\n      node = g.node(v);\n\n      if (ascending) {\n        while ((pathV = path[pathIdx]) !== lca && g.node(pathV).maxRank < node.rank) {\n          pathIdx++;\n        }\n\n        if (pathV === lca) {\n          ascending = false;\n        }\n      }\n\n      if (!ascending) {\n        while (pathIdx < path.length - 1 && g.node(pathV = path[pathIdx + 1]).minRank <= node.rank) {\n          pathIdx++;\n        }\n\n        pathV = path[pathIdx];\n      }\n\n      g.setParent(v, pathV);\n      v = g.successors(v)[0];\n    }\n  });\n} // Find a path from v to w through the lowest common ancestor (LCA). Return the\n// full path and the LCA.\n\n\nfunction findPath(g, postorderNums, v, w) {\n  var vPath = [],\n      wPath = [],\n      low = Math.min(postorderNums[v].low, postorderNums[w].low),\n      lim = Math.max(postorderNums[v].lim, postorderNums[w].lim),\n      parent,\n      lca; // Traverse up from v to find the LCA\n\n  parent = v;\n\n  do {\n    parent = g.parent(parent);\n    vPath.push(parent);\n  } while (parent && (postorderNums[parent].low > low || lim > postorderNums[parent].lim));\n\n  lca = parent; // Traverse from w to LCA\n\n  parent = w;\n\n  while ((parent = g.parent(parent)) !== lca) {\n    wPath.push(parent);\n  }\n\n  return {\n    path: vPath.concat(wPath.reverse()),\n    lca: lca\n  };\n}\n\nfunction postorder(g) {\n  var result = {},\n      lim = 0;\n\n  function dfs(v) {\n    var low = lim;\n\n    _.forEach(g.children(v), dfs);\n\n    result[v] = {\n      low: low,\n      lim: lim++\n    };\n  }\n\n  _.forEach(g.children(), dfs);\n\n  return result;\n}","var _ = require(\"./lodash\"),\n    util = require(\"./util\");\n\nmodule.exports = {\n  run: run,\n  cleanup: cleanup\n};\n/*\n * A nesting graph creates dummy nodes for the tops and bottoms of subgraphs,\n * adds appropriate edges to ensure that all cluster nodes are placed between\n * these boundries, and ensures that the graph is connected.\n *\n * In addition we ensure, through the use of the minlen property, that nodes\n * and subgraph border nodes to not end up on the same rank.\n *\n * Preconditions:\n *\n *    1. Input graph is a DAG\n *    2. Nodes in the input graph has a minlen attribute\n *\n * Postconditions:\n *\n *    1. Input graph is connected.\n *    2. Dummy nodes are added for the tops and bottoms of subgraphs.\n *    3. The minlen attribute for nodes is adjusted to ensure nodes do not\n *       get placed on the same rank as subgraph border nodes.\n *\n * The nesting graph idea comes from Sander, \"Layout of Compound Directed\n * Graphs.\"\n */\n\nfunction run(g) {\n  var root = util.addDummyNode(g, \"root\", {}, \"_root\");\n  var depths = treeDepths(g);\n  var height = _.max(_.values(depths)) - 1; // Note: depths is an Object not an array\n\n  var nodeSep = 2 * height + 1;\n  g.graph().nestingRoot = root; // Multiply minlen by nodeSep to align nodes on non-border ranks.\n\n  _.forEach(g.edges(), function (e) {\n    g.edge(e).minlen *= nodeSep;\n  }); // Calculate a weight that is sufficient to keep subgraphs vertically compact\n\n\n  var weight = sumWeights(g) + 1; // Create border nodes and link them up\n\n  _.forEach(g.children(), function (child) {\n    dfs(g, root, nodeSep, weight, height, depths, child);\n  }); // Save the multiplier for node layers for later removal of empty border\n  // layers.\n\n\n  g.graph().nodeRankFactor = nodeSep;\n}\n\nfunction dfs(g, root, nodeSep, weight, height, depths, v) {\n  var children = g.children(v);\n\n  if (!children.length) {\n    if (v !== root) {\n      g.setEdge(root, v, {\n        weight: 0,\n        minlen: nodeSep\n      });\n    }\n\n    return;\n  }\n\n  var top = util.addBorderNode(g, \"_bt\"),\n      bottom = util.addBorderNode(g, \"_bb\"),\n      label = g.node(v);\n  g.setParent(top, v);\n  label.borderTop = top;\n  g.setParent(bottom, v);\n  label.borderBottom = bottom;\n\n  _.forEach(children, function (child) {\n    dfs(g, root, nodeSep, weight, height, depths, child);\n    var childNode = g.node(child),\n        childTop = childNode.borderTop ? childNode.borderTop : child,\n        childBottom = childNode.borderBottom ? childNode.borderBottom : child,\n        thisWeight = childNode.borderTop ? weight : 2 * weight,\n        minlen = childTop !== childBottom ? 1 : height - depths[v] + 1;\n    g.setEdge(top, childTop, {\n      weight: thisWeight,\n      minlen: minlen,\n      nestingEdge: true\n    });\n    g.setEdge(childBottom, bottom, {\n      weight: thisWeight,\n      minlen: minlen,\n      nestingEdge: true\n    });\n  });\n\n  if (!g.parent(v)) {\n    g.setEdge(root, top, {\n      weight: 0,\n      minlen: height + depths[v]\n    });\n  }\n}\n\nfunction treeDepths(g) {\n  var depths = {};\n\n  function dfs(v, depth) {\n    var children = g.children(v);\n\n    if (children && children.length) {\n      _.forEach(children, function (child) {\n        dfs(child, depth + 1);\n      });\n    }\n\n    depths[v] = depth;\n  }\n\n  _.forEach(g.children(), function (v) {\n    dfs(v, 1);\n  });\n\n  return depths;\n}\n\nfunction sumWeights(g) {\n  return _.reduce(g.edges(), function (acc, e) {\n    return acc + g.edge(e).weight;\n  }, 0);\n}\n\nfunction cleanup(g) {\n  var graphLabel = g.graph();\n  g.removeNode(graphLabel.nestingRoot);\n  delete graphLabel.nestingRoot;\n\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n\n    if (edge.nestingEdge) {\n      g.removeEdge(e);\n    }\n  });\n}","var _ = require(\"./lodash\"),\n    util = require(\"./util\");\n\nmodule.exports = addBorderSegments;\n\nfunction addBorderSegments(g) {\n  function dfs(v) {\n    var children = g.children(v),\n        node = g.node(v);\n\n    if (children.length) {\n      _.forEach(children, dfs);\n    }\n\n    if (_.has(node, \"minRank\")) {\n      node.borderLeft = [];\n      node.borderRight = [];\n\n      for (var rank = node.minRank, maxRank = node.maxRank + 1; rank < maxRank; ++rank) {\n        addBorderNode(g, \"borderLeft\", \"_bl\", v, node, rank);\n        addBorderNode(g, \"borderRight\", \"_br\", v, node, rank);\n      }\n    }\n  }\n\n  _.forEach(g.children(), dfs);\n}\n\nfunction addBorderNode(g, prop, prefix, sg, sgNode, rank) {\n  var label = {\n    width: 0,\n    height: 0,\n    rank: rank,\n    borderType: prop\n  },\n      prev = sgNode[prop][rank - 1],\n      curr = util.addDummyNode(g, \"border\", label, prefix);\n  sgNode[prop][rank] = curr;\n  g.setParent(curr, sg);\n\n  if (prev) {\n    g.setEdge(prev, curr, {\n      weight: 1\n    });\n  }\n}","\"use strict\";\n\nvar _ = require(\"./lodash\");\n\nmodule.exports = {\n  adjust: adjust,\n  undo: undo\n};\n\nfunction adjust(g) {\n  var rankDir = g.graph().rankdir.toLowerCase();\n\n  if (rankDir === \"lr\" || rankDir === \"rl\") {\n    swapWidthHeight(g);\n  }\n}\n\nfunction undo(g) {\n  var rankDir = g.graph().rankdir.toLowerCase();\n\n  if (rankDir === \"bt\" || rankDir === \"rl\") {\n    reverseY(g);\n  }\n\n  if (rankDir === \"lr\" || rankDir === \"rl\") {\n    swapXY(g);\n    swapWidthHeight(g);\n  }\n}\n\nfunction swapWidthHeight(g) {\n  _.forEach(g.nodes(), function (v) {\n    swapWidthHeightOne(g.node(v));\n  });\n\n  _.forEach(g.edges(), function (e) {\n    swapWidthHeightOne(g.edge(e));\n  });\n}\n\nfunction swapWidthHeightOne(attrs) {\n  var w = attrs.width;\n  attrs.width = attrs.height;\n  attrs.height = w;\n}\n\nfunction reverseY(g) {\n  _.forEach(g.nodes(), function (v) {\n    reverseYOne(g.node(v));\n  });\n\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n\n    _.forEach(edge.points, reverseYOne);\n\n    if (_.has(edge, \"y\")) {\n      reverseYOne(edge);\n    }\n  });\n}\n\nfunction reverseYOne(attrs) {\n  attrs.y = -attrs.y;\n}\n\nfunction swapXY(g) {\n  _.forEach(g.nodes(), function (v) {\n    swapXYOne(g.node(v));\n  });\n\n  _.forEach(g.edges(), function (e) {\n    var edge = g.edge(e);\n\n    _.forEach(edge.points, swapXYOne);\n\n    if (_.has(edge, \"x\")) {\n      swapXYOne(edge);\n    }\n  });\n}\n\nfunction swapXYOne(attrs) {\n  var x = attrs.x;\n  attrs.x = attrs.y;\n  attrs.y = x;\n}","\"use strict\";\n\nvar _ = require(\"../lodash\"),\n    initOrder = require(\"./init-order\"),\n    crossCount = require(\"./cross-count\"),\n    sortSubgraph = require(\"./sort-subgraph\"),\n    buildLayerGraph = require(\"./build-layer-graph\"),\n    addSubgraphConstraints = require(\"./add-subgraph-constraints\"),\n    Graph = require(\"../graphlib\").Graph,\n    util = require(\"../util\");\n\nmodule.exports = order;\n/*\n * Applies heuristics to minimize edge crossings in the graph and sets the best\n * order solution as an order attribute on each node.\n *\n * Pre-conditions:\n *\n *    1. Graph must be DAG\n *    2. Graph nodes must be objects with a \"rank\" attribute\n *    3. Graph edges must have the \"weight\" attribute\n *\n * Post-conditions:\n *\n *    1. Graph nodes will have an \"order\" attribute based on the results of the\n *       algorithm.\n */\n\nfunction order(g) {\n  var maxRank = util.maxRank(g),\n      downLayerGraphs = buildLayerGraphs(g, _.range(1, maxRank + 1), \"inEdges\"),\n      upLayerGraphs = buildLayerGraphs(g, _.range(maxRank - 1, -1, -1), \"outEdges\");\n  var layering = initOrder(g);\n  assignOrder(g, layering);\n  var bestCC = Number.POSITIVE_INFINITY,\n      best;\n\n  for (var i = 0, lastBest = 0; lastBest < 4; ++i, ++lastBest) {\n    sweepLayerGraphs(i % 2 ? downLayerGraphs : upLayerGraphs, i % 4 >= 2);\n    layering = util.buildLayerMatrix(g);\n    var cc = crossCount(g, layering);\n\n    if (cc < bestCC) {\n      lastBest = 0;\n      best = _.cloneDeep(layering);\n      bestCC = cc;\n    }\n  }\n\n  assignOrder(g, best);\n}\n\nfunction buildLayerGraphs(g, ranks, relationship) {\n  return _.map(ranks, function (rank) {\n    return buildLayerGraph(g, rank, relationship);\n  });\n}\n\nfunction sweepLayerGraphs(layerGraphs, biasRight) {\n  var cg = new Graph();\n\n  _.forEach(layerGraphs, function (lg) {\n    var root = lg.graph().root;\n    var sorted = sortSubgraph(lg, root, cg, biasRight);\n\n    _.forEach(sorted.vs, function (v, i) {\n      lg.node(v).order = i;\n    });\n\n    addSubgraphConstraints(lg, cg, sorted.vs);\n  });\n}\n\nfunction assignOrder(g, layering) {\n  _.forEach(layering, function (layer) {\n    _.forEach(layer, function (v, i) {\n      g.node(v).order = i;\n    });\n  });\n}","\"use strict\";\n\nvar _ = require(\"../lodash\");\n\nmodule.exports = initOrder;\n/*\n * Assigns an initial order value for each node by performing a DFS search\n * starting from nodes in the first rank. Nodes are assigned an order in their\n * rank as they are first visited.\n *\n * This approach comes from Gansner, et al., \"A Technique for Drawing Directed\n * Graphs.\"\n *\n * Returns a layering matrix with an array per layer and each layer sorted by\n * the order of its nodes.\n */\n\nfunction initOrder(g) {\n  var visited = {},\n      simpleNodes = _.filter(g.nodes(), function (v) {\n    return !g.children(v).length;\n  }),\n      maxRank = _.max(_.map(simpleNodes, function (v) {\n    return g.node(v).rank;\n  })),\n      layers = _.map(_.range(maxRank + 1), function () {\n    return [];\n  });\n\n  function dfs(v) {\n    if (_.has(visited, v)) return;\n    visited[v] = true;\n    var node = g.node(v);\n    layers[node.rank].push(v);\n\n    _.forEach(g.successors(v), dfs);\n  }\n\n  var orderedVs = _.sortBy(simpleNodes, function (v) {\n    return g.node(v).rank;\n  });\n\n  _.forEach(orderedVs, dfs);\n\n  return layers;\n}","\"use strict\";\n\nvar _ = require(\"../lodash\");\n\nmodule.exports = crossCount;\n/*\n * A function that takes a layering (an array of layers, each with an array of\n * ordererd nodes) and a graph and returns a weighted crossing count.\n *\n * Pre-conditions:\n *\n *    1. Input graph must be simple (not a multigraph), directed, and include\n *       only simple edges.\n *    2. Edges in the input graph must have assigned weights.\n *\n * Post-conditions:\n *\n *    1. The graph and layering matrix are left unchanged.\n *\n * This algorithm is derived from Barth, et al., \"Bilayer Cross Counting.\"\n */\n\nfunction crossCount(g, layering) {\n  var cc = 0;\n\n  for (var i = 1; i < layering.length; ++i) {\n    cc += twoLayerCrossCount(g, layering[i - 1], layering[i]);\n  }\n\n  return cc;\n}\n\nfunction twoLayerCrossCount(g, northLayer, southLayer) {\n  // Sort all of the edges between the north and south layers by their position\n  // in the north layer and then the south. Map these edges to the position of\n  // their head in the south layer.\n  var southPos = _.zipObject(southLayer, _.map(southLayer, function (v, i) {\n    return i;\n  }));\n\n  var southEntries = _.flatten(_.map(northLayer, function (v) {\n    return _.sortBy(_.map(g.outEdges(v), function (e) {\n      return {\n        pos: southPos[e.w],\n        weight: g.edge(e).weight\n      };\n    }), \"pos\");\n  }), true); // Build the accumulator tree\n\n\n  var firstIndex = 1;\n\n  while (firstIndex < southLayer.length) {\n    firstIndex <<= 1;\n  }\n\n  var treeSize = 2 * firstIndex - 1;\n  firstIndex -= 1;\n\n  var tree = _.map(new Array(treeSize), function () {\n    return 0;\n  }); // Calculate the weighted crossings\n\n\n  var cc = 0;\n\n  _.forEach(southEntries.forEach(function (entry) {\n    var index = entry.pos + firstIndex;\n    tree[index] += entry.weight;\n    var weightSum = 0;\n\n    while (index > 0) {\n      if (index % 2) {\n        weightSum += tree[index + 1];\n      }\n\n      index = index - 1 >> 1;\n      tree[index] += entry.weight;\n    }\n\n    cc += entry.weight * weightSum;\n  }));\n\n  return cc;\n}","var _ = require(\"../lodash\"),\n    barycenter = require(\"./barycenter\"),\n    resolveConflicts = require(\"./resolve-conflicts\"),\n    sort = require(\"./sort\");\n\nmodule.exports = sortSubgraph;\n\nfunction sortSubgraph(g, v, cg, biasRight) {\n  var movable = g.children(v),\n      node = g.node(v),\n      bl = node ? node.borderLeft : undefined,\n      br = node ? node.borderRight : undefined,\n      subgraphs = {};\n\n  if (bl) {\n    movable = _.filter(movable, function (w) {\n      return w !== bl && w !== br;\n    });\n  }\n\n  var barycenters = barycenter(g, movable);\n\n  _.forEach(barycenters, function (entry) {\n    if (g.children(entry.v).length) {\n      var subgraphResult = sortSubgraph(g, entry.v, cg, biasRight);\n      subgraphs[entry.v] = subgraphResult;\n\n      if (_.has(subgraphResult, \"barycenter\")) {\n        mergeBarycenters(entry, subgraphResult);\n      }\n    }\n  });\n\n  var entries = resolveConflicts(barycenters, cg);\n  expandSubgraphs(entries, subgraphs);\n  var result = sort(entries, biasRight);\n\n  if (bl) {\n    result.vs = _.flatten([bl, result.vs, br], true);\n\n    if (g.predecessors(bl).length) {\n      var blPred = g.node(g.predecessors(bl)[0]),\n          brPred = g.node(g.predecessors(br)[0]);\n\n      if (!_.has(result, \"barycenter\")) {\n        result.barycenter = 0;\n        result.weight = 0;\n      }\n\n      result.barycenter = (result.barycenter * result.weight + blPred.order + brPred.order) / (result.weight + 2);\n      result.weight += 2;\n    }\n  }\n\n  return result;\n}\n\nfunction expandSubgraphs(entries, subgraphs) {\n  _.forEach(entries, function (entry) {\n    entry.vs = _.flatten(entry.vs.map(function (v) {\n      if (subgraphs[v]) {\n        return subgraphs[v].vs;\n      }\n\n      return v;\n    }), true);\n  });\n}\n\nfunction mergeBarycenters(target, other) {\n  if (!_.isUndefined(target.barycenter)) {\n    target.barycenter = (target.barycenter * target.weight + other.barycenter * other.weight) / (target.weight + other.weight);\n    target.weight += other.weight;\n  } else {\n    target.barycenter = other.barycenter;\n    target.weight = other.weight;\n  }\n}","var _ = require(\"../lodash\");\n\nmodule.exports = barycenter;\n\nfunction barycenter(g, movable) {\n  return _.map(movable, function (v) {\n    var inV = g.inEdges(v);\n\n    if (!inV.length) {\n      return {\n        v: v\n      };\n    } else {\n      var result = _.reduce(inV, function (acc, e) {\n        var edge = g.edge(e),\n            nodeU = g.node(e.v);\n        return {\n          sum: acc.sum + edge.weight * nodeU.order,\n          weight: acc.weight + edge.weight\n        };\n      }, {\n        sum: 0,\n        weight: 0\n      });\n\n      return {\n        v: v,\n        barycenter: result.sum / result.weight,\n        weight: result.weight\n      };\n    }\n  });\n}","\"use strict\";\n\nvar _ = require(\"../lodash\");\n\nmodule.exports = resolveConflicts;\n/*\n * Given a list of entries of the form {v, barycenter, weight} and a\n * constraint graph this function will resolve any conflicts between the\n * constraint graph and the barycenters for the entries. If the barycenters for\n * an entry would violate a constraint in the constraint graph then we coalesce\n * the nodes in the conflict into a new node that respects the contraint and\n * aggregates barycenter and weight information.\n *\n * This implementation is based on the description in Forster, \"A Fast and\n * Simple Hueristic for Constrained Two-Level Crossing Reduction,\" thought it\n * differs in some specific details.\n *\n * Pre-conditions:\n *\n *    1. Each entry has the form {v, barycenter, weight}, or if the node has\n *       no barycenter, then {v}.\n *\n * Returns:\n *\n *    A new list of entries of the form {vs, i, barycenter, weight}. The list\n *    `vs` may either be a singleton or it may be an aggregation of nodes\n *    ordered such that they do not violate constraints from the constraint\n *    graph. The property `i` is the lowest original index of any of the\n *    elements in `vs`.\n */\n\nfunction resolveConflicts(entries, cg) {\n  var mappedEntries = {};\n\n  _.forEach(entries, function (entry, i) {\n    var tmp = mappedEntries[entry.v] = {\n      indegree: 0,\n      \"in\": [],\n      out: [],\n      vs: [entry.v],\n      i: i\n    };\n\n    if (!_.isUndefined(entry.barycenter)) {\n      tmp.barycenter = entry.barycenter;\n      tmp.weight = entry.weight;\n    }\n  });\n\n  _.forEach(cg.edges(), function (e) {\n    var entryV = mappedEntries[e.v],\n        entryW = mappedEntries[e.w];\n\n    if (!_.isUndefined(entryV) && !_.isUndefined(entryW)) {\n      entryW.indegree++;\n      entryV.out.push(mappedEntries[e.w]);\n    }\n  });\n\n  var sourceSet = _.filter(mappedEntries, function (entry) {\n    return !entry.indegree;\n  });\n\n  return doResolveConflicts(sourceSet);\n}\n\nfunction doResolveConflicts(sourceSet) {\n  var entries = [];\n\n  function handleIn(vEntry) {\n    return function (uEntry) {\n      if (uEntry.merged) {\n        return;\n      }\n\n      if (_.isUndefined(uEntry.barycenter) || _.isUndefined(vEntry.barycenter) || uEntry.barycenter >= vEntry.barycenter) {\n        mergeEntries(vEntry, uEntry);\n      }\n    };\n  }\n\n  function handleOut(vEntry) {\n    return function (wEntry) {\n      wEntry[\"in\"].push(vEntry);\n\n      if (--wEntry.indegree === 0) {\n        sourceSet.push(wEntry);\n      }\n    };\n  }\n\n  while (sourceSet.length) {\n    var entry = sourceSet.pop();\n    entries.push(entry);\n\n    _.forEach(entry[\"in\"].reverse(), handleIn(entry));\n\n    _.forEach(entry.out, handleOut(entry));\n  }\n\n  return _.map(_.filter(entries, function (entry) {\n    return !entry.merged;\n  }), function (entry) {\n    return _.pick(entry, [\"vs\", \"i\", \"barycenter\", \"weight\"]);\n  });\n}\n\nfunction mergeEntries(target, source) {\n  var sum = 0,\n      weight = 0;\n\n  if (target.weight) {\n    sum += target.barycenter * target.weight;\n    weight += target.weight;\n  }\n\n  if (source.weight) {\n    sum += source.barycenter * source.weight;\n    weight += source.weight;\n  }\n\n  target.vs = source.vs.concat(target.vs);\n  target.barycenter = sum / weight;\n  target.weight = weight;\n  target.i = Math.min(source.i, target.i);\n  source.merged = true;\n}","var _ = require(\"../lodash\"),\n    util = require(\"../util\");\n\nmodule.exports = sort;\n\nfunction sort(entries, biasRight) {\n  var parts = util.partition(entries, function (entry) {\n    return _.has(entry, \"barycenter\");\n  });\n\n  var sortable = parts.lhs,\n      unsortable = _.sortBy(parts.rhs, function (entry) {\n    return -entry.i;\n  }),\n      vs = [],\n      sum = 0,\n      weight = 0,\n      vsIndex = 0;\n\n  sortable.sort(compareWithBias(!!biasRight));\n  vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n\n  _.forEach(sortable, function (entry) {\n    vsIndex += entry.vs.length;\n    vs.push(entry.vs);\n    sum += entry.barycenter * entry.weight;\n    weight += entry.weight;\n    vsIndex = consumeUnsortable(vs, unsortable, vsIndex);\n  });\n\n  var result = {\n    vs: _.flatten(vs, true)\n  };\n\n  if (weight) {\n    result.barycenter = sum / weight;\n    result.weight = weight;\n  }\n\n  return result;\n}\n\nfunction consumeUnsortable(vs, unsortable, index) {\n  var last;\n\n  while (unsortable.length && (last = _.last(unsortable)).i <= index) {\n    unsortable.pop();\n    vs.push(last.vs);\n    index++;\n  }\n\n  return index;\n}\n\nfunction compareWithBias(bias) {\n  return function (entryV, entryW) {\n    if (entryV.barycenter < entryW.barycenter) {\n      return -1;\n    } else if (entryV.barycenter > entryW.barycenter) {\n      return 1;\n    }\n\n    return !bias ? entryV.i - entryW.i : entryW.i - entryV.i;\n  };\n}","var _ = require(\"../lodash\"),\n    Graph = require(\"../graphlib\").Graph;\n\nmodule.exports = buildLayerGraph;\n/*\n * Constructs a graph that can be used to sort a layer of nodes. The graph will\n * contain all base and subgraph nodes from the request layer in their original\n * hierarchy and any edges that are incident on these nodes and are of the type\n * requested by the \"relationship\" parameter.\n *\n * Nodes from the requested rank that do not have parents are assigned a root\n * node in the output graph, which is set in the root graph attribute. This\n * makes it easy to walk the hierarchy of movable nodes during ordering.\n *\n * Pre-conditions:\n *\n *    1. Input graph is a DAG\n *    2. Base nodes in the input graph have a rank attribute\n *    3. Subgraph nodes in the input graph has minRank and maxRank attributes\n *    4. Edges have an assigned weight\n *\n * Post-conditions:\n *\n *    1. Output graph has all nodes in the movable rank with preserved\n *       hierarchy.\n *    2. Root nodes in the movable layer are made children of the node\n *       indicated by the root attribute of the graph.\n *    3. Non-movable nodes incident on movable nodes, selected by the\n *       relationship parameter, are included in the graph (without hierarchy).\n *    4. Edges incident on movable nodes, selected by the relationship\n *       parameter, are added to the output graph.\n *    5. The weights for copied edges are aggregated as need, since the output\n *       graph is not a multi-graph.\n */\n\nfunction buildLayerGraph(g, rank, relationship) {\n  var root = createRootNode(g),\n      result = new Graph({\n    compound: true\n  }).setGraph({\n    root: root\n  }).setDefaultNodeLabel(function (v) {\n    return g.node(v);\n  });\n\n  _.forEach(g.nodes(), function (v) {\n    var node = g.node(v),\n        parent = g.parent(v);\n\n    if (node.rank === rank || node.minRank <= rank && rank <= node.maxRank) {\n      result.setNode(v);\n      result.setParent(v, parent || root); // This assumes we have only short edges!\n\n      _.forEach(g[relationship](v), function (e) {\n        var u = e.v === v ? e.w : e.v,\n            edge = result.edge(u, v),\n            weight = !_.isUndefined(edge) ? edge.weight : 0;\n        result.setEdge(u, v, {\n          weight: g.edge(e).weight + weight\n        });\n      });\n\n      if (_.has(node, \"minRank\")) {\n        result.setNode(v, {\n          borderLeft: node.borderLeft[rank],\n          borderRight: node.borderRight[rank]\n        });\n      }\n    }\n  });\n\n  return result;\n}\n\nfunction createRootNode(g) {\n  var v;\n\n  while (g.hasNode(v = _.uniqueId(\"_root\"))) {\n    ;\n  }\n\n  return v;\n}","var _ = require(\"../lodash\");\n\nmodule.exports = addSubgraphConstraints;\n\nfunction addSubgraphConstraints(g, cg, vs) {\n  var prev = {},\n      rootPrev;\n\n  _.forEach(vs, function (v) {\n    var child = g.parent(v),\n        parent,\n        prevChild;\n\n    while (child) {\n      parent = g.parent(child);\n\n      if (parent) {\n        prevChild = prev[parent];\n        prev[parent] = child;\n      } else {\n        prevChild = rootPrev;\n        rootPrev = child;\n      }\n\n      if (prevChild && prevChild !== child) {\n        cg.setEdge(prevChild, child);\n        return;\n      }\n\n      child = parent;\n    }\n  });\n  /*\n  function dfs(v) {\n    var children = v ? g.children(v) : g.children();\n    if (children.length) {\n      var min = Number.POSITIVE_INFINITY,\n          subgraphs = [];\n      _.each(children, function(child) {\n        var childMin = dfs(child);\n        if (g.children(child).length) {\n          subgraphs.push({ v: child, order: childMin });\n        }\n        min = Math.min(min, childMin);\n      });\n      _.reduce(_.sortBy(subgraphs, \"order\"), function(prev, curr) {\n        cg.setEdge(prev.v, curr.v);\n        return curr;\n      });\n      return min;\n    }\n    return g.node(v).order;\n  }\n  dfs(undefined);\n  */\n\n}","\"use strict\";\n\nvar _ = require(\"../lodash\"),\n    util = require(\"../util\"),\n    positionX = require(\"./bk\").positionX;\n\nmodule.exports = position;\n\nfunction position(g) {\n  g = util.asNonCompoundGraph(g);\n  positionY(g);\n\n  _.forEach(positionX(g), function (x, v) {\n    g.node(v).x = x;\n  });\n}\n\nfunction positionY(g) {\n  var layering = util.buildLayerMatrix(g),\n      rankSep = g.graph().ranksep,\n      prevY = 0;\n\n  _.forEach(layering, function (layer) {\n    var maxHeight = _.max(_.map(layer, function (v) {\n      return g.node(v).height;\n    }));\n\n    _.forEach(layer, function (v) {\n      g.node(v).y = prevY + maxHeight / 2;\n    });\n\n    prevY += maxHeight + rankSep;\n  });\n}","\"use strict\";\n\nvar _ = require(\"../lodash\"),\n    Graph = require(\"../graphlib\").Graph,\n    util = require(\"../util\");\n/*\n * This module provides coordinate assignment based on Brandes and Köpf, \"Fast\n * and Simple Horizontal Coordinate Assignment.\"\n */\n\n\nmodule.exports = {\n  positionX: positionX,\n  findType1Conflicts: findType1Conflicts,\n  findType2Conflicts: findType2Conflicts,\n  addConflict: addConflict,\n  hasConflict: hasConflict,\n  verticalAlignment: verticalAlignment,\n  horizontalCompaction: horizontalCompaction,\n  alignCoordinates: alignCoordinates,\n  findSmallestWidthAlignment: findSmallestWidthAlignment,\n  balance: balance\n};\n/*\n * Marks all edges in the graph with a type-1 conflict with the \"type1Conflict\"\n * property. A type-1 conflict is one where a non-inner segment crosses an\n * inner segment. An inner segment is an edge with both incident nodes marked\n * with the \"dummy\" property.\n *\n * This algorithm scans layer by layer, starting with the second, for type-1\n * conflicts between the current layer and the previous layer. For each layer\n * it scans the nodes from left to right until it reaches one that is incident\n * on an inner segment. It then scans predecessors to determine if they have\n * edges that cross that inner segment. At the end a final scan is done for all\n * nodes on the current rank to see if they cross the last visited inner\n * segment.\n *\n * This algorithm (safely) assumes that a dummy node will only be incident on a\n * single node in the layers being scanned.\n */\n\nfunction findType1Conflicts(g, layering) {\n  var conflicts = {};\n\n  function visitLayer(prevLayer, layer) {\n    var // last visited node in the previous layer that is incident on an inner\n    // segment.\n    k0 = 0,\n        // Tracks the last node in this layer scanned for crossings with a type-1\n    // segment.\n    scanPos = 0,\n        prevLayerLength = prevLayer.length,\n        lastNode = _.last(layer);\n\n    _.forEach(layer, function (v, i) {\n      var w = findOtherInnerSegmentNode(g, v),\n          k1 = w ? g.node(w).order : prevLayerLength;\n\n      if (w || v === lastNode) {\n        _.forEach(layer.slice(scanPos, i + 1), function (scanNode) {\n          _.forEach(g.predecessors(scanNode), function (u) {\n            var uLabel = g.node(u),\n                uPos = uLabel.order;\n\n            if ((uPos < k0 || k1 < uPos) && !(uLabel.dummy && g.node(scanNode).dummy)) {\n              addConflict(conflicts, u, scanNode);\n            }\n          });\n        });\n\n        scanPos = i + 1;\n        k0 = k1;\n      }\n    });\n\n    return layer;\n  }\n\n  _.reduce(layering, visitLayer);\n\n  return conflicts;\n}\n\nfunction findType2Conflicts(g, layering) {\n  var conflicts = {};\n\n  function scan(south, southPos, southEnd, prevNorthBorder, nextNorthBorder) {\n    var v;\n\n    _.forEach(_.range(southPos, southEnd), function (i) {\n      v = south[i];\n\n      if (g.node(v).dummy) {\n        _.forEach(g.predecessors(v), function (u) {\n          var uNode = g.node(u);\n\n          if (uNode.dummy && (uNode.order < prevNorthBorder || uNode.order > nextNorthBorder)) {\n            addConflict(conflicts, u, v);\n          }\n        });\n      }\n    });\n  }\n\n  function visitLayer(north, south) {\n    var prevNorthPos = -1,\n        nextNorthPos,\n        southPos = 0;\n\n    _.forEach(south, function (v, southLookahead) {\n      if (g.node(v).dummy === \"border\") {\n        var predecessors = g.predecessors(v);\n\n        if (predecessors.length) {\n          nextNorthPos = g.node(predecessors[0]).order;\n          scan(south, southPos, southLookahead, prevNorthPos, nextNorthPos);\n          southPos = southLookahead;\n          prevNorthPos = nextNorthPos;\n        }\n      }\n\n      scan(south, southPos, south.length, nextNorthPos, north.length);\n    });\n\n    return south;\n  }\n\n  _.reduce(layering, visitLayer);\n\n  return conflicts;\n}\n\nfunction findOtherInnerSegmentNode(g, v) {\n  if (g.node(v).dummy) {\n    return _.find(g.predecessors(v), function (u) {\n      return g.node(u).dummy;\n    });\n  }\n}\n\nfunction addConflict(conflicts, v, w) {\n  if (v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n\n  var conflictsV = conflicts[v];\n\n  if (!conflictsV) {\n    conflicts[v] = conflictsV = {};\n  }\n\n  conflictsV[w] = true;\n}\n\nfunction hasConflict(conflicts, v, w) {\n  if (v > w) {\n    var tmp = v;\n    v = w;\n    w = tmp;\n  }\n\n  return _.has(conflicts[v], w);\n}\n/*\n * Try to align nodes into vertical \"blocks\" where possible. This algorithm\n * attempts to align a node with one of its median neighbors. If the edge\n * connecting a neighbor is a type-1 conflict then we ignore that possibility.\n * If a previous node has already formed a block with a node after the node\n * we're trying to form a block with, we also ignore that possibility - our\n * blocks would be split in that scenario.\n */\n\n\nfunction verticalAlignment(g, layering, conflicts, neighborFn) {\n  var root = {},\n      align = {},\n      pos = {}; // We cache the position here based on the layering because the graph and\n  // layering may be out of sync. The layering matrix is manipulated to\n  // generate different extreme alignments.\n\n  _.forEach(layering, function (layer) {\n    _.forEach(layer, function (v, order) {\n      root[v] = v;\n      align[v] = v;\n      pos[v] = order;\n    });\n  });\n\n  _.forEach(layering, function (layer) {\n    var prevIdx = -1;\n\n    _.forEach(layer, function (v) {\n      var ws = neighborFn(v);\n\n      if (ws.length) {\n        ws = _.sortBy(ws, function (w) {\n          return pos[w];\n        });\n        var mp = (ws.length - 1) / 2;\n\n        for (var i = Math.floor(mp), il = Math.ceil(mp); i <= il; ++i) {\n          var w = ws[i];\n\n          if (align[v] === v && prevIdx < pos[w] && !hasConflict(conflicts, v, w)) {\n            align[w] = v;\n            align[v] = root[v] = root[w];\n            prevIdx = pos[w];\n          }\n        }\n      }\n    });\n  });\n\n  return {\n    root: root,\n    align: align\n  };\n}\n\nfunction horizontalCompaction(g, layering, root, align, reverseSep) {\n  // This portion of the algorithm differs from BK due to a number of problems.\n  // Instead of their algorithm we construct a new block graph and do two\n  // sweeps. The first sweep places blocks with the smallest possible\n  // coordinates. The second sweep removes unused space by moving blocks to the\n  // greatest coordinates without violating separation.\n  var xs = {},\n      blockG = buildBlockGraph(g, layering, root, reverseSep),\n      borderType = reverseSep ? \"borderLeft\" : \"borderRight\";\n\n  function iterate(setXsFunc, nextNodesFunc) {\n    var stack = blockG.nodes();\n    var elem = stack.pop();\n    var visited = {};\n\n    while (elem) {\n      if (visited[elem]) {\n        setXsFunc(elem);\n      } else {\n        visited[elem] = true;\n        stack.push(elem);\n        stack = stack.concat(nextNodesFunc(elem));\n      }\n\n      elem = stack.pop();\n    }\n  } // First pass, assign smallest coordinates\n\n\n  function pass1(elem) {\n    xs[elem] = blockG.inEdges(elem).reduce(function (acc, e) {\n      return Math.max(acc, xs[e.v] + blockG.edge(e));\n    }, 0);\n  } // Second pass, assign greatest coordinates\n\n\n  function pass2(elem) {\n    var min = blockG.outEdges(elem).reduce(function (acc, e) {\n      return Math.min(acc, xs[e.w] - blockG.edge(e));\n    }, Number.POSITIVE_INFINITY);\n    var node = g.node(elem);\n\n    if (min !== Number.POSITIVE_INFINITY && node.borderType !== borderType) {\n      xs[elem] = Math.max(xs[elem], min);\n    }\n  }\n\n  iterate(pass1, blockG.predecessors.bind(blockG));\n  iterate(pass2, blockG.successors.bind(blockG)); // Assign x coordinates to all nodes\n\n  _.forEach(align, function (v) {\n    xs[v] = xs[root[v]];\n  });\n\n  return xs;\n}\n\nfunction buildBlockGraph(g, layering, root, reverseSep) {\n  var blockGraph = new Graph(),\n      graphLabel = g.graph(),\n      sepFn = sep(graphLabel.nodesep, graphLabel.edgesep, reverseSep);\n\n  _.forEach(layering, function (layer) {\n    var u;\n\n    _.forEach(layer, function (v) {\n      var vRoot = root[v];\n      blockGraph.setNode(vRoot);\n\n      if (u) {\n        var uRoot = root[u],\n            prevMax = blockGraph.edge(uRoot, vRoot);\n        blockGraph.setEdge(uRoot, vRoot, Math.max(sepFn(g, v, u), prevMax || 0));\n      }\n\n      u = v;\n    });\n  });\n\n  return blockGraph;\n}\n/*\n * Returns the alignment that has the smallest width of the given alignments.\n */\n\n\nfunction findSmallestWidthAlignment(g, xss) {\n  return _.minBy(_.values(xss), function (xs) {\n    var max = Number.NEGATIVE_INFINITY;\n    var min = Number.POSITIVE_INFINITY;\n\n    _.forIn(xs, function (x, v) {\n      var halfWidth = width(g, v) / 2;\n      max = Math.max(x + halfWidth, max);\n      min = Math.min(x - halfWidth, min);\n    });\n\n    return max - min;\n  });\n}\n/*\n * Align the coordinates of each of the layout alignments such that\n * left-biased alignments have their minimum coordinate at the same point as\n * the minimum coordinate of the smallest width alignment and right-biased\n * alignments have their maximum coordinate at the same point as the maximum\n * coordinate of the smallest width alignment.\n */\n\n\nfunction alignCoordinates(xss, alignTo) {\n  var alignToVals = _.values(alignTo),\n      alignToMin = _.min(alignToVals),\n      alignToMax = _.max(alignToVals);\n\n  _.forEach([\"u\", \"d\"], function (vert) {\n    _.forEach([\"l\", \"r\"], function (horiz) {\n      var alignment = vert + horiz,\n          xs = xss[alignment],\n          delta;\n      if (xs === alignTo) return;\n\n      var xsVals = _.values(xs);\n\n      delta = horiz === \"l\" ? alignToMin - _.min(xsVals) : alignToMax - _.max(xsVals);\n\n      if (delta) {\n        xss[alignment] = _.mapValues(xs, function (x) {\n          return x + delta;\n        });\n      }\n    });\n  });\n}\n\nfunction balance(xss, align) {\n  return _.mapValues(xss.ul, function (ignore, v) {\n    if (align) {\n      return xss[align.toLowerCase()][v];\n    } else {\n      var xs = _.sortBy(_.map(xss, v));\n\n      return (xs[1] + xs[2]) / 2;\n    }\n  });\n}\n\nfunction positionX(g) {\n  var layering = util.buildLayerMatrix(g),\n      conflicts = _.merge(findType1Conflicts(g, layering), findType2Conflicts(g, layering));\n\n  var xss = {},\n      adjustedLayering;\n\n  _.forEach([\"u\", \"d\"], function (vert) {\n    adjustedLayering = vert === \"u\" ? layering : _.values(layering).reverse();\n\n    _.forEach([\"l\", \"r\"], function (horiz) {\n      if (horiz === \"r\") {\n        adjustedLayering = _.map(adjustedLayering, function (inner) {\n          return _.values(inner).reverse();\n        });\n      }\n\n      var neighborFn = (vert === \"u\" ? g.predecessors : g.successors).bind(g);\n      var align = verticalAlignment(g, adjustedLayering, conflicts, neighborFn);\n      var xs = horizontalCompaction(g, adjustedLayering, align.root, align.align, horiz === \"r\");\n\n      if (horiz === \"r\") {\n        xs = _.mapValues(xs, function (x) {\n          return -x;\n        });\n      }\n\n      xss[vert + horiz] = xs;\n    });\n  });\n\n  var smallestWidth = findSmallestWidthAlignment(g, xss);\n  alignCoordinates(xss, smallestWidth);\n  return balance(xss, g.graph().align);\n}\n\nfunction sep(nodeSep, edgeSep, reverseSep) {\n  return function (g, v, w) {\n    var vLabel = g.node(v),\n        wLabel = g.node(w),\n        sum = 0,\n        delta;\n    sum += vLabel.width / 2;\n\n    if (_.has(vLabel, \"labelpos\")) {\n      switch (vLabel.labelpos.toLowerCase()) {\n        case \"l\":\n          delta = -vLabel.width / 2;\n          break;\n\n        case \"r\":\n          delta = vLabel.width / 2;\n          break;\n      }\n    }\n\n    if (delta) {\n      sum += reverseSep ? delta : -delta;\n    }\n\n    delta = 0;\n    sum += (vLabel.dummy ? edgeSep : nodeSep) / 2;\n    sum += (wLabel.dummy ? edgeSep : nodeSep) / 2;\n    sum += wLabel.width / 2;\n\n    if (_.has(wLabel, \"labelpos\")) {\n      switch (wLabel.labelpos.toLowerCase()) {\n        case \"l\":\n          delta = wLabel.width / 2;\n          break;\n\n        case \"r\":\n          delta = -wLabel.width / 2;\n          break;\n      }\n    }\n\n    if (delta) {\n      sum += reverseSep ? delta : -delta;\n    }\n\n    delta = 0;\n    return sum;\n  };\n}\n\nfunction width(g, v) {\n  return g.node(v).width;\n}","var _ = require(\"./lodash\"),\n    util = require(\"./util\"),\n    Graph = require(\"./graphlib\").Graph;\n\nmodule.exports = {\n  debugOrdering: debugOrdering\n};\n/* istanbul ignore next */\n\nfunction debugOrdering(g) {\n  var layerMatrix = util.buildLayerMatrix(g);\n  var h = new Graph({\n    compound: true,\n    multigraph: true\n  }).setGraph({});\n\n  _.forEach(g.nodes(), function (v) {\n    h.setNode(v, {\n      label: v\n    });\n    h.setParent(v, \"layer\" + g.node(v).rank);\n  });\n\n  _.forEach(g.edges(), function (e) {\n    h.setEdge(e.v, e.w, {}, e.name);\n  });\n\n  _.forEach(layerMatrix, function (layer, i) {\n    var layerV = \"layer\" + i;\n    h.setNode(layerV, {\n      rank: \"same\"\n    });\n\n    _.reduce(layer, function (u, v) {\n      h.setEdge(u, v, {\n        style: \"invis\"\n      });\n      return v;\n    });\n  });\n\n  return h;\n}","module.exports = \"0.8.4\";"],"sourceRoot":""}